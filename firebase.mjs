import{initializeApp}from"https://www.gstatic.com/firebasejs/9.22.1/firebase-app.js";import{getAuth,onAuthStateChanged,sendSignInLinkToEmail,signInWithEmailLink,isSignInWithEmailLink,createUserWithEmailAndPassword,signInWithEmailAndPassword,sendPasswordResetEmail}from"https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js";import{getFirestore,serverTimestamp,Timestamp,collection,doc,addDoc,setDoc,getDocs,getDoc,updateDoc,arrayUnion,arrayRemove,query,where,deleteField}from"https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js";import{getStorage,ref,uploadBytes,getDownloadURL,list,deleteObject}from"https://www.gstatic.com/firebasejs/9.22.1/firebase-storage.js";const DOMAIN="@caldwell.edu",API_KEY="AIzaSyDtn21mi-DzG-TGErzkkaNqUifB-cC1KQQ",firebaseConfig={apiKey:API_KEY,authDomain:"lectureseats.firebaseapp.com",projectId:"lectureseats",storageBucket:"lectureseats.appspot.com",messagingSenderId:"911998665124",appId:"1:911998665124:web:27b4b44bcc6cd3b7054131",measurementId:"G-VT95CQX9DC",clientId:"911998665124-be5qcdaj4co3082a7kcn6so1638itpjo.apps.googleusercontent.com"},app=initializeApp(firebaseConfig);window.auth=getAuth(),window.onAuth=e=>onAuthStateChanged(window.auth,e),window.isSignInWithEmailLink=isSignInWithEmailLink,window.passwordReset=function(e){return sendPasswordResetEmail(window.auth,e+DOMAIN)},window.signIn=function(e,n){return signInWithEmailAndPassword(window.auth,e+DOMAIN,n)},window.signUp=function(e,n){return createUserWithEmailAndPassword(window.auth,e+DOMAIN,n)},window.sendEmailLink=async function(e){try{await sendSignInLinkToEmail(window.auth,e+DOMAIN,{url:window.location.href,handleCodeInApp:!0})}catch(e){return{error:e.code}}},window.trySigningInWithLink=async function(e,n){try{return await signInWithEmailLink(window.auth,n+DOMAIN,e)}catch(e){return{error:e.code}}};const storage=getStorage(),downloadURLs={};window.uploadFile=async function(e,n){try{return await uploadBytes(ref(storage,e),n)}catch(e){return{error:e.code}}},window.deleteFiles=async function(e){let n=[],r=new Set,t={};for(let t of(await list(ref(storage,e))).items)try{n.push(await deleteObject(ref(storage,t)))}catch(e){r.add(e.code)}return n.length&&(t.ok=n.length),1===r.size?t.error=[...r][0]:r.size&&(t.error=[...r]),t},window.getLinkFromStoragePath=async function(e){if(e)try{let n=downloadURLs[e];return n||(n=downloadURLs[e]=await getDownloadURL(ref(storage,e))),n}catch(e){return{error:e.code}}};const DATABASE=getFirestore(app);window.db={},window.db.serverTimestamp=serverTimestamp,window.db.Timestamp=Timestamp,window.db.now=()=>Timestamp.now().seconds,window.db.makeTimestamp=function(e,n=0){return e.constructor===Array&&(e=e.join(" ")),db.Timestamp.fromMillis(new Date(e).getTime()+6e4*n)},window.db.deleteField=deleteField,window.db.arrayUnion=arrayUnion,window.db.arrayRemove=arrayRemove,window.db.find=async function(e,...n){if(!navigator.onLine)return{error:"You are offline."};try{if(n)var r=await getDocs(query(collection(DATABASE,e),...n.map((e=>where(...e)))));else r=await getDocs(collection(DATABASE,e));let t={};return r.docs.forEach((e=>t[e.id]=e.data())),t}catch(e){return{error:e.code||"unknown error"}}},window.db.findOne=async function(e,n){if(!navigator.onLine)return{error:"You are offline."};try{var r=await getDoc(doc(DATABASE,e,n));return r.exists()?r.data():null}catch(e){return{error:e.code||"unknown error"}}},window.db.insertOne=async function(e,n,r){if(!navigator.onLine)return{error:"You are offline."};try{if(r){await setDoc(doc(DATABASE,e,r),n);return r}return(await addDoc(collection(DATABASE,e),n)).id}catch(e){return{error:e.code||"unknown error"}}},window.db.updateOne=async function(e,n,r,...t){if(!navigator.onLine)return{error:"You are offline."};try{return t.length?await updateDoc(doc(DATABASE,e,n),r,...t):await updateDoc(doc(DATABASE,e,n),r),!0}catch(e){return{error:e.code||"unknown error"}}},window.db.upsertOne=async function(e,n,r){if(!navigator.onLine)return{error:"You are offline."};try{return await updateDoc(doc(DATABASE,e,n),r),!0}catch(t){return"not-found"===t.code||"permission-denied"===t.code?await window.db.insertOne(e,r,n):{error:t.code||"unknown error"}}};