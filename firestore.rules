rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    //
    // using hashing Example:
    //  hashing.md5(request.auth.uid.toUtf8()).toBase64() == "foo"
    //  match /doc/{userID} {
    //    allow read, write: if hashing.md5(request.auth.uid.toUtf8()).toHexString() == userID;
    //  }
    // 
    // for updates use resource.data.fieldName to access stored value for fieldName
    //  for creates use request.resource.data.fieldName to access stored value for fieldName
    //
    // match /{document=**} {
      // allow read, write: if request.time < timestamp.date(2023, 7, 4);
      // allow read,write: if request.auth.token.email == 'vdv718@gmail.com';
    // }

    match /users/{userId} {
      // allow read,write: if request.auth.token.email == 'vdv718@gmail.com';
      allow read, update, delete: if request.auth != null && request.auth.token.email == userId;
      allow read:  if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.r > 0;
      allow create: if request.auth != null;
    }
    match /sections/{document} {
    	allow read: if request.auth != null;
      allow create,update,delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.r > 0;
    }
    match /rooms/{document} {
    	allow read: if request.auth != null;
      allow create,update,delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.r > 0;
    }
    match /attend/{document=**} {
      function hash(s){
        return hashing.md5(s).toHexString();
      }
      function user(e){
      	return e.split('@')[0].replace('\\.','_');
      }
      // allow students to write only if hash(_a)==a and if now()<e
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['_a', user(request.auth.token.email) ])
      	&& request.resource.data.a == hash(request.resource.data._a)
        && request.time.toMillis() < request.resource.data.e*1000;
      // allow instructors to do anything
      allow read,create,update,delete: if request.auth.token.email in resource.data.i;
      // allow admins to do anything
      allow read,create,update,delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.r > 0;
    }
  }
}