"use strict";const APP_LAST_UPDATE="2024-02-25",APP_TITLE="LectureSeats",VERSION="v0.2."+APP_LAST_UPDATE.replace(/-/g,"")+" (beta)";function showError(e){document.getElementById("main").style.display="hidden",document.getElementById("signin").style.display="hidden",document.getElementById("error").className="",document.getElementById("error").style.display="block",document.getElementById("errorDetails").innerHTML=`\n    <b>Error details:</b><br>\n    ${APP_TITLE} ${VERSION}:\n    <pre>${e.stack||e}</pre>\n  `}try{(function(){const DOMAIN="@caldwell.edu",DEFAULT_CLASS_LOCATION=[40.83352325048076,-74.27245652688725,"Caldwell University, 120 Bloomfield Avenue, Caldwell, NJ 07006"],DEFAULT_TERM="2024Spring",DEFAULT_GRADING_EQUATION="( 100 * P + 50 * L ) / N",USERNAME_FROM_EMAIL_DOT_REPLACEMENT=" ",SEMESTER_SECTION_SEPARATOR="|",INSTRUCTOR=1,ADMIN=2,PHOTO_TIMEOUT=6e5,DEFAULT_USER_IMG="user-icon.png",STATUS_EXCUSED=2,STATUS_ABSENT=1,STATUS_PRESENT=0,STATUS_ERROR_MARKING_ATTENDANCE=-1,PHOTO_NEXT_TIMER=3500,PHOTO_SIZE=200,cUSERS="users",cATTENDANCE="attend",cSECTIONS="sections",cROOMS="rooms",fATTENDANCES="a",fATTENDANCE_CODE="c",fABSENCE_STATUS="u",fDATETIME="d",fDURATION="m",fENROLLED_SECTIONS="e",fNAME="n",fLAST_NAME="f",fPHOTO="p",fSEAT="s",fLOCATION="l",fNOTES="nt",fROLE="rl",fROOM_ID="r",fROOM_NAME="rn",fROOM_LAYOUT="rm",fBUILDING="bl",fCAMPUS="cm",fSECTION_CROSS_LISTED="x",fSECTION_TITLE="t",fSECTION_PATTERN="pt",fSECTION_GRADING="g",fSECTION_LATE="gl",fSECTION_REQUIRED_ATTENDANCE_FIELDS="rq",fINSTRUCTOR_EMAILS="i",fINSTRUCTOR_NAMES="in",fVISIBLE="v",fPER_USER="b",tSECTION_ID="Section",tEMAIL="Email",tUSER_ID="Username",tNAME="Name",tLAST_NAME="Last Name",tATTENDANCE_GRADE="Attendance-Grade",tON_TIME="On-time",tLATE="Late",tABSENT="Absent",ATTEND_TABLE_ROW_HEADERS=[tEMAIL,tUSER_ID,tLAST_NAME,tNAME,tSECTION_ID,tATTENDANCE_GRADE,tON_TIME,tLATE,tABSENT],ATTEND_TABLE_ROW_HEADER_PRIORITY=[tLAST_NAME,tNAME,tUSER_ID,tSECTION_ID,tATTENDANCE_GRADE,tABSENT,tLATE,tON_TIME,tEMAIL],ATTEND_TABLE_DATA_COL_OFFSET=ATTEND_TABLE_ROW_HEADERS.length,EQUATION_TEST_CASES=[{P:10,L:0,E:0,A:0},{P:8,L:2,E:0,A:0},{P:8,L:0,E:0,A:2},{P:4,L:2,E:2,A:2},{P:0,L:0,E:0,A:10}],ALPHABET="abcdefghijklmnopqrstuvwxyz",semesterSectionId=(e,t)=>e+SEMESTER_SECTION_SEPARATOR+t,getSemesterSectionFromId=e=>e.split(SEMESTER_SECTION_SEPARATOR),formatSeatCode=e=>e?e.replace(/\s/g,"").toUpperCase():"",$=document.querySelector.bind(document),$$=document.querySelectorAll.bind(document),isBool=e=>e?.constructor===Boolean,isNum=e=>e?.constructor===Number&&!isNaN(e),isStr=e=>e?.constructor===String,isObj=e=>e?.constructor===Object,isArr=e=>e?.constructor===Array;function shallowEquals(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(let n in e)if(e[n]!==t[n])return!1;return!0}function shuffled(e){return e.map((e=>({r:e,sort:Math.random()}))).sort(((e,t)=>e.sort-t.sort)).map((({r:e})=>e))}function randInt(e){return Math.floor(Math.random()*e)}function makeFirstElementChild(e,t){e.firstElementChild!==t&&e.insertBefore(t,e.firstElementChild)}function hide(e){(isStr(e)?document.getElementById(e):e).classList.add("hidden")}function show(e){(isStr(e)?document.getElementById(e):e).classList.remove("hidden")}function showToggle(e){(isStr(e)?document.getElementById(e):e).classList.toggle("hidden")}function showHide(e,t){isArr(e)||(e=[e]),isArr(t)||(t=[t]),e.forEach(show),t.forEach(hide)}function isHidden(e){return null===e.offsetParent}function niceEquation(e){return e.replace(/<=/g,"≤").replace(/>=/g,"≥").replace(/!=/g,"≠").replace(/=+/g,"=")}function spacedEquation(e){return e.toUpperCase().replace(/\s+/g,"").replace(/[=]+/g,"=").replace(/[.]+/g,".").replace(/[&]+/g,"&").replace(/[|]+/g,"|").split("").join(" ").replace(/(?<=[\d.])[\s](?=[\d.])/g,"").replace(/(?<=[<>!])[\s](?=[=])/g,"")}function illegalEquation(e){return e.split(" ").filter((e=>!e.match(/^([PLANE?:=!<>≠≤≥&|+\-*/%^_\(\)]|([<>!]=)|([\d.]+))$/)))}function executeEquation(eq,vars){try{if(eq=spacedEquation(eq),illegalEquation(eq).length)return"Invalid";vars.N=vars.P+vars.L+vars.A,eq=eq.replace(/ = /g," == ").replace(/≠/g,"!=").replace(/≤/g,"<=").replace(/≥/g,">=").replace(/&/g,"&&").replace(/\|/g,"||").replace(/\^/g,"**").replace(/_/g,"~~");for(let e in vars){let t=new RegExp(e,"g");eq=eq.replace(t,vars[e])}return eval(eq)}catch(e){return"Invalid"}}function sortTable(e,t,n={}){t?.length&&e.sort(((t,a)=>{let o,i;for(let r of attendanceTable.sortStack){if(o=n[t[r]]||t[r],i=n[a[r]]||a[r],o>i)return e.sortDesc[r]?-1:1;if(i>o)return e.sortDesc[r]?1:-1}}))}function tsv2arr(e){return e.split("\n").map((e=>e.split("\t")))}function pad0(e,t=2){return e.toString().padStart(t,"0")}function getDateTime(e){let t;return t=e?new Date(e?.constructor===db.Timestamp?1e3*e.seconds:e):new Date,[t.getFullYear()+"-"+pad0(t.getMonth()+1)+"-"+pad0(t.getDate()),pad0(t.getHours())+":"+pad0(t.getMinutes())]}async function getLocation(){try{return(await new Promise((function(e,t){navigator.geolocation.getCurrentPosition(e,t,{maximumAge:3e5,timeout:5e3,enableHighAccuracy:!0})}))).coords}catch(e){return{error:e.message}}}function download(e,t){var n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download",e),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function spinOnce(e){e.style.animation="",e.offsetWidth,e.style.animation="spin 0.5s",setTimeout((()=>e.style.animation=""),500)}var imgCarousel=[];function nextImgInCarousel(e,t,n){n?(imgCarousel=n).indx=0:imgCarousel.indx=(imgCarousel.indx+(e||1+randInt(imgCarousel.length-1)))%imgCarousel.length,t&&(imgCarousel.target=t),imgCarousel.target&&(imgCarousel.target.src=imgCarousel[imgCarousel.indx])}var draggableOffsetX=0,draggableOffsetY=0,draggable,dragOnComplete;function makeDraggable(e,t,n){draggable=e,dragOnComplete=n,t.addEventListener("mousedown",dragMouseDown,!1)}function dragMouseDown(e){let t=e.target.getBoundingClientRect();draggableOffsetX=t.x-e.clientX,draggableOffsetY=t.y-e.clientY,window.addEventListener("mousemove",dragDivMove,!0)}function dragDivMove(e){draggable.style.position="fixed",draggable.style.top=e.clientY+draggableOffsetY+"px",draggable.style.left=e.clientX+draggableOffsetX+"px"}function enableDragToScroll(e){let t,n,a,o,i=!1;e.addEventListener("mousedown",(r=>{i=!0,e.classList.add("dragging"),t=r.pageX-e.offsetLeft,n=r.pageY-e.offsetTop,a=e.scrollLeft,o=e.scrollTop})),e.addEventListener("mouseleave",(t=>{i&&(i=!1,e.classList.remove("dragging"))})),e.addEventListener("mouseup",(t=>{i&&(Math.round(a)===Math.round(e.scrollLeft)&&Math.round(o)===Math.round(e.scrollTop)||(t.preventDefault(),t.stopPropagation(),window.addEventListener("click",(e=>{e.stopPropagation()}),{capture:!0,once:!0})),i=!1,e.classList.remove("dragging"))})),e.addEventListener("mousemove",(r=>{i&&(r.preventDefault(),r.stopPropagation(),e.scrollLeft=a-3*(r.pageX-e.offsetLeft-t),e.scrollTop=o-3*(r.pageY-e.offsetTop-n))}))}window.addEventListener("mouseup",(()=>{window.removeEventListener("mousemove",dragDivMove,!0),dragOnComplete&&dragOnComplete(draggable.style.left,draggable.style.top)}),!1);const EARTH_RADIUS=6378137,DEGREES_PER_METER=1/(EARTH_RADIUS*Math.PI/180);function metersToLatitude(e){return e*DEGREES_PER_METER}function metersToLongitude(e,t){return e*DEGREES_PER_METER/Math.cos(t*Math.PI/180)}function createMapInDiv(e,t,n,a,o){let i=L.map(e,{});L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(i);let r=metersToLatitude(a),s=metersToLongitude(a,t);i.fitBounds([[t-r,n-s],[t+r,n+s]]);let l=L.circle([t,n],{radius:a}).addTo(i);o&&i.on("moveend",(e=>{let t=i.getCenter();t=[t.lat,t.lng],o(t),l.setLatLng(t)}))}var distancesBetweenCoords={},userDoc;function getDistanceBetweenCoords(e,t){let n=e+","+t;if(n in distancesBetweenCoords)return distancesBetweenCoords[n];let[a,o]=e,[i,r]=t;const s=a*Math.PI/180,l=i*Math.PI/180,d=(i-a)*Math.PI/180,c=(r-o)*Math.PI/180,u=Math.sin(d/2)*Math.sin(d/2)+Math.cos(s)*Math.cos(l)*Math.sin(c/2)*Math.sin(c/2);let S=6371e3*(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)));return distancesBetweenCoords[n]=S,S}async function getAddr(e,t){let n=await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${e}&lon=${t}&format=json`);if(n.ok)return(await n.json()).display_name}function validName(e){return(e=e.trim()).split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}function emailFromUserId(e){return e.replaceAll(USERNAME_FROM_EMAIL_DOT_REPLACEMENT,".")+DOMAIN}function usernameFromUserId(e){return e.replaceAll(USERNAME_FROM_EMAIL_DOT_REPLACEMENT,".")}function userIdFromEmail(e){try{return e.split("@")[0].replaceAll(".",USERNAME_FROM_EMAIL_DOT_REPLACEMENT)}catch(e){}}function isValidEmailLocal(e){return e?.target&&(e=e.target.value),e.search(/(^(?!(__)))(?!.*(\.\.))(^([a-zA-Z0-9-_.]+)$)/)>=0}function validateInputForFieldName(e,t){let n=e.value.search(/(^(?!(__)))(^([a-zA-Z0-9-_]+)$)/)>=0;return n||(e.value=e.value.replace(/[^A-Za-z0-9-_]+/g,"").replace(/^_+/,"_"),t&&toast(t+" can only contain letters, numbers, dashes, and underscores.\nCannot start with two underscores.")),n}async function signOut(){delete window.loadPath,await auth.signOut(),location.reload()}async function checkSignIn(e){if(e){if(showHide([mainDiv,"user"],"signin"),$("#userDisplayName").innerText=e.email,!auth.currentUser.emailVerified&&!e.email.startsWith("_test_"))return $("#emailVerificationEmail").innerText=e.email,localStorage.verificationEmailSent?$("#emailVerificationLinkDate").innerText=localStorage.verificationEmailSent:await verifyEmail(),void forceInMain("emailVerification","Please verify your email address before proceeding.");if(delete localStorage.verificationEmailSent,(userDoc=await db.getDoc(cUSERS,e.email))?.error)return void showInMain("dbError");if(null===userDoc){userDoc={};let t=await db.insertOne(cUSERS,e.email,userDoc);if(t.error)return void toastError("Could not add user to database.\n\n"+t.error.code)}let t;userDoc[fNAME]&&userDoc[fLAST_NAME]||forceInMain("profile","Please enter your last name and your preferred name and save."),userDoc[fENROLLED_SECTIONS]||(userDoc[fENROLLED_SECTIONS]={}),localStorage.semesterSelected&&!userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]&&(userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]={}),nameInput.value=nameInput.lastValue=userDoc[fNAME]||"",lastNameInput.value=lastNameInput.lastValue=userDoc[fLAST_NAME]||"",userDoc[fROLE]&ADMIN&&(show("allSectionsBtn"),show("manageUsersBtn")),(userDoc[fROLE]&INSTRUCTOR||userDoc[fROLE]&ADMIN)&&show("roomsBtn"),localStorage.markAttendanceSectionId&&showMarkAttendance(),localStorage.takingAttendance&&parseInt(localStorage.attendanceEndtime)>db.now()&&await showGetAttendance();let n=$("#semesterSelect");if(1==n.children.length){let e=await getSemesters();for(let a of e)t=n.appendChild(document.createElement("option")),t.id=t.value=t.innerText=a,t.id==localStorage.semesterSelected&&(t.setAttribute("selected",!0),showEnrolledAndTeachingSections(a))}}else if(userDoc=null,delete localStorage.takingAttendance,delete localStorage.attendanceEndtime,showHide("signin",[mainDiv,"user"]),$("#signInSendEmailInput").value=$("#signInEmailInput").value=localStorage.email||"",isSignInWithEmailLink(auth,window.loadPath||"")){delete localStorage.signInLinkSent;let e=await trySigningInWithLink(window.loadPath,localStorage.email);"auth/invalid-action-code"===e?.error?toastError("This sign-in link has expired.\nPlease enter your username and click the [Send sign-in link] button to receive a new link."):"auth/invalid-email"===e?.error?(localStorage.email="",showInSignin("signinConfirmEmail")):e?.error&&toastError("Could not sign in.\n\n"+e.error)}else localStorage.email&&localStorage.signInLinkSent&&showSigninLinkSent()}async function verifyEmail(){try{await sendEmailVerification(window.auth.currentUser),localStorage.verificationEmailSent=getDateTime().join(" at "),$("#emailVerificationLinkDate").innerText=localStorage.verificationEmailSent,toast("Email verification link was sent to "+auth.currentUser.email)}catch(e){"auth/too-many-requests"===e.code?toastError("Cannot send another email yet.\nPlease wait a few minutes before retrying."):toastError("Could not send email.\n"+e.code)}}function showPasswordlessSignin(){localStorage.email&&localStorage.signInLinkSent?showSigninLinkSent():showInSignin("signinSendEmail")}function hideSigninLinkSent(){delete localStorage.signInLinkSent,showInSignin("signinSendEmail")}function showSigninLinkSent(){$("#signinLinkSent > div:first-child").innerHTML=`We sent an email with a sign-in link to ${localStorage.email}${DOMAIN} on ${localStorage.signInLinkSent}.<p>The email subject should be "Sign in to ${APP_TITLE}".<p>Please go to your email and click on the sign-in link.`,showInSignin("signinLinkSent")}async function signInSendButtonClick(){if(!isValidEmailLocal($("#signInSendEmailInput").value))return void toastError("Invalid email address.");if(localStorage.email=$("#signInSendEmailInput").value=$("#signInSendEmailInput").value.trim().toLowerCase(),!localStorage.email)return void toast("Please enter your username.");let e=await sendEmailLink(localStorage.email);"auth/invalid-email"===e?.error?(toastError(`${localStorage.email}${DOMAIN} is not a valid email address.`),localStorage.email=""):e?.error?toastError(`Could not send sign-in email to ${localStorage.email}${DOMAIN}.\n\n${e.error}`):(localStorage.signInLinkSent=getDateTime().join(" at "),showSigninLinkSent())}async function signInCompleteButtonClick(){if(localStorage.email=$("#signInConfirmEmailInput").value.trim(),!localStorage.email)return void toast("Please enter your username and click the [Sign in] button.");let e=await trySigningInWithLink(window.loadPath,localStorage.email);"auth/invalid-email"===e?.error?(toastError(`Email ${localStorage.email}${DOMAIN} does not match the email address to which the link was sent.`),localStorage.email=""):e?.error&&toastError("Could not sign in.\n\n"+e.error)}function authErrorHandling(e,t){switch(e.code){case"auth/email-already-in-use":toastError(`Email address ${$("#signInEmailInput").value}${DOMAIN} already in use.`);break;case"auth/invalid-email":toastError(`Email address ${$("#signInEmailInput").value}${DOMAIN} is invalid.`);break;case"auth/operation-not-allowed":toastError("Error during sign up.");break;case"auth/user-not-found":toastError(`User ${$("#signInEmailInput").value}${DOMAIN} not found.`+(t?"":"\nDid you mean to click the Register button?"));break;case"auth/wrong-password":toastError("Wrong password.");break;case"auth/missing-password":toastError("No password provided.");break;case"auth/weak-password":toastError("Password is not strong enough. Add additional characters including special characters and numbers.");break;default:toastError("Unable to perform action.\n"+e.message);break}}function signInButtonClick(){$("#signInEmailInput").value=$("#signInEmailInput").value.trim().toLowerCase(),localStorage.email=$("#signInEmailInput").value,signIn($("#signInEmailInput").value,$("#signInPasswordInput").value).catch(authErrorHandling)}function registerButtonClick(){isValidEmailLocal($("#signInEmailInput").value)?($("#signInEmailInput").value=$("#signInEmailInput").value.trim().toLowerCase(),signUp($("#signInEmailInput").value,$("#signInPasswordInput").value).then((e=>{})).catch(authErrorHandling)):toastError("Invalid email address.")}async function resetPassword(){$("#signInEmailInput").value=$("#signInEmailInput").value.trim().toLowerCase(),isValidEmailLocal($("#signInEmailInput").value)?$("#signInEmailInput").value?await promptF(`Would you like to send an email with a password-reset link to ${$("#signInEmailInput").value}${DOMAIN}?`)&&passwordReset($("#signInEmailInput").value).then((()=>{toast("Password reset email sent.","",1)})).catch((e=>authErrorHandling(e,!0))):toast("You must enter your email address to reset your password."):toastError("Invalid email address.")}window.addEventListener("load",(async function(){if(!window.onAuth)return void showError("Could not load firebase.mjs");if(navigator.userAgent.includes("Firefox"))return showHide("error",[mainDiv,"signin"]),void($("#error").innerHTML="Sorry, this app does not work on Firefox.<p>Please use Chrome, Edge, or Safari for best experience.");let e;setInterval((()=>{e&&navigator.onLine?(allowNav(),showInMain("sections"),e=!1):e||this.navigator.onLine||(forceInMain("offlineError"),e=!0)}),500),setTimeout((()=>location.reload()),864e5),document.title=APP_TITLE,$$(".domainName").forEach((e=>e.innerText=DOMAIN)),$("#versionInfo").innerText=`${APP_TITLE} ${VERSION}\n\nApplication last updated on: ${APP_LAST_UPDATE}.\n`,window.loadPath=window.location.href;let t=new URLSearchParams(location.search);if(window.history.pushState(null,APP_TITLE,location.origin+this.location.pathname),t.has("s")){let[e,n]=getSemesterSectionFromId(t.get("s"));localStorage.semesterSelected=e,localStorage.markAttendanceSectionId=n}else localStorage.semesterSelected||(localStorage.semesterSelected=DEFAULT_TERM);t.has("c")&&(localStorage.markAttendanceCode=t.get("c")),onAuth(checkSignIn,(e=>toastError("Authentication error.\n\n"+e)))}));const mainDiv=$("#main");var navAllowed=!0,navDisallowMessage;function allowNav(){navAllowed=!0,navDisallowMessage=null}function disallowNav(e){navAllowed=!1,navDisallowMessage=e}function showInSignin(e){makeFirstElementChild($("#signin"),$("#"+e))}function showInMain(e){navAllowed?window.location.hash=e:navDisallowMessage&&toast(navDisallowMessage)}function forceInMain(e,t){makeFirstElementChild(mainDiv,$("#"+e)),disallowNav(t)}function navigateBack(){navAllowed&&history.back()}function loadingScreen(e){e?(show("loading"),disallowNav()):(hide("loading"),allowNav())}window.onhashchange=function(e){navAllowed?(makeFirstElementChild(mainDiv,$(location.hash||"#sections")),mainDiv.scrollTop=0):"#_"!==location.hash&&(location.hash="#_")},window.addEventListener("keydown",(e=>{"Escape"===e.key&&($("#infoScreen").classList.contains("hidden")?navigateBack():hide("infoScreen"))})),window.addEventListener("popstate",(e=>{hide("infoScreen")}));var allSections={},allRooms={},allAttendances={},allUsers={},allUserSearches={};async function getSemesters(){return["2023Fall","2024Winter","2024Spring","2024Summer","2024Fall"]}function getAttendanceInfoRequirements(e){return e=Object.fromEntries((e||"").split("").reduce(((e,t,n)=>(n%2?e[e.length-1].push(t):e.push([t]))&&e),[])),{[fLOCATION]:e[fLOCATION]?parseInt(e[fLOCATION]):-1,[fPHOTO]:e[fPHOTO]?parseInt(e[fPHOTO]):-1,[fSEAT]:e[fSEAT]?parseInt(e[fSEAT]):-1}}function makeRequiredAttendanceFieldsString(e){let t="";return e[fLOCATION]>=0&&(t+=fLOCATION+e[fLOCATION]),e[fPHOTO]>=0&&(t+=fPHOTO+e[fPHOTO]),e[fSEAT]>=0&&(t+=fSEAT+e[fSEAT]),t}async function getSections(e){if(e&&!allSections[e])if(allSections[e]=await db.getDoc(cSECTIONS,e),null===allSections[e])allSections[e]={};else{if(allSections[e].error)return void toastError("Something went wrong.\n\nTry to reload.");for(let t in allSections[e]){let n=allSections[e][t],a=getAttendanceInfoRequirements(n[fSECTION_REQUIRED_ATTENDANCE_FIELDS]);Object.assign(n,a)}}return allSections[e]}async function getSection(e,t){let n=await getSections(e);if(n[t])return n[t].id=t,n[t]}async function getRooms(e){return!e&&allRooms._gotAllRooms||((allRooms=await db.find(cROOMS))._gotAllRooms=!0),allRooms}async function getRoom(e){return e in allRooms||(allRooms[e]=await db.getDoc(cROOMS,e)),allRooms[e]}async function getRoomLayout(e){return tsv2arr((await getRoom(e))[fROOM_LAYOUT].toUpperCase())}async function getAttendance(e,t,n){isArr(t)||(t=[t]);var a=[];for(var o of(a._docs=[],a._sectionIds=[],t)){let t=semesterSectionId(e,o);if(n||!allAttendances[t])if(allAttendances[t]=await db.getDoc(cATTENDANCE,t),null===allAttendances[t])allAttendances[t]={};else{if(allAttendances[t].error)return void toastError("Something went wrong.\n\nPlease try again.");for(let e in allAttendances[t])e.length>1&&(allAttendances[t][e][tEMAIL]=emailFromUserId(e),allAttendances[t][e][tUSER_ID]=e,allAttendances[t][e][tSECTION_ID]=o,Object.entries(allAttendances[t][e][fATTENDANCES]).forEach((([e,t])=>{let n=getDateTime(t[fDATETIME]);t.date=n[0],t.time=n[1],t.code=e})))}a.push(...Object.entries(allAttendances[t]).filter((([e,t])=>e.length>1)).map((([e,t])=>t))),a._docs.push(allAttendances[t])}return a._sectionIds=t,a}async function searchUsers(e,t){if(!e)return{};if(isArr(e))return Object.assign(...await Promise.all(e.map((e=>searchUsers(e,t)))));e=t?t===fNAME||t===fLAST_NAME?validName(e):e:e.toLowerCase();let n=t?t+":"+e:e,a=allUserSearches[n];return a?Object.fromEntries(a.map((e=>[e,allUsers[e]]))):t&&t!==fNAME&&t!==fLAST_NAME||(a=Object.entries(allUserSearches).filter((e=>n.startsWith(e[0]))).map((e=>e[1]))[0],!a)?(a=t?t===fNAME||t===fLAST_NAME?await db.find(cUSERS,db.orderBy(t),...db.startsWith(t,e)):await db.find(cUSERS,db.orderBy(t),db.where(t,"==",e)):await db.find(cUSERS,db.orderBy(db.documentId()),...db.startsWith(db.documentId(),e)),a.error||(Object.assign(allUsers,a),allUserSearches[n]=Object.keys(a)),a):(a=a.map((e=>[e,allUsers[e]])),Object.fromEntries(a.filter((n=>t?n[1][t].startsWith(e):n[0].startsWith(e)))))}async function getUsers(e){let t={},n=[];for(let a of e)a in allUsers?t[a]=allUsers[a]:n.push(a);if(!n.length)return t;for(let e=0;e<n.length;e+=30){let a=await db.find(cUSERS,db.where(db.documentId(),"in",n.slice(e,e+30)));if(a.error)return a;Object.assign(t,a),Object.assign(allUsers,a)}return t}async function getUser(e){let t=allUsers[e];if(t)return t;let n=await db.getDoc(cUSERS,e);return n?.error||n&&(allUsers[e]=n),n}function getCachedUsersFromAttend(e){let t={},n=Object.assign({},...Object.values(allAttendances));for(let a of e){let e=userIdFromEmail(a);e in n&&(t[a]={[fLAST_NAME]:n[e][fLAST_NAME],[fNAME]:n[e][fNAME]})}return t}function fullName(e,t="",n=""){if(!e[fNAME]&&!e[fLAST_NAME])return"";let a;return a=e[fNAME]&&e[fLAST_NAME]?e[fNAME].split(" ").includes(e[fLAST_NAME])?e[fNAME]:e[fLAST_NAME]+", "+e[fNAME]:e[fNAME]||e[fLAST_NAME],t+a+n}const markAttendanceSectionId=$("#markAttendanceSectionId"),markAttendanceClassCodeInput=$("#markAttendanceClassCodeInput"),markAttendanceLocation=$("#markAttendanceLocation");async function showMarkAttendance(e,t){if(showInMain("markAttendance"),!e){if(e=localStorage.markAttendanceSectionId,delete localStorage.markAttendanceSectionId,(t=await getSection(localStorage.semesterSelected,e))[fSECTION_CROSS_LISTED]?.length){let n=[e].concat(t[fSECTION_CROSS_LISTED]),a=n.filter((e=>e in userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]));if(a.length)e=a[0];else{e=(await promptF("Please choose which section you are enrolled in.",{},n)).clicked}}userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected][e]||(userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected][e]={})}const n=userIdFromEmail(auth.currentUser.email);t[fPER_USER]&&t[fPER_USER][n]?markAttendanceSectionId._sectionDoc=Object.assign({},t,getAttendanceInfoRequirements(t[fPER_USER][n])):markAttendanceSectionId._sectionDoc=t,markAttendanceSectionId.innerText=e,$("#markAttendanceRemoveButtonSectionId").innerText=e,$("#markAttendanceSectionInfo").innerText=sectionInfoText(markAttendanceSectionId._sectionDoc),markAttendanceClassCodeInput.value=localStorage.markAttendanceCode||"",delete localStorage.markAttendanceCode,t[fSEAT]<0?hide("markAttendanceSeatContainer"):(show("markAttendanceSeatContainer"),t[fSEAT]>0?$('label[for="markAttendanceSeatCodeInput"]').classList.add("required"):$('label[for="markAttendanceSeatCodeInput"]').classList.remove("required"),$("#markAttendanceSeatCodeInput").value=""),markAttendanceSectionId._sectionDoc[fPHOTO]<0?hide("markAttendancePhotoContainer"):(showHide(["markAttendancePhotoContainer","defaultSelfieImg","addPhotoBtn"],[selfieCanvas,selfieVideo,"snapPhotoBtn","switchPhotoBtn"]),markAttendanceSectionId._sectionDoc[fPHOTO]>0?$('label[for="selfieCanvas"]').classList.add("required"):$('label[for="selfieCanvas"]').classList.remove("required")),markAttendanceSectionId._sectionDoc[fLOCATION]<0?hide("markAttendanceLocationContainer"):(show("markAttendanceLocationContainer"),markAttendanceSectionId._sectionDoc[fLOCATION]>0?$('label[for="markAttendanceLocation"]').classList.add("required"):$('label[for="markAttendanceLocation"]').classList.remove("required")),showMarkedAttendances(localStorage.semesterSelected,e),checkMissingAttendanceInfo()}async function validateSeat(e,t){return!t||((e=formatSeatCode(e))?(await getRoomLayout(t)).flat().indexOf(e)>=0:void 0)}async function markAttendanceGetLocation(){if(spinOnce($("#locationMissingBtn")),spinOnce($("#locationMissingBtn2")),(await getLocation()).error){let e=markAttendanceSectionId._sectionDoc[fLOCATION];toast("Please make sure your location permissions are enabled and try again.\nNote: You may need to reload this page after enabling your camera.\n\n"+LOCATION_PERMISSIONS_INSTRUCTIONS,"Unable to get location",e>1?-1:e>0?-.5:0)}checkMissingAttendanceInfo()}async function checkMissingAttendanceInfo(){const e=$("#markAttendanceRequirementsList");e.innerHTML="";let t=!1;if(markAttendanceClassCodeInput.value||(e.appendChild(document.createElement("li")).innerText="Attendance passcode",t=!0),markAttendanceSectionId._sectionDoc[fLOCATION]>-1&&!markAttendanceLocation.value){let n=await getLocation();n.error?(hide(markAttendanceLocation),markAttendanceSectionId._sectionDoc[fLOCATION]>0?(showHide("markAttendanceLocationOffButRequired","markAttendanceLocationOff"),e.appendChild(document.createElement("li")).innerText="Location",markAttendanceSectionId._sectionDoc[fLOCATION]>1&&(t=!0)):showHide("markAttendanceLocationOff","markAttendanceLocationOffButRequired")):(markAttendanceLocation.value=n,showHide(markAttendanceLocation,["markAttendanceLocationOffButRequired","markAttendanceLocationOff"]))}if(markAttendanceSectionId._sectionDoc[fSEAT]>0&&!await validateSeat($("#markAttendanceSeatCodeInput").value,markAttendanceSectionId._sectionDoc[fROOM_ID])&&(e.appendChild(document.createElement("li")).innerText="Valid seat code",markAttendanceSectionId._sectionDoc[fSEAT]>1&&(t=!0)),markAttendanceSectionId._sectionDoc[fPHOTO]>-1){let n=selfieBlob?.size&&photoTakenTime&&(new Date).getTime()-photoTakenTime<PHOTO_TIMEOUT;markAttendanceSectionId._sectionDoc[fPHOTO]>0&&!n&&(showHide("defaultSelfieImg",[selfieCanvas,selfieVideo]),selfieBlob=photoTakenTime=null,e.appendChild(document.createElement("li")).innerText="New photo",markAttendanceSectionId._sectionDoc[fPHOTO]>1&&(t=!0))}e.innerHTML?show("markAttendanceRequirements"):hide("markAttendanceRequirements"),t?$("#markAttendanceButton").setAttribute("disabled",!0):$("#markAttendanceButton").removeAttribute("disabled")}function showMarkedAttendances(e,t){const n=$("#attendanceMarked");let a=Object.values(userDoc[fENROLLED_SECTIONS][e][t]).sort(((e,t)=>e[fDATETIME]-t[fDATETIME]));if(a?.length){n.innerHTML="";let e=n.appendChild(document.createElement("summary")),t=n.appendChild(document.createElement("small")),o=0,i=0,r=0;for(let e of a){let n=getDateTime(e[fDATETIME]),a=t.appendChild(document.createElement("div")),s=n[0]+" ";e[fABSENCE_STATUS]===STATUS_ABSENT?(s+="absent",a.setAttribute("absent",!0),i++):e[fABSENCE_STATUS]===STATUS_EXCUSED?(s+="absence excused",a.setAttribute("excused",!0),r++):e[fABSENCE_STATUS]===STATUS_ERROR_MARKING_ATTENDANCE?(s+=n[1]+" failed to mark attendance",a.setAttribute("absent",!0)):(s+=n[1],o++),e[fNOTES]&&(s+=" <small>("+e[fNOTES]+")</small>"),a.innerHTML=s}e.innerHTML=`${o} attendance(s) marked; ${i} unexcused absence(s); ${r} excused absence(s)`,mainDiv.scrollTop=0}else n.innerHTML=""}async function checkInfoAndMarkAttendance(){if(markAttendanceLocation.value=null,await checkMissingAttendanceInfo(),$("#markAttendanceButton").getAttribute("disabled"))toast("Missing some of the required fields.","",-1);else{if(markAttendanceRequirementsList.innerHTML&&!await promptF(`Your instructor requests the following information that you have not supplied:\n${markAttendanceRequirementsList.innerHTML}\n\nAre you sure you would like to mark attendance as is?\n\nPress Cancel to go back and add all of the required information.\nPress OK to mark your attendance without the requested information.`))return;let e=markAttendanceClassCodeInput.value,t=markAttendanceSectionId.innerText,n=localStorage.semesterSelected;if(e in userDoc[fENROLLED_SECTIONS][n][t]&&!userDoc[fENROLLED_SECTIONS][n][t][e][fABSENCE_STATUS])return void toast("You are already marked present, no need to do it again.");loadingScreen(!0);let a=$("#markAttendanceSeatCodeInput").value,o=markAttendanceLocation.value;o&&(o=[o.latitude,o.longitude,Math.round(o.accuracy)]);let i=await markAttendance(n,t,e,a,selfieBlob,o);i?.error?(showMarkedAttendances(n,t),toast(i.error,"Your attendance was NOT marked.",-1)):i?.warning?(showMarkedAttendances(n,t),toastWarn(i.warning,-.1)):(showMarkedAttendances(n,t),toast("Your attendance was marked.","Success!",1)),loadingScreen(!1)}}function photoStoragePath(e,t,n,a){return[e,t,n,a+".jpg"].join("/")}function photoStorageFolderPath(e,t,n){return[e,t,n].join("/")}async function markAttendance(e,t,n,a,o,i){const r=userIdFromEmail(auth.currentUser.email);let s={[fDATETIME]:db.serverTimestamp()},l={[`${r}.${fNAME}`]:userDoc[fNAME],[`${r}.${fLAST_NAME}`]:userDoc[fLAST_NAME],[`${r}.${fATTENDANCES}.${n}`]:s};o?.size&&(photoId=photoStoragePath(r,e,t,n),s[fPHOTO]=!0,l[`${r}.${fPHOTO}`]=photoId),a&&(s[fSEAT]=a),i&&(s[fLOCATION]=i);let d=await db.updateOne(cATTENDANCE,semesterSectionId(e,t),l);if(d?.error)return userDoc[fENROLLED_SECTIONS][e][t][n]={[fDATETIME]:db.Timestamp.now(),[fABSENCE_STATUS]:STATUS_ERROR_MARKING_ATTENDANCE},{error:"Please make sure the instructor is taking attendance, and that your attendance passcode is correct."};let c="",u=[];return o?.size&&(d=await uploadFile(photoId,o),d?.error&&(c+="- we were unable to save your photo\n",u.push("photo not saved"))),d=await db.updateOne(cUSERS,auth.currentUser.email,{[fENROLLED_SECTIONS+"."+e+"."+t+"."+n]:{[fDATETIME]:db.serverTimestamp()}}),d?.error&&(c+="- we were unable to save your attendance receipt\n",u.push("missing receipt")),userDoc[fENROLLED_SECTIONS][e][t][n]={[fDATETIME]:db.Timestamp.now(),[fNOTES]:u.length?u.join(", "):""},c?{warning:"Your attendance was marked (the instructor knows you attended).\nHOWEVER:\n"+c}:void 0}async function removeSectionFromStudent(){let e="Are you sure you would like to remove this section from the list of sections you are enrolled in?";if($("#attendanceMarked").innerHTML&&(e+="\n\nWARNING: This action will delete all of your attendance receipts for this section."),await promptF(e)){let e=markAttendanceSectionId.innerText;(await db.updateOne(cUSERS,auth.currentUser.email,{[fENROLLED_SECTIONS+"."+localStorage.semesterSelected+"."+e]:db.deleteField()})).error?toastError("Something went wrong. Please try again."):(delete userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected][e],showEnrolledAndTeachingSections(localStorage.semesterSelected),navigateBack())}}const codeReader=new ZXing.BrowserMultiFormatReader;var currentQRstream,scanTarget;async function openQRreader(e){showInMain("QRreader"),currentQRstream=await getVideoStream(!1),scanTarget=e,startQRreader(),window.addEventListener("popstate",closeQRreader,{once:!0})}function closeQRreader(){codeReader.reset(),window.removeEventListener("popstate",closeQRreader)}function onScanResult(e,t){if(e){let t;if(closeQRreader(),navigateBack(),e.text?.startsWith("http")&&(t=new URLSearchParams(e.text.split("?")[1])),scanTarget)t?.has("c")&&(e.text=t.get("c")),document.getElementById(scanTarget).value=e.text,checkMissingAttendanceInfo();else if(t?.has("s")){let[e,n]=getSemesterSectionFromId(t.get("s"));localStorage.semesterSelected!==e&&(localStorage.semesterSelected=e,showEnrolledAndTeachingSections(e)),localStorage.markAttendanceSectionId=n,localStorage.markAttendanceCode=t.get("c"),setTimeout(showMarkAttendance,50)}}!t||t instanceof ZXing.NotFoundException||toastError("Could not complete QR scan.\n"+t)}async function startQRreader(){codeReader.decodeFromStream(currentQRstream,"QRreaderVideo",onScanResult)}async function switchQRCamera(){currentQRstream=await switchCameraStream(currentQRstream),codeReader.reset(),startQRreader()}var selfieBlob=null,photoId=null,photoTakenTime=null;const selfieCanvas=$("#selfieCanvas"),selfieVideo=$("#selfieVideo");async function enableSelfieCamera(){try{await startCamera(selfieVideo,PHOTO_SIZE),window.addEventListener("popstate",stopCamera,{once:!0}),showHide([selfieVideo,"snapPhotoBtn","switchPhotoBtn"],["defaultSelfieImg",selfieCanvas,"addPhotoBtn"])}catch(e){toastError("Unable to start camera.\nPlease make sure your camera permissions are enabled and try again.\nNote: You may need to reload this page after enabling your camera.\n\n"+CAMERA_PERMISSIONS_INSTRUCTIONS)}}async function snapPhoto(){showHide([selfieCanvas,"addPhotoBtn"],[selfieVideo,"snapPhotoBtn","switchPhotoBtn"]),takePhoto(selfieVideo,selfieCanvas,PHOTO_SIZE),selfieBlob=await canvasToBlob(selfieCanvas),photoTakenTime=(new Date).getTime(),checkMissingAttendanceInfo()}const getAttendanceSectionId=$("#getAttendanceSectionId"),getAttendanceClassCodeInput=$("#getAttendanceClassCodeInput"),collectAttendanceBtn=$("#collectAttendanceBtn"),minutesToCollectAttendanceText=$("#minutesToCollectAttendance");async function showGetAttendance(e,t){if(showInMain("getAttendance"),!e){let n=getSemesterSectionFromId(localStorage.takingAttendance);localStorage.semesterSelected=n[0],e=n[1],t=await getSection(localStorage.semesterSelected,e)}if(getAttendanceSectionId.innerText=e,getAttendanceSectionId._sectionDoc=t,$("#getAttendanceCrossListIds").innerHTML=t[fSECTION_CROSS_LISTED]?"<span>"+t[fSECTION_CROSS_LISTED].join("</span> <span>")+"</span>":"",$("#attendanceRoomSectionId").innerHTML=$("#attendanceTableSectionId").innerHTML=`<div><span>${getAttendanceSectionId.innerText} ${$("#getAttendanceCrossListIds").innerText}</span></div>`,$("#getAttendanceSectionInfo").innerText=sectionInfoText(t,!0),$("#getAttendanceEditBtn").setAttribute("onclick",""),$("#getAttendanceEditBtn").onclick=n=>{editSection(e,t)},hide("currentAttendanceStatus"),await updateCurrentAttendanceRecords(),currentAttendanceRecords.length&&(sortCodesAndTimesForCurrentAttendanceRecords(),t[fROOM_ID]&&currentAttendanceRecords.attendanceCodesAndTimes.length?show("getAttendanceShowRoomBtn"):hide("getAttendanceShowRoomBtn")),currentAttendanceRecords._docs[0][fATTENDANCE_CODE]&&currentAttendanceRecords._docs[0][fDATETIME].seconds+60*currentAttendanceRecords._docs[0][fDURATION]>db.now())localStorage.takingAttendance=semesterSectionId(localStorage.semesterSelected,e),getAttendanceClassCodeInput.value=currentAttendanceRecords._docs[0][fATTENDANCE_CODE],localStorage.minutesToCollectAttendance=currentAttendanceRecords._docs[0][fDURATION],localStorage.attendanceEndtime=currentAttendanceRecords._docs[0][fDATETIME].seconds+60*currentAttendanceRecords._docs[0][fDURATION],takingAttendance(),show("getAttendanceControls"),showCurrentAttendanceStatus();else{localStorage.takingAttendance===semesterSectionId(localStorage.semesterSelected,e)?(delete localStorage.takingAttendance,delete localStorage.attendanceEndtime,show("getAttendanceControls")):localStorage.takingAttendance&&parseInt(localStorage.attendanceEndtime)>db.now()&&hide("getAttendanceControls");let t=currentAttendanceRecords.attendanceCodesAndTimes&&currentAttendanceRecords.attendanceCodesAndTimes[currentAttendanceRecords.attendanceCodesAndTimes.length-1];t&&t[1].split(" ")[0]===getDateTime()[0]?(getAttendanceClassCodeInput.value=t[0],showCurrentAttendanceStatus(!1)):randomAttendanceClassCode()}minutesToCollectAttendanceText.innerText=localStorage.minutesToCollectAttendance||75}function randomAttendanceClassCode(){getAttendanceClassCodeInput.value=ALPHABET[randInt(26)]+Math.random().toString().substring(2,6)}function createSectionURLClick(){let e=new URL(window.location);e.hash=e.search="",e.searchParams.append("s",semesterSectionId(localStorage.semesterSelected,getAttendanceSectionId.innerText)),navigator.clipboard.writeText(e.href),toast("URL link for this section copied to clipboard.")}function createURLClick(){let e=new URL(window.location);e.hash=e.search="",e.searchParams.append("s",semesterSectionId(localStorage.semesterSelected,getAttendanceSectionId.innerText)),e.searchParams.append("c",getAttendanceClassCodeInput.value),navigator.clipboard.writeText(e.href),toast("URL link for this attendance copied to clipboard.")}function showQRPopup(){let e=location.protocol+"//"+location.host+location.pathname+"?c="+getAttendanceClassCodeInput.value+"&s="+semesterSectionId(localStorage.semesterSelected,getAttendanceSectionId.innerText);window.open(`qrcode.html?${e}`,"LectureSeats QR Code","width=300,height=300,top=100,left=600")}minutesToCollectAttendanceText.addEventListener("keydown",(e=>{if(e.target.getAttribute("contenteditable"))if("ArrowDown"===e.key){let t=(parseInt(e.target.innerText)||0)-1;t>=1&&(e.target.innerText=t)}else"ArrowUp"===e.key?e.target.innerText=(parseInt(e.target.innerText)||0)+1:isNaN(parseInt(e.key))&&!["Backspace","Delete","ArrowLeft","ArrowRight"].includes(e.key)&&e.preventDefault()}));const codeWriter=new ZXing.BrowserQRCodeSvgWriter;function createQRClick(e=null){const t=$("#QRcodeContainer");let n=location.protocol+"//"+location.host+location.pathname+"?c="+getAttendanceClassCodeInput.value+"&s="+semesterSectionId(localStorage.semesterSelected,getAttendanceSectionId.innerText);if(n!==t.url){t.url=n,$("#QRcode").innerHTML="",codeWriter.writeToDom("#QRcode",n,300,300);let e=$("#QRcode > svg");e.removeAttribute("width"),e.removeAttribute("height"),e.setAttribute("viewBox","0 0 300 300"),makeDraggable(t,e,((e,t)=>localStorage.qrPos=[e,t])),qrResizeObserver.observe(t),localStorage.qrPos&&([t.style.left,t.style.top]=localStorage.qrPos.split(",")),localStorage.qrSize&&([t.style.width,t.style.height]=localStorage.qrSize.split(","))}null===e?showToggle("QRcodeContainer"):e?show("QRcodeContainer"):hide("QRcodeContainer")}let qrSavingSize;const qrResizeObserver=new ResizeObserver((e=>{let t=e[0].contentRect;t.width,t.height&&(clearTimeout(qrSavingSize),qrSavingSize=setTimeout((()=>localStorage.qrSize=[t.width,t.height]),1e3))}));async function collectAttendanceBtnClick(){if("Start"===collectAttendanceBtn.innerText){let e=parseInt(minutesToCollectAttendanceText.innerText);if(isNaN(e)||e<1)return void toast("Please enter a numeric value greater than or equal to 1 for the minutes attendance is to be collected.");if(e>180&&!await promptF(`WARNING: You are attempting to open attendance collection for ${Math.floor(e/60)}+ hours.\nAre you sure you wish to continue?`))return;if(!getAttendanceClassCodeInput.value)return void toast("Please enter a passcode for taking attendance.");{validateInputForFieldName(getAttendanceClassCodeInput),sortCodesAndTimesForCurrentAttendanceRecords();let e=currentAttendanceRecords.attendanceCodesAndTimes.find((e=>e[0]===getAttendanceClassCodeInput.value));if(e){let t=getDateTime()[0];if(e[1].split(" ")[0]!==t)return void toastError(`Cannot use attendance passcode ${getAttendanceClassCodeInput.value}.\nThis passcode has already been used to take attendance on ${e[1].split(" ").join(" at ")}.`);if(!await promptF(`You were collecting attendance earlier today using the same passcode.\n\nWould you like to continue taking the same attendance?\n\n<li>To continue collecting attendance for passcode ${getAttendanceClassCodeInput.value}, click Continue.</li>\n<li>To take a new attendance, click Cancel, change the value for Attendance passcode, and click the Start button again.</li>`,{},["Continue","Cancel"]))return}}loadingScreen(!0);let t=getAttendanceSectionId.innerText,n=getAttendanceSectionId._sectionDoc,a=db.now()+60*e,o={[fATTENDANCE_CODE]:getAttendanceClassCodeInput.value,[fDATETIME]:db.serverTimestamp(),[fDURATION]:e};o[fINSTRUCTOR_EMAILS]=n[fINSTRUCTOR_EMAILS];let i=await db.upsertOne(cATTENDANCE,semesterSectionId(localStorage.semesterSelected,t),o);if(i?.error)return toastError("Cannot start taking attendance.\nWe are having issues writing to the database.\n"+i.error),void loadingScreen(!1);if(n[fSECTION_CROSS_LISTED]?.length)for(let e of n[fSECTION_CROSS_LISTED])if(i=await db.upsertOne(cATTENDANCE,semesterSectionId(localStorage.semesterSelected,e),o),i?.error)return toastError("Cannot start taking attendance.\nWe are having issues writing to the database.\n"+i.error),void loadingScreen(!1);currentAttendanceRecords._docs.forEach((e=>{o[fDATETIME]={seconds:db.now()},Object.assign(e,o)})),localStorage.minutesToCollectAttendance=e,localStorage.takingAttendance=semesterSectionId(localStorage.semesterSelected,t),localStorage.attendanceEndtime=a,takingAttendance()}else stopTakingAttendance();loadingScreen(!1)}var attendanceTimer;function takingAttendance(){collectAttendanceBtn.innerText="Stop",getAttendanceClassCodeInput.setAttribute("disabled",!0),$("#collectingAttendance").innerText="Collecting",showHide(["createQRCodeBtn","createURLBtn","attendanceCollectionStatus"],"randomAttendanceClassCodeBtn"),createQRClick(!0),$("#attendanceCollectionStatus>div").innerText=getAttendanceSectionId.innerText+" "+$("#getAttendanceCrossListIds").innerText.trim(),minutesToCollectAttendanceText.removeAttribute("contenteditable"),showCurrentAttendanceStatus(!1),clearInterval(attendanceTimer),attendanceTimer=setInterval(updateAttendanceTime,1e3)}function updateAttendanceTime(){let e=parseInt(localStorage.attendanceEndtime)-db.now();if(e<=0)stopTakingAttendance(!1);else{let t=Math.floor(e/60),n=e-60*t;minutesToCollectAttendanceText.innerText=t+":"+pad0(n),$("#attendanceCollectionStatus>span").innerText=minutesToCollectAttendanceText.innerText}}async function stopTakingAttendance(e=!0,t=!0){if(e){let e=getAttendanceSectionId.innerText,t=getAttendanceSectionId._sectionDoc,n=[],a=db.updateOne(cATTENDANCE,semesterSectionId(localStorage.semesterSelected,e),{[fATTENDANCE_CODE]:db.deleteField()});if(a.error&&n.push(e),t[fSECTION_CROSS_LISTED]?.length)for(let e of t[fSECTION_CROSS_LISTED])a=db.updateOne(cATTENDANCE,semesterSectionId(localStorage.semesterSelected,e),{[fATTENDANCE_CODE]:db.deleteField()}),a.error&&n.push(e);if(n.length)return void toastError("Error updating database for the following sections:\n"+n)}clearInterval(attendanceTimer),attendanceTimer=void 0,collectAttendanceBtn.innerText="Start",getAttendanceClassCodeInput.removeAttribute("disabled"),$("#collectingAttendance").innerText="Collect",showHide("randomAttendanceClassCodeBtn",["QRcodeContainer","createQRCodeBtn","createURLBtn","attendanceCollectionStatus"]),minutesToCollectAttendanceText.setAttribute("contenteditable","true"),minutesToCollectAttendanceText.innerText=localStorage.minutesToCollectAttendance||"75",currentAttendanceRecords._docs.forEach((e=>delete e[fATTENDANCE_CODE])),delete localStorage.takingAttendance,delete localStorage.attendanceEndtime,t&&showCurrentAttendanceStatus(!0)}async function showCurrentAttendanceStatus(e=!0){show("currentAttendanceStatus"),e&&(await updateCurrentAttendanceRecords(!0),void 0!==attendanceTimer&&(!currentAttendanceRecords._docs[0][fATTENDANCE_CODE]||!(currentAttendanceRecords._docs[0][fDATETIME].seconds+60*currentAttendanceRecords._docs[0][fDURATION])>db.now())&&stopTakingAttendance(!1,!1)),$("#currentAttendanceStatus > span").innerHTML=`Today's attendance for passcode ${getAttendanceClassCodeInput.value}:\n${currentAttendanceRecords.filter((e=>e[fATTENDANCES][getAttendanceClassCodeInput.value]&&!e[fATTENDANCES][getAttendanceClassCodeInput.value][fABSENCE_STATUS])).length} of ${currentAttendanceRecords.length} marked present\n<small>(last checked ${(new Date).toLocaleTimeString()}</small>)`}var currentAttendanceRecords={};async function updateCurrentAttendanceRecords(e){let t=getAttendanceSectionId.innerText,n=getAttendanceSectionId._sectionDoc,a=[t].concat(n[fSECTION_CROSS_LISTED]||[]);(currentAttendanceRecords=await getAttendance(localStorage.semesterSelected,a,e)).length?(showHide("showStudentsOptions","showStudentsAddBtn"),currentAttendanceRecords.filter((e=>e[fPHOTO])).length?show("learnNamesBtn"):hide("learnNamesBtn")):showHide("showStudentsAddBtn","showStudentsOptions")}function sortCodesAndTimesForCurrentAttendanceRecords(){if(!currentAttendanceRecords.attendanceCodesAndTimes){var e={};currentAttendanceRecords.map((e=>Object.values(e[fATTENDANCES]))).flat().forEach((t=>{let n=e[t.code],a=t.date+" "+t.time;(!n||n>a)&&(e[t.code]=a)})),currentAttendanceRecords.attendanceCodesAndTimes=Object.entries(e).sort(((e,t)=>e[1]>t[1]?1:-1))}}async function addStudentBtnClick(){let e=getAttendanceSectionId.innerText,t=getAttendanceSectionId._sectionDoc;if(t[fSECTION_CROSS_LISTED]?.length){let n=[e].concat(t[fSECTION_CROSS_LISTED]);if(n.push("Cancel"),e=(await promptF("Please select a section for adding a student",{},n)).clicked,!e)return}showManageUsers((t=>{navigateBack(),setTimeout(addStudent,100,t,e)}),`Find user records by using the filters below.\nClick on any user record to add that user to section ${e}.`)}async function addStudentsBtnClick(){let e=getAttendanceSectionId.innerText,t=getAttendanceSectionId._sectionDoc;if(t[fSECTION_CROSS_LISTED]?.length){let n=[e].concat(t[fSECTION_CROSS_LISTED]);if(n.push("Cancel"),e=(await promptF("Please select a section for adding a student",{},n)).clicked,!e)return}showAddUsers((t=>{navigateBack(),setTimeout(addStudents,100,t,e)}),`Add students to section\n${e}`)}async function changeStudentSection(e,t,n){const a=t[tSECTION_ID],o=t[tEMAIL];let i=await getUser(o);if(await promptF(`Are you sure you would like to move ${o}${fullName(i," (",")")} from section ${a} to section ${n}?`)){const r=localStorage.semesterSelected;if(!(await getAttendance(r,n))._docs[0][fINSTRUCTOR_EMAILS]){let e=await db.insertOne(cATTENDANCE,semesterSectionId(r,n),{[fINSTRUCTOR_EMAILS]:getAttendanceSectionId._sectionDoc[fINSTRUCTOR_EMAILS]});if(e.error)return void toastError(`Could not create attendance record for section ${n}.\n${e.error}`)}let s=[],l={[fNAME]:i[fNAME],[fLAST_NAME]:i[fLAST_NAME],[fATTENDANCES]:t[fATTENDANCES]};if(t[fPHOTO]){loadingScreen(1);let o=await moveFiles(photoStorageFolderPath(e,r,a),photoStorageFolderPath(e,r,n));if(loadingScreen(0),o.error)return void toastError("Attendance record was not moved to new section:\n\nCould not move student photos to new section.\n"+o.error);let i=t[fPHOTO].split("/");i[2]=n,l[fPHOTO]=i.join("/")}s.push({collection:cATTENDANCE,id:semesterSectionId(r,n),data:{[e]:l}}),s.push({collection:cATTENDANCE,id:semesterSectionId(r,a),data:{[e]:db.deleteField()}}),s.push({collection:cUSERS,id:o,data:{[fENROLLED_SECTIONS+"."+r+"."+n]:i[fENROLLED_SECTIONS][r][a]||{},[fENROLLED_SECTIONS+"."+r+"."+a]:db.deleteField()}});let d=await db.updateBatch(...s);if(d?.error){let o;return t[fPHOTO]&&(loadingScreen(1),o=await moveFiles(photoStorageFolderPath(e,r,n),photoStorageFolderPath(e,r,a)),loadingScreen(0)),void toastError(o?.error?"Student photos were moved to new section, but the rest of attendance data could not be moved.\n"+d.error+"\n\nCould not move photos back to original section.\n"+o.error:"Attendance record could not be moved to new section.\n"+d.error)}!i[fENROLLED_SECTIONS][r][n]&&i[fENROLLED_SECTIONS][r][a]&&(i[fENROLLED_SECTIONS][r][n]=i[fENROLLED_SECTIONS][r][a],delete i[fENROLLED_SECTIONS][r][a]),allAttendances[semesterSectionId(r,n)][e]=t,t[tSECTION_ID]=n,delete allAttendances[semesterSectionId(r,a)][e],toast(`Student ${o}${fullName(i," (",")")} was successfully moved from section ${a} to section ${n}.`,"",1)}}async function addStudent(e,t){const n=userIdFromEmail(e);let a=await getUser(e);if(!a)return void toastError(`Student with the email ${e} was not found.`);let o=currentAttendanceRecords.filter((e=>e[tUSER_ID]===n))[0];if(o)o[tSECTION_ID]===t?toastError(`Student with the email ${e} is already in section ${t}.`):(await changeStudentSection(n,o,t),createAttendanceTable());else{if(await promptF(`Are you sure you would like to add ${e}${fullName(a," (",")")} to section ${t}?`)){const o=localStorage.semesterSelected;if(!(await getAttendance(o,t))._docs[0][fINSTRUCTOR_EMAILS]){let e=await db.insertOne(cATTENDANCE,semesterSectionId(o,t),{[fINSTRUCTOR_EMAILS]:getAttendanceSectionId._sectionDoc[fINSTRUCTOR_EMAILS]});if(e.error)return void toastError(`Could not create attendance record for section ${t}.\n${e.error}`)}a[fENROLLED_SECTIONS]||(a[fENROLLED_SECTIONS]={}),a[fENROLLED_SECTIONS][o]||(a[fENROLLED_SECTIONS][o]={});let i={[fENROLLED_SECTIONS+"."+o+"."+t]:{}},r=[];for(let e of currentAttendanceRecords._sectionIds.filter((e=>e!==t)))e in a[fENROLLED_SECTIONS][o]&&(i[fENROLLED_SECTIONS+"."+o+"."+e]=db.deleteField(),r.push(e));let s=await db.updateBatch({collection:cUSERS,id:e,data:i},{collection:cATTENDANCE,id:semesterSectionId(o,t),data:{[n]:{[fNAME]:a[fNAME],[fLAST_NAME]:a[fLAST_NAME],[fATTENDANCES]:{}}}});if(s.error)return void toastError("Could not add student to section.\n"+s.error);a[fENROLLED_SECTIONS][o][t]={};for(let e of r)delete a[fENROLLED_SECTIONS][o][e];currentAttendanceRecords.push(allAttendances[semesterSectionId(o,t)][n]={[fNAME]:a[fNAME],[fLAST_NAME]:a[fLAST_NAME],[fATTENDANCES]:{},[tUSER_ID]:n,[tEMAIL]:e,[tSECTION_ID]:t}),toast(`Student ${e}${fullName(a," (",")")} was successfully added to section ${t}.`,"",1)}createAttendanceTable()}}async function addStudents(e,t){if(!e.length)return;let n,a,o=[],i=[],r=[];for(let s of e)a=userIdFromEmail(s[0]),n=currentAttendanceRecords.filter((e=>e[tUSER_ID]===a))[0],n?n[tSECTION_ID]===t?i.push(s):(n[fLAST_NAME]||(n[fLAST_NAME]=s[1]),n[fNAME]||(n[fNAME]=s[2]),r.push(n)):o.push(s);if(r.length){var s=await getUsers(r.map((e=>e[tEMAIL])));if(s.error)return void toastError("Something went wrong.\n"+s.error)}if(o.length){var l=getCachedUsersFromAttend(o);let t=e.filter((e=>!(e[0]in l)));if(t.length){let e=await getUsers(t.map((e=>e[0])));if(e.error)return void toastError("Something went wrong.\n"+e.error);Object.assign(l,e)}}let d="";if(r.length||o.length){if(i.length&&(d+=`<details><summary>${i.length} students are already in ${t} and will not be added</summary><small>${i.map((e=>e[0])).join(", ")}</small></details>\n`),r.length&&(d+=`<details><summary>${r.length} students are enrolled in this course under a different section id, and will be moved to ${t}</summary><small>${r.map((e=>e[tEMAIL])).join(", ")}</small></details>\n`),o.length&&(d+=`<details><summary>${o.length} students will be added to ${t}</summary><small>${o.map((e=>e[0])).join(", ")}</small></details>\n`),await promptF(d+"Are you sure you would like to proceed with this action?")){const e=localStorage.semesterSelected;let n={},a={},i={},d=currentAttendanceRecords._sectionIds.filter((e=>e!==t));if(!(await getAttendance(e,t))._docs[0][fINSTRUCTOR_EMAILS]){let n=await db.insertOne(cATTENDANCE,semesterSectionId(e,t),{[fINSTRUCTOR_EMAILS]:getAttendanceSectionId._sectionDoc[fINSTRUCTOR_EMAILS]});if(n.error)return void toastError(`Could not create attendance record for section ${t}.\n${n.error}`)}for(let o of r){let r=o[tSECTION_ID];i[r]||(i[r]={});let l={[fLAST_NAME]:o[fLAST_NAME],[fNAME]:o[fNAME],[fATTENDANCES]:o[fATTENDANCES]};if(o[fPHOTO]){let e=o[fPHOTO].split("/");e[2]=t,l[fPHOTO]=e.join("/")}a[o[tUSER_ID]]=l,i[r][o[tUSER_ID]]=db.deleteField();let d=o[tEMAIL];n[d]={[fENROLLED_SECTIONS]:{[e]:{[t]:s[d][fENROLLED_SECTIONS][e][r],[r]:db.deleteField()}}}}for(let i of o){let o=i[0],r=userIdFromEmail(i[0]);if(o in l){a[r]={[fLAST_NAME]:l[o][fLAST_NAME]||i[1],[fNAME]:l[o][fNAME]||i[2],[fATTENDANCES]:{}},n[o]={[fENROLLED_SECTIONS]:{[e]:{[t]:{}}}},l[o][fLAST_NAME]||(n[o][fLAST_NAME]=i[1]),l[o][fNAME]||(n[o][fNAME]=i[2]);for(let t of d)n[o][fENROLLED_SECTIONS][e][t]=db.deleteField()}else a[r]={[fLAST_NAME]:i[1],[fNAME]:i[2],[fATTENDANCES]:{}},n[o]={[fLAST_NAME]:i[1],[fNAME]:i[2],[fENROLLED_SECTIONS]:{[e]:{[t]:{}}}}}let c=[{collection:cATTENDANCE,id:semesterSectionId(e,t),data:a}];for(let t in i)c.push({collection:cATTENDANCE,id:semesterSectionId(e,t),data:i[t]});for(let e in n)c.push({collection:cUSERS,id:e,data:n[e]});loadingScreen(1);let u=await db.upsertBatch(...c);if(u.error)return loadingScreen(0),void toastError(`Failed to add students to section ${t}.\n${u.error}`);for(let a in n){allUsers[a]||(allUsers[a]={}),allUsers[a][fENROLLED_SECTIONS]||(allUsers[a][fENROLLED_SECTIONS]={}),allUsers[a][fENROLLED_SECTIONS][e]||(allUsers[a][fENROLLED_SECTIONS][e]={}),allUsers[a][fENROLLED_SECTIONS][e][t]=n[a][fENROLLED_SECTIONS][e][t];for(let t of d)allUsers[a][fENROLLED_SECTIONS][e][t]&&delete allUsers[a][fENROLLED_SECTIONS][e][t]}allSections[semesterSectionId(e,t)]||(allSections[semesterSectionId(e,t)]={});for(let n in a)allSections[semesterSectionId(e,t)][n]||(allSections[semesterSectionId(e,t)][n]={}),Object.assign(allSections[semesterSectionId(e,t)][n],a[n]);for(let t in i)if(allSections[semesterSectionId(e,t)])for(let n in i[t])allSections[semesterSectionId(e,t)][n]&&delete allSections[semesterSectionId(e,t)][n];let S=[];for(let n of r){(await moveFiles(photoStorageFolderPath(n[tUSER_ID],e,n[tSECTION_ID]),photoStorageFolderPath(n[tUSER_ID],e,t))).error&&S.push(n[tEMAIL])}loadingScreen(0),createAttendanceTable(!0),S.length?toastWarn(`${r.length+o.length} students added to section ${t}.\n\nEncountered an issue moving photos from old section to new for <details><summary>${S.length} students</summary>${S}</details>.\n`):toast(`${r.length+o.length} students successfully added to section ${t}`,"Success",1)}}else toastWarn(`No students were added because all of the selected students are already in section ${t}.`);$("#addUsersEmails").value="",$("#addUsersNames").value="",$("#addUsersList").innerHTML=""}const attendancesDiv=$("#attendances");var attendanceTable;async function showAttendanceTable(){$("#attendanceTableGradeEquationInput").value=getAttendanceSectionId._sectionDoc[fSECTION_GRADING]||DEFAULT_GRADING_EQUATION,$("#minLateInput").value=getAttendanceSectionId._sectionDoc[fSECTION_LATE]||25,await createAttendanceTable(),showInMain("attendanceTableScreen"),attendanceTable?.hiddenCols?.length<2&&$("#attendancesHolder").getBoundingClientRect().width<400&&setTimeout(attendanceTableFitToWidth,100),$("#classLocation").innerText=(await getClassLocation(getAttendanceSectionId.innerText))[2]}async function getClassLocation(e){let t=localStorage.getItem("loc_"+e);return t&&(t=JSON.parse(t)),3!==t?.length&&(t=DEFAULT_CLASS_LOCATION,setClassLocation(e,t)),t}function setClassLocation(e,t){localStorage.setItem("loc_"+e,JSON.stringify(t))}async function classLocPrompt(){var e=await getClassLocation(getAttendanceSectionId.innerText);setTimeout((async function(){createMapInDiv($("#setClassLocDiv"),e[0],e[1],1,(t=>e=t))}),150),await promptF('<div id="setClassLocDiv" class="w300 h300"></div>')&&(e.push(await getAddr(...e)),setClassLocation(getAttendanceSectionId.innerText,e),$("#classLocation").innerText=e[2],displayAttendanceTable())}async function saveGradingOptions(){const e=$("#attendanceTableGradeEquationInput").value;if(EQUATION_TEST_CASES.some((t=>!isNum(executeEquation(e,t)))))return void showHide("errorGradingOptions","saveGradingOptionsBtn");const t=parseInt($("#minLateInput").value);if(!isNum(t)||t<1)return toastError("Minutes Late field must be a number greater than or equal to 1."),void hide("saveGradingOptionsBtn");let n=await promptF("Are you sure you would like to save this as the new grading equation?\nOnce saved, students will see their grades updated according to this new equation.",{},["Save grading equation","Cancel"]);if(!n||"Cancel"===n)return;const a=currentAttendanceRecords._sectionIds[0];n=await db.updateOne(cSECTIONS,localStorage.semesterSelected,{[`${a}.${fSECTION_GRADING}`]:e,[`${a}.${fSECTION_LATE}`]:t}),n?.error?toastError("Error saving grading options to database.\n\n"+n.error):(allSections[localStorage.semesterSelected][a][fSECTION_GRADING]=getAttendanceSectionId._sectionDoc[fSECTION_GRADING]=e,allSections[localStorage.semesterSelected][a][fSECTION_LATE]=getAttendanceSectionId._sectionDoc[fSECTION_LATE]=t,hide("saveGradingOptionsBtn"),toast("Grading options saved","",1))}function gradingChanged(){const e=$("#attendanceTableGradeEquationInput").value;if(EQUATION_TEST_CASES.some((t=>!isNum(executeEquation(e,t)))))return void showHide("errorGradingOptions","saveGradingOptionsBtn");hide("errorGradingOptions");let t=parseInt($("#minLateInput").value);isNum(t)||($("#minLateInput").value=t=getAttendanceSectionId._sectionDoc[fSECTION_GRADING]||25),t<1&&($("#minLateInput").value=t=1),t!=getAttendanceSectionId._sectionDoc[fSECTION_LATE]||e!=getAttendanceSectionId._sectionDoc[fSECTION_GRADING]?show("saveGradingOptionsBtn"):hide("saveGradingOptionsBtn");let n=attendanceTable.header.indexOf(tATTENDANCE_GRADE),a=attendanceTable.header.indexOf(tON_TIME),o=attendanceTable.header.indexOf(tABSENT),i=attendanceTable.header.indexOf(tLATE);for(let r of attendanceTable){let s=r.slice(ATTEND_TABLE_DATA_COL_OFFSET).filter((e=>"excused"===e)).length;r[i]=r.slice(ATTEND_TABLE_DATA_COL_OFFSET).filter((e=>isNum(e)&&e>=t)).length,r[n]=executeEquation(e,{P:r[a],A:r[o],L:r[i],E:s})}displayAttendanceTable()}async function createAttendanceTable(e=!1){e&&await updateCurrentAttendanceRecords(!0),sortCodesAndTimesForCurrentAttendanceRecords();var t=$("#attendanceTableGradeEquationInput").value;t&&!EQUATION_TEST_CASES.some((e=>!isNum(executeEquation(t,e))))||($("#attendanceTableGradeEquationInput").value=t=getAttendanceSectionId._sectionDoc[fSECTION_GRADING]||DEFAULT_GRADING_EQUATION);var n=parseInt($("#minLateInput").value);let a,o;(!n||n<1)&&($("#minLateInput").value=n=getAttendanceSectionId._sectionDoc[fSECTION_LATE]||25);for(let e of currentAttendanceRecords){e.attendAndAbsentArray=[],e.attendTimeOffsets=[],e[tON_TIME]=0,e[tABSENT]=0,e[tLATE]=0,e[tNAME]=e[fNAME]||"",e[tLAST_NAME]=e[fLAST_NAME]||"";for(let[t,i]of currentAttendanceRecords.attendanceCodesAndTimes){if(a=e[fATTENDANCES][t],a)e.attendAndAbsentArray.push(a);else{a={[fABSENCE_STATUS]:STATUS_ABSENT,code:t},e[fATTENDANCES][t]=a,e.attendAndAbsentArray.push(a);let n={[fABSENCE_STATUS]:STATUS_ABSENT,[fDATETIME]:db.makeTimestamp(i)};db.updateOne(cATTENDANCE,semesterSectionId(localStorage.semesterSelected,e[tSECTION_ID]),{[e[tUSER_ID]+"."+fATTENDANCES+"."+t]:n}),db.updateOne(cUSERS,e[tEMAIL],{[fENROLLED_SECTIONS+"."+localStorage.semesterSelected+"."+e[tSECTION_ID]+"."+t]:n}),e[tEMAIL]in allUsers&&(allUsers[e[tEMAIL]][fENROLLED_SECTIONS]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t]=n)}a[fABSENCE_STATUS]===STATUS_ABSENT?(e[tABSENT]++,e.attendTimeOffsets.push("absent")):a[fABSENCE_STATUS]===STATUS_EXCUSED?e.attendTimeOffsets.push("excused"):(o=Math.floor((a[fDATETIME]-db.makeTimestamp(i))/60),o>=n?e[tLATE]++:e[tON_TIME]++,e.attendTimeOffsets.push(o))}e[tATTENDANCE_GRADE]=executeEquation(t,{P:e[tON_TIME],L:e[tLATE],A:e[tABSENT],E:e.attendTimeOffsets.filter((e=>"excused"===e)).length})}(attendanceTable=[]).semester=localStorage.semesterSelected,attendanceTable.id=attendanceTable.semester+"_"+currentAttendanceRecords._sectionIds.join("_"),attendanceTable.attendanceCodes=currentAttendanceRecords.attendanceCodesAndTimes.map((e=>e[0])),attendanceTable.attendanceTimes=currentAttendanceRecords.attendanceCodesAndTimes.map((e=>e[1])),attendanceTable.header=ATTEND_TABLE_ROW_HEADERS.concat(attendanceTable.attendanceTimes);for(let e of currentAttendanceRecords){let t=[];for(let n of ATTEND_TABLE_ROW_HEADERS)t.push(e[n]);t=t.concat(e.attendTimeOffsets),t._fullRecord=e,attendanceTable.push(t)}attendanceTable.sortStack=JSON.parse(localStorage.getItem("sortStack_"+attendanceTable.id)||"[]"),attendanceTable.sortDesc=JSON.parse(localStorage.getItem("sortDesc_"+attendanceTable.id)||"[]"),attendanceTable.hiddenCols=JSON.parse(localStorage.getItem("hiddenCols_"+attendanceTable.id)||"[true]"),displayAttendanceTable()}function createAttendanceEditingContextMenu(e,t,n,a,o){return async function(i){i.preventDefault();let r=["View attendance...","Edit attendance...",""];t[fABSENCE_STATUS]===STATUS_ABSENT?r.push("Mark present","Mark late","_Mark absent","Mark excused"):t[fABSENCE_STATUS]===STATUS_EXCUSED?r.push("Mark present","Mark late","Mark absent","_Mark excused"):a>=o?r.push("Mark present","_Mark late","Mark absent","Mark excused"):r.push("_Mark present","Mark late","Mark absent","Mark excused");let s,l=await showContextMenu(i.clientX,i.clientY,r);if("View attendance..."===l?createAttendanceViewPrompt(e,t,n,a)():"Edit attendance..."===l?showAttendanceEditingPrompt(e,t,n,a):"Mark present"===l?(s=STATUS_PRESENT,a=0):"Mark late"===l?(s=STATUS_PRESENT,a=2*o):"Mark absent"===l?(s=STATUS_ABSENT,a=0):"Mark excused"===l&&(s=STATUS_EXCUSED,a=0),void 0!==s){let o=semesterSectionId(localStorage.semesterSelected,e[tSECTION_ID]),i=e[tUSER_ID]+"."+fATTENDANCES+"."+t.code+".",r={[i+fDATETIME]:db.makeTimestamp(n,a),[i+fABSENCE_STATUS]:s},l=[{collection:cATTENDANCE,id:o,data:r}],d=fENROLLED_SECTIONS+"."+localStorage.semesterSelected+"."+e[tSECTION_ID]+"."+t.code+".",c={[d+fNOTES]:`updated by ${auth.currentUser.email} on ${getDateTime()[0]}`};i+fABSENCE_STATUS in r&&(c[d+fABSENCE_STATUS]=r[i+fABSENCE_STATUS]),i+fDATETIME in r&&(c[d+fDATETIME]=r[i+fDATETIME]),l.push({collection:cUSERS,id:e[tEMAIL],data:c});let u=await db.updateBatch(...l);if(u.error)toastError("Unable to update attendance record.\n"+u.error);else{if(t[fABSENCE_STATUS]=r[i+fABSENCE_STATUS],t[fDATETIME]=r[i+fDATETIME],e[tEMAIL]in allUsers){allUsers[e[tEMAIL]][fENROLLED_SECTIONS]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t.code]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t.code]={});let n=allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t.code];n[fDATETIME]=c[d+fABSENCE_STATUS],n[fDATETIME]=c[d+fDATETIME],n[fNOTES]=c[d+fNOTES]}toast("Record updated.","",1),createAttendanceTable()}}}}function createAttendanceViewPrompt(e,t,n,a){return async function(){let o=n.split(" ").join(" at "),i=`Record for ${fullName(e)} (${e[tUSER_ID]}) for attendance taken on ${o}:\n\n`;t[fABSENCE_STATUS]===STATUS_EXCUSED?i+="Attendance excused.":t[fABSENCE_STATUS]===STATUS_ABSENT?i+="Absent.":i+=`Attendance marked ${a?"after "+a+"min":"right away"}.\n\nSeat: ${t[fSEAT]||"missing"}`,(t[fPHOTO]||t[fLOCATION])&&(i+="\n\n",t[fPHOTO]&&(i+=`<img src="${await getLinkFromStoragePath(photoStoragePath(e[tUSER_ID],localStorage.semesterSelected,e[tSECTION_ID],t.code))}" onerror="this.src='${DEFAULT_USER_IMG}';" width="125">`),t[fLOCATION]&&(i+='<div id="locmap"></div>',setTimeout((()=>{createMapInDiv($("#locmap"),...t[fLOCATION])}),150))),t[fNOTES]&&(i+="\n\nNotes:\n"+t[fNOTES]),"Edit attendance record"===(await promptF(i+"\n\n",{},["OK","Edit attendance record"])).clicked&&showAttendanceEditingPrompt(e,t,n,a)}}async function showAttendanceEditingPrompt(e,t,n,a){let o=semesterSectionId(localStorage.semesterSelected,e[tSECTION_ID]),i=e[tUSER_ID]+"."+fATTENDANCES+"."+t.code+".",r=n.split(" ").join(" at "),s={Present:{type:"radio",name:"status"},Absent:{type:"radio",name:"status"},Excused:{type:"radio",name:"status"},"Minutes late":{type:"number",value:t[fABSENCE_STATUS]?"":a},Seat:t[fSEAT]||"",Notes:t[fNOTES]||""};t[fABSENCE_STATUS]===STATUS_ABSENT?s.Absent.checked=!0:t[fABSENCE_STATUS]===STATUS_EXCUSED?s.Excused.checked=!0:s.Present.checked=!0;let l=await promptF(`Record for ${fullName(e)} (${e[tUSER_ID]}) for attendance taken on ${r}:\n\n`,s,["Save","Cancel"]);if("Save"===l?.clicked){let r={};if(l.Present){let e=parseInt(l["Minutes late"])||0;(t[fABSENCE_STATUS]||e!==a)&&(r[i+fDATETIME]=db.makeTimestamp(n,e))}else{let e=db.makeTimestamp(n);t[fDATETIME]?.seconds!=e.seconds&&(r[i+fDATETIME]=e)}if(l.Present&&t[fABSENCE_STATUS]?r[i+fABSENCE_STATUS]=STATUS_PRESENT:l.Absent&&t[fABSENCE_STATUS]!==STATUS_ABSENT?r[i+fABSENCE_STATUS]=STATUS_ABSENT:l.Excused&&t[fABSENCE_STATUS]!==STATUS_EXCUSED&&(r[i+fABSENCE_STATUS]=STATUS_EXCUSED),l.Seat!==t[fSEAT]&&(r[i+fSEAT]=l.Seat||""),l.Notes!==t[fNOTES]&&(r[i+fNOTES]=l.Notes||""),Object.keys(r).length){let n,a,s=[{collection:cATTENDANCE,id:o,data:r}];(i+fABSENCE_STATUS in r||i+fDATETIME in r)&&(a=fENROLLED_SECTIONS+"."+localStorage.semesterSelected+"."+e[tSECTION_ID]+"."+t.code+".",n={[a+fNOTES]:`updated by ${auth.currentUser.email} on ${getDateTime()[0]}`},i+fABSENCE_STATUS in r&&(n[a+fABSENCE_STATUS]=r[i+fABSENCE_STATUS]),i+fDATETIME in r&&(n[a+fDATETIME]=r[i+fDATETIME]),s.push({collection:cUSERS,id:e[tEMAIL],data:n}));let l=await db.updateBatch(...s);if(l.error)toastError("Unable to update attendance record.\n"+l.error);else{if(i+fABSENCE_STATUS in r&&(t[fABSENCE_STATUS]=r[i+fABSENCE_STATUS]),i+fDATETIME in r&&(t[fDATETIME]=r[i+fDATETIME]),i+fSEAT in r&&(t[fSEAT]=r[i+fSEAT]),i+fNOTES in r&&(t[fNOTES]=r[i+fNOTES]),n&&e[tEMAIL]in allUsers){allUsers[e[tEMAIL]][fENROLLED_SECTIONS]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]={}),allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t.code]||(allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t.code]={});let o=allUsers[e[tEMAIL]][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]][t.code];a+fABSENCE_STATUS in n&&(o[fDATETIME]=n[a+fABSENCE_STATUS]),a+fDATETIME in n&&(o[fDATETIME]=n[a+fDATETIME]),o[fNOTES]=n[a+fNOTES]}toast("Record updated.","",1),createAttendanceTable()}}else toast("Nothing changed. Record not updated.")}}function createAttendanceStudentPrompt(e){return async function(){nextImgInCarousel(null,null,await Promise.all(e.attendAndAbsentArray.filter((e=>e[fPHOTO])).map((t=>getLinkFromStoragePath(photoStoragePath(e[tUSER_ID],localStorage.semesterSelected,e[tSECTION_ID],t.code)))))),window._nextImg=nextImgInCarousel;let t=`${fullName(e)}\n${e[tEMAIL]}\n${e[tSECTION_ID]}\n\n<img id="studentPromptImg" src=${DEFAULT_USER_IMG} onclick="window._nextImg(1,this)" onload="this.onload=null;window._nextImg(0,this)" onerror="this.src='${DEFAULT_USER_IMG}'" width="${PHOTO_SIZE}">\n\nAbsent: ${e[tABSENT]}\nLate: ${e[tLATE]}\n\n`,n=await promptF(t,{},currentAttendanceRecords._sectionIds.length>1?["OK","Change student's requirements","Change student section","Remove student from section"]:["OK","Change student's requirements","Remove student from section"]);if("Change student section"===n.clicked){let t=currentAttendanceRecords._sectionIds.filter((t=>t!==e[tSECTION_ID]));t.length>1?n=await promptF("Choose which section you would like to move the student to:",{otherSections:t},t.concat(["Cancel"])):n.clicked=t[0],n&&await changeStudentSection(e[tUSER_ID],e,n.clicked),createAttendanceTable()}else if("Remove student from section"===n.clicked){if(n=await promptF(`Are you sure you want to remove ${fullName(e)} (${e[tUSER_ID]}) from section ${e[tSECTION_ID]}?\n\nWARNING: This action will permanently DELETE all of the student's attendance records associated with this section.`,{},["DELETE student from section","Cancel"]),"DELETE student from section"===n.clicked){const t=semesterSectionId(localStorage.semesterSelected,e[tSECTION_ID]),n=e[tEMAIL];let a=await db.updateBatch({collection:cATTENDANCE,id:t,data:{[e[tUSER_ID]]:db.deleteField()}},{collection:cUSERS,id:n,data:{[fENROLLED_SECTIONS+"."+localStorage.semesterSelected+"."+e[tSECTION_ID]]:db.deleteField()}});if(a.error)return void toastError("Could not delete student record.\n\n"+a.error);if(delete allAttendances[t][e[tUSER_ID]],allUsers[n])try{delete allUsers[n][fENROLLED_SECTIONS][localStorage.semesterSelected][e[tSECTION_ID]]}catch(e){}(await deleteFiles(photoStorageFolderPath(e[tUSER_ID],localStorage.semesterSelected,e[tSECTION_ID]))).error?toastWarn("Deleted student from section, but could not delete student's uploaded photos."):toast(`${fullName(e)} (${e[tUSER_ID]}) was deleted from section ${e[tSECTION_ID]}.`,"",1),await updateCurrentAttendanceRecords(!1),createAttendanceTable(!1)}}else if("Change student's requirements"===n.clicked){let t=getAttendanceInfoRequirements((getAttendanceSectionId._sectionDoc[fPER_USER]||{})[e[tUSER_ID]]??getAttendanceSectionId._sectionDoc[fSECTION_REQUIRED_ATTENDANCE_FIELDS]),a={"Collect location":[{value:-1,label:"No"},{value:0,label:"Yes"},{value:1,label:"Request"},{value:2,label:"Require"}],"Collect seat code":[{value:-1,label:"No"},{value:0,label:"Yes"},{value:1,label:"Request"},{value:2,label:"Require"}],"Collect student photo":[{value:-1,label:"No"},{value:0,label:"Yes"},{value:1,label:"Request"},{value:2,label:"Require"}]};if(a["Collect location"][t[fLOCATION]+1].selected=!0,a["Collect seat code"][t[fSEAT]+1].selected=!0,a["Collect student photo"][t[fPHOTO]+1].selected=!0,n=await promptF(`Change required attendance information for ${fullName(e)} (${e[tUSER_ID]}):\n\nSet collection status to<li>"Yes" to collect information, but not to require it</li>\n<li>"Request" to give student a warning message if they do not supply the information</li>\n<li>"Require" to disable attendance collection until student enters required information</li>\n`,a,["Save student attendance requirements","Cancel"]),!n)return;let o={[fLOCATION]:parseInt(n["Collect location"]),[fSEAT]:parseInt(n["Collect seat code"]),[fPHOTO]:parseInt(n["Collect student photo"])};if(shallowEquals(o,t))return void toast("No changes were made.","Attendance information requirements were not updated:");t=getAttendanceInfoRequirements(getAttendanceSectionId._sectionDoc[fSECTION_REQUIRED_ATTENDANCE_FIELDS]);let i=shallowEquals(o,t)?db.deleteField():makeRequiredAttendanceFieldsString(o),r=await db.updateOne(cSECTIONS,localStorage.semesterSelected,{[`${getAttendanceSectionId.innerText}.${fPER_USER}.${e[tUSER_ID]}`]:i});r?.error?toastError("Unable to save new user requirements.\nPlease try again.\n\n"+r.error):(getAttendanceSectionId._sectionDoc[fPER_USER]||(getAttendanceSectionId._sectionDoc[fPER_USER]={}),isStr(i)?getAttendanceSectionId._sectionDoc[fPER_USER][e[tUSER_ID]]=i:delete getAttendanceSectionId._sectionDoc[fPER_USER][e[tUSER_ID]],toast(`Personalized attendance info requirements updated for ${fullName(e)}.`))}}}async function displayAttendanceTable(){let e=$("#attendancesHolder").scrollLeft,t=$("#attendancesHolder").scrollTop;attendancesDiv.innerHTML="";var n=await getClassLocation(getAttendanceSectionId.innerText),a=parseInt($("#minLateInput").value)||getAttendanceSectionId._sectionDoc[fSECTION_LATE]||25;sortTable(attendanceTable,attendanceTable.sortStack,{excused:9e8,absent:9e9});for(let e of[attendanceTable.header].concat(attendanceTable)){var o=attendancesDiv.appendChild(document.createElement("row"));for(let t=0;t<attendanceTable.header.length;t++)if(!attendanceTable.hiddenCols[t]){var i=o.appendChild(document.createElement("div"));if(e===attendanceTable.header)i.innerText=e[t],t>=ATTEND_TABLE_DATA_COL_OFFSET&&(i.title=attendanceTable.attendanceCodes[t-ATTEND_TABLE_DATA_COL_OFFSET]),i.addEventListener("click",(()=>sortAttendanceTableCol(t))),i.addEventListener("contextmenu",attendanceTableHeaderRightClick),i.classList.add("table-header"),i.setAttribute("title","Click to sort. Right-click to hide/show.");else if(t>=ATTEND_TABLE_DATA_COL_OFFSET){i.innerHTML="excused"===e[t]?"➖":"absent"===e[t]?"❌":e[t]<a?"✔️":"+"+e[t]+"min";let o=e._fullRecord.attendAndAbsentArray[t-ATTEND_TABLE_DATA_COL_OFFSET];if("excused"!==e[t]&&"absent"!==e[t])if(!o[fSEAT]&&getAttendanceSectionId._sectionDoc[fSEAT]>0&&i.classList.add("missingSeat"),!o[fPHOTO]&&getAttendanceSectionId._sectionDoc[fPHOTO]>0&&i.classList.add("missingPhoto"),!o[fLOCATION]&&getAttendanceSectionId._sectionDoc[fLOCATION]>0)i.classList.add("missingLocation");else if(o[fLOCATION]){i.classList.add("hasLocation");let e=getDistanceBetweenCoords(o[fLOCATION],n);i.style.setProperty("--distColor",`rgb(${e/15},${255-e/15},0)`)}i.onclick=createAttendanceViewPrompt(e._fullRecord,o,attendanceTable.header[t],e[t]),i.oncontextmenu=createAttendanceEditingContextMenu(e._fullRecord,o,attendanceTable.header[t],e[t],a),i.style.textAlign="center"}else i.innerText=e[t],i.onclick=createAttendanceStudentPrompt(e._fullRecord),isNaN(parseFloat(e[t]))||(i.style.textAlign="center",Number.isInteger(e[t])||(i.innerText=e[t].toFixed(1)))}}attendancesDiv.style.setProperty("--colNum",o.children.length),$("#attendancesHolder").scrollLeft=e,$("#attendancesHolder").scrollTop=t}async function addAttendanceColBtnClick(){let e=await promptF("Manually add attendance column (all students will be marked absent by default):",{"Attendance code":{required:!0,value:Math.random().toString().substring(2)},"Attendance time":{required:!0,type:"datetime-local",value:getDateTime().join("T")}});currentAttendanceRecords.attendanceCodesAndTimes.map((e=>e[0])).includes(e["Attendance code"])?toastError(`Cannot add column with attendance code ${e["Attendance code"]}:\nThis attendance code has already been used for another attendance.`):(currentAttendanceRecords.attendanceCodesAndTimes.push([e["Attendance code"],e["Attendance time"].split("T").join(" ")]),currentAttendanceRecords.attendanceCodesAndTimes.sort(((e,t)=>e[1]>t[1]?1:-1)),createAttendanceTable(!1))}async function attendanceTableHideShowCols(){localStorage.setItem("hiddenCols_"+attendanceTable.id,JSON.stringify(attendanceTable.hiddenCols)),await displayAttendanceTable()}function attendanceTableShowAllCols(){if(attendanceTable.showingAttendanceCol){delete attendanceTable.showingAttendanceCol;for(let e=ATTEND_TABLE_DATA_COL_OFFSET;e<attendanceTable.header.length;e++)attendanceTable.hiddenCols[e]=!1;attendanceTableHideShowCols()}else showOneAttendanceCol()}async function showOneAttendanceCol(e){e||(e=attendanceTable.showingAttendanceCol=attendanceTable.showingAttendanceCol||attendanceTable.header.length-1);for(let t=ATTEND_TABLE_DATA_COL_OFFSET;t<attendanceTable.header.length;t++)attendanceTable.hiddenCols[t]=e!==t;await attendanceTableHideShowCols()}function attendanceColFirst(){attendanceTable.showingAttendanceCol=ATTEND_TABLE_DATA_COL_OFFSET,showOneAttendanceCol(attendanceTable.showingAttendanceCol)}function attendanceColLast(){attendanceTable.showingAttendanceCol=attendanceTable.header.length-1,showOneAttendanceCol(attendanceTable.showingAttendanceCol)}function attendanceColLeft(){attendanceTable.showingAttendanceCol=attendanceTable.showingAttendanceCol?attendanceTable.showingAttendanceCol-1:ATTEND_TABLE_DATA_COL_OFFSET,attendanceTable.showingAttendanceCol<ATTEND_TABLE_DATA_COL_OFFSET&&(attendanceTable.showingAttendanceCol=attendanceTable.header.length-1),showOneAttendanceCol(attendanceTable.showingAttendanceCol)}function attendanceColRight(){attendanceTable.showingAttendanceCol=attendanceTable.showingAttendanceCol?attendanceTable.showingAttendanceCol+1:attendanceTable.header.length-1,attendanceTable.showingAttendanceCol>=attendanceTable.header.length&&(attendanceTable.showingAttendanceCol=ATTEND_TABLE_DATA_COL_OFFSET),showOneAttendanceCol(attendanceTable.showingAttendanceCol)}async function attendanceTableFitToWidth(){let e=attendanceTable.header.length-attendanceTable.hiddenCols.filter((e=>e)).length;const t=ATTEND_TABLE_ROW_HEADERS.indexOf(tLAST_NAME),n=ATTEND_TABLE_ROW_HEADERS.indexOf(tUSER_ID);if(e<3&&!attendanceTable.hiddenCols[t]&&attendanceTable.hiddenCols[n])return attendanceTable.hiddenCols[t]=!0,attendanceTable.hiddenCols[n]=!1,void attendanceTableHideShowCols();const a=$("#attendancesHolder").getBoundingClientRect().width;if(e<3||attendancesDiv.getBoundingClientRect().width<=a){for(let e=0;e<ATTEND_TABLE_DATA_COL_OFFSET;e++)attendanceTable.hiddenCols[e]=!1;return await attendanceTableHideShowCols(),void(attendancesDiv.getBoundingClientRect().width<a&&attendanceTableShowAllCols())}attendancesDiv.getBoundingClientRect().width>a&&await showOneAttendanceCol();for(var o=[...ATTEND_TABLE_ROW_HEADER_PRIORITY];o.length>1&&attendancesDiv.getBoundingClientRect().width>a;){let e=o.pop();await attendanceTableHideShowCol(attendanceTable.header.indexOf(e),!1)}}function attendanceTableHideShowCol(e,t=null){null===t&&(t=attendanceTable.hiddenCols[e]),attendanceTable.hiddenCols[e]=!t,attendanceTableHideShowCols()}async function attendanceTableSelectCols(){let e=await promptF("Select which columns to show",Object.fromEntries(attendanceTable.header.map(((e,t)=>[e,!attendanceTable.hiddenCols[t]])))),t=!1;for(let n in e){let a=attendanceTable.header.indexOf(n);a>-1&&Boolean(attendanceTable.hiddenCols[a])==e[n]&&(attendanceTable.hiddenCols[a]=!e[n],t=!0)}t&&attendanceTableHideShowCols()}async function attendanceTableHeaderRightClick(e){e.preventDefault();const t=e.currentTarget.innerText;let n=["Hide column"];ATTEND_TABLE_ROW_HEADERS.includes(t)||n.push("Change attendance status","Delete column");let a=await showContextMenu(e.clientX,e.clientY,n);if("Hide column"==a)attendanceTableHideShowCol(attendanceTable.header.indexOf(t),!1);else if("Change attendance status"==a){let e=await promptF(`Change attendance statuses for ${t}:`,{"Current status":["Any","Absent","Excused","Present"],"New status":["Absent","Excused","Present"]});if(e){const n={Absent:STATUS_ABSENT,Present:STATUS_PRESENT,Excused:STATUS_EXCUSED},a=n[e["Current status"]],o=n[e["New status"]];if(a===o)return void toast("Nothing to change.");const i=localStorage.semesterSelected,r=currentAttendanceRecords.attendanceCodesAndTimes.find((e=>e[1]==t))[0];let s={},l=[],d=[];for(let e of currentAttendanceRecords){let t=e[fATTENDANCES][r][fABSENCE_STATUS]||STATUS_PRESENT;if(t!==o&&(void 0===a||t===a)){let t=e[tSECTION_ID];s[t]||(s[t]={}),s[t][e[tUSER_ID]+"."+fATTENDANCES+"."+r+"."+fABSENCE_STATUS]=o,l.push({collection:cUSERS,id:e[tEMAIL],data:{[fENROLLED_SECTIONS+"."+i+"."+t+"."+r+"."+fABSENCE_STATUS]:o}}),d.push(e)}}if(0===d.length)toast("Nothing to change.");else if(await promptF(`You are about to mark ${d.length} student(s) ${e["New status"].toLowerCase()} for ${t}.\n\nAre you sure you would like to proceed?`)){for(let e in s)l.push({collection:cATTENDANCE,id:semesterSectionId(i,e),data:s[e]});let n=db.updateBatch(...l);if(n.error)toastError("Could not update records.\n"+n.error);else{for(let e of d)e[fATTENDANCES][r][fABSENCE_STATUS]=o;createAttendanceTable(),toast(`${d.length} student(s) were marked ${e["New status"].toLowerCase()} for ${t}.`,"Success.",1)}}}}else if("Delete column"==a){if("delete"===(await promptF(`Are you sure you would like to delete all attendance data for ${t}?<p>WARNING:<p>All data associated with ${t} attendance will be lost, including photos and attendance records.<p>To confirm this action you must type the word "delete" in the the Confirm field below and click OK.`,{Confirm:""})).Confirm.toLowerCase()){const e=localStorage.semesterSelected,n=currentAttendanceRecords.attendanceCodesAndTimes.find((e=>e[1]==t))[0];let a={},o=[];for(let t of currentAttendanceRecords){let i=t[tSECTION_ID];a[i]||(a[i]={}),a[i][t[tUSER_ID]+"."+fATTENDANCES+"."+n]=db.deleteField(),o.push({collection:cUSERS,id:t[tEMAIL],data:{[fENROLLED_SECTIONS+"."+e+"."+i+"."+n]:db.deleteField()}})}for(let t in a)o.push({collection:cATTENDANCE,id:semesterSectionId(e,t),data:a[t]});let i=db.updateBatch(...o);if(i.error)toastError("Could not update records.\n"+i.error);else{for(let t of currentAttendanceRecords)deleteFile(photoStoragePath(t[tUSER_ID],e,t[tSECTION_ID],n)),delete t[fATTENDANCES][n];currentAttendanceRecords.attendanceCodesAndTimes=currentAttendanceRecords.attendanceCodesAndTimes.filter((e=>e[0]!==n)),createAttendanceTable(),toast(`Deleted all attendance records for ${t}.`,"Success.",1)}}}}function sortAttendanceTableCol(e){attendanceTable.sortStack[0]===e?(attendanceTable.sortDesc[e]=!attendanceTable.sortDesc[e],localStorage.setItem("sortDesc_"+attendanceTable.id,JSON.stringify(attendanceTable.sortDesc))):(attendanceTable.sortStack=[e].concat(attendanceTable.sortStack.filter((t=>t!=e))),localStorage.setItem("sortStack_"+attendanceTable.id,JSON.stringify(attendanceTable.sortStack))),displayAttendanceTable()}function attendanceCSV(e){let t="";for(let n of[attendanceTable.header].concat(attendanceTable)){for(let a=0;a<attendanceTable.header.length;a++)e&&!e[a]||(t+=(isNum(n[a])&&n[a].toString().split(".")[1]?.length>2?n[a].toFixed(2):n[a])+",");t=t.replace(/(,$)/,"\n")}return t}async function downloadAttendanceRecord(){let e=Object.fromEntries(attendanceTable.header.map(((e,t)=>[e,!0])));e.Filename="attendance-"+attendanceTable.id+".csv";let t=await promptF("Select fields to include in your downloaded data:\n\n<small><a href=# onclick=\"document.querySelectorAll('#prompt input').forEach(c=>c.checked=true)\">Select All</a> <a href=# onclick=\"document.querySelectorAll('#prompt input').forEach(c=>c.checked=false)\">Deselect All</a></small>",e,["Download","Cancel"]);t&&attendanceTable.header.some((e=>t[e]))&&(t.Filename?t.Filename.endsWith(".csv")||(t.Filename+=".csv"):t.Filename="attendance-"+attendanceTable.id+".csv",download(t.Filename,attendanceCSV(attendanceTable.header.map((e=>t[e])))))}enableDragToScroll($("#attendancesHolder"));const roomMap=$("#roomMap"),roomMapHolder=$("#roomMapHolder");var roomViewAttendanceIndex;async function showRoom(e=!1){e&&await updateCurrentAttendanceRecords(!0),sortCodesAndTimesForCurrentAttendanceRecords();let t=getAttendanceSectionId._sectionDoc;currentAttendanceRecords.roomId=t[fROOM_ID],localStorage["roomMapZoom-"+currentAttendanceRecords.roomId]||(localStorage["roomMapZoom-"+currentAttendanceRecords.roomId]=1),roomViewAttendanceIndex=currentAttendanceRecords.attendanceCodesAndTimes.length-1,displayRoomViewForAttendance(),$("#attendanceRoomViewLastBtn").classList.add("disabled")}async function displayRoomViewForAttendance(){let e=currentAttendanceRecords.roomId?await getRoomLayout(currentAttendanceRecords.roomId):[["","","","","","","","","",""]],t=e.flat().filter((e=>e));var n={},a=[],o=[],i=currentAttendanceRecords.attendanceCodesAndTimes[roomViewAttendanceIndex][0];$("#roomViewDate").innerText=currentAttendanceRecords.attendanceCodesAndTimes[roomViewAttendanceIndex][1];for(let e of currentAttendanceRecords){let r=e[fATTENDANCES][i];if(r&&r[fABSENCE_STATUS]!==STATUS_EXCUSED&&r[fABSENCE_STATUS]!==STATUS_ABSENT){let a=formatSeatCode(r[fSEAT]);e._seat=a,e._notes=r[fNOTES],e._time=r.time,e._photo=r[fPHOTO]?photoStoragePath(e[tUSER_ID],localStorage.semesterSelected,e[tSECTION_ID],i):e[fPHOTO],t.includes(a)&&!n[a]?n[a]=e:o.push(e)}else a.push(e),r&&(e._notes=r[fNOTES]),r&&r[fABSENCE_STATUS]===STATUS_EXCUSED?e._time="excused":e._time="absent",e._photo=e[fPHOTO]}if(o.sort(((e,t)=>e[fNAME]>t[fNAME]?1:-1)),a.sort(((e,t)=>e[fNAME]>t[fNAME]?1:-1)),roomMap.innerHTML="",Object.keys(n).length){roomMap._cols=0;for(let t=0;t<e.length;t++){let a=e[t];roomMap._cols=Math.max(roomMap._cols,a.length);let o=roomMap.appendChild(document.createElement("div"));for(let i=0;i<a.length;i++){let a=e[t][i],r=o.appendChild(document.createElement("div"));if(a){r.classList.add("seat");let e=n[a];e?addStudentToSeat(r,e):r.innerText=a}}}}else roomMap._cols=10;let r=roomMap.appendChild(document.createElement("div"));getAttendanceSectionId._sectionDoc[fSEAT]>=0&&r.classList.add("bad-seating");for(let e of o){let t=r.appendChild(document.createElement("div"));t.classList.add("seat"),addStudentToSeat(t,e)}let s=roomMap.appendChild(document.createElement("div"));s.classList.add("absent");for(let e of a){let t=s.appendChild(document.createElement("div"));t.classList.add("seat"),addStudentToSeat(t,e)}attendanceRoomViewZoom(),r.style.maxWidth=`calc(var(--seat-width) * ${roomMap._cols})`,s.style.maxWidth=`calc(var(--seat-width) * ${roomMap._cols})`,showInMain("room"),setTimeout((()=>{roomMapHolder.scrollLeft=(roomMapHolder.scrollWidth-roomMapHolder.offsetWidth)/2}),100)}function addStudentToSeat(e,t){e.classList.add("taken"),getLinkFromStoragePath(t._photo).then((t=>e.style.backgroundImage=`url("${t||DEFAULT_USER_IMG}"), url(${DEFAULT_USER_IMG})`)),e.innerHTML=`<span>${t[fNAME]}</span>`,e.onmouseover=()=>{e.innerHTML=`<span>${fullName(t)}\n<small>${t[tUSER_ID]}\n${t._time}\n${t._seat||""}\n${t[tSECTION_ID]}\n${t._notes||""}</small></span>`},e.onmouseout=()=>{e.innerHTML=`<span>${t[fNAME]}</span>`,e.classList.remove("enlarge")},e.onclick=()=>{e.classList.toggle("enlarge")}}function attendanceRoomViewLeft(){--roomViewAttendanceIndex<0&&(roomViewAttendanceIndex=currentAttendanceRecords.attendanceCodesAndTimes.length-1),displayRoomViewForAttendance(),enableDisableLast()}function attendanceRoomViewRight(){++roomViewAttendanceIndex>=currentAttendanceRecords.attendanceCodesAndTimes.length&&(roomViewAttendanceIndex=0),displayRoomViewForAttendance(),enableDisableLast()}function attendanceRoomViewLast(){roomViewAttendanceIndex!=currentAttendanceRecords.attendanceCodesAndTimes.length-1&&(roomViewAttendanceIndex=currentAttendanceRecords.attendanceCodesAndTimes.length-1,displayRoomViewForAttendance(),$("#attendanceRoomViewLastBtn").classList.add("disabled"))}function enableDisableLast(){roomViewAttendanceIndex==currentAttendanceRecords.attendanceCodesAndTimes.length-1?$("#attendanceRoomViewLastBtn").classList.add("disabled"):$("#attendanceRoomViewLastBtn").classList.remove("disabled")}function attendanceRoomViewZoomIn(){localStorage["roomMapZoom-"+currentAttendanceRecords.roomId]=(parseFloat(localStorage["roomMapZoom-"+currentAttendanceRecords.roomId])+.1).toFixed(1),attendanceRoomViewZoom()}function attendanceRoomViewZoomOut(){let e=parseFloat(localStorage["roomMapZoom-"+currentAttendanceRecords.roomId])-.1;e>.1&&(localStorage["roomMapZoom-"+currentAttendanceRecords.roomId]=e.toFixed(1)),attendanceRoomViewZoom()}function attendanceRoomViewZoom(){let e=parseFloat(localStorage["roomMapZoom-"+currentAttendanceRecords.roomId]);roomMap.style.setProperty("--seat-width",25*e+"px"),roomMap.style.setProperty("--seat-height",25*e+"px")}function roomNamesToggle(){roomMap.style.setProperty("--name-visible","hidden"===roomMap.style.getPropertyValue("--name-visible")?"visible":"hidden")}enableDragToScroll(roomMapHolder);let learnNamesSection,learnNameRecs={},nextPhotoTimeout;async function showLearnNames(){let e=[...new Set(currentAttendanceRecords.filter((e=>e[fPHOTO])).map((e=>e[tSECTION_ID])))];if(e.length>1){let t=await promptF("Please choose section:",{},e.concat(["Cancel"]));if(!t)return;e[0]=t.clicked}learnNamesSection=semesterSectionId(localStorage.semesterSelected,e[0]),learnNameRecs[learnNamesSection]?.length||(learnNameRecs[learnNamesSection]=shuffled(currentAttendanceRecords.filter((t=>t[fPHOTO]&&t[tSECTION_ID]===e[0])).map((e=>e[tUSER_ID]))),learnNameRecs[learnNamesSection].indx=0),showInMain("learnNames"),showHide(["learnNamesMain","learnNamesNameBtn"],["learnNamesDone","learnNamesName"]),$("#learnNamesImg").src=DEFAULT_USER_IMG,$("#learnNamesName").innerText="",0==learnNameRecs[learnNamesSection].indx&&hide("learnNamesPrevBtn"),setTimeout(learnNamesShowUser,100)}async function learnNamesShowUser(){clearTimeout(nextPhotoTimeout);let e=learnNameRecs[learnNamesSection][learnNameRecs[learnNamesSection].indx],[t,n]=getSemesterSectionFromId(learnNamesSection),a=currentAttendanceRecords.find((t=>t[tUSER_ID]===e));nextImgInCarousel(null,null,await Promise.all(Object.values(a[fATTENDANCES]).filter((e=>e[fPHOTO])).map((a=>getLinkFromStoragePath(photoStoragePath(e,t,n,a.code)))))),learnNamesImgClick(),$("#learnNamesName").innerText=a[fNAME]+" "+a[fLAST_NAME],showHide("learnNamesNameBtn","learnNamesName")}async function learnNamesImgClick(){isHidden($("#learnNamesImg"))||(clearTimeout(nextPhotoTimeout),nextImgInCarousel(null,$("#learnNamesImg")),nextPhotoTimeout=setTimeout(learnNamesImgClick,PHOTO_NEXT_TIMER))}function learnNamesNextBtnClick(){learnNameRecs[learnNamesSection].length?(learnNameRecs[learnNamesSection].indx++,learnNameRecs[learnNamesSection].indx>=learnNameRecs[learnNamesSection].length?(learnNameRecs[learnNamesSection]=shuffled(learnNameRecs[learnNamesSection]),learnNameRecs[learnNamesSection].indx=0,hide("learnNamesPrevBtn")):learnNameRecs[learnNamesSection].indx&&show("learnNamesPrevBtn"),learnNamesShowUser()):showHide("learnNamesDone","learnNamesMain")}function learnNamesPrevBtnClick(){learnNameRecs[learnNamesSection].indx--,0==learnNameRecs[learnNamesSection].indx&&hide("learnNamesPrevBtn"),learnNamesShowUser()}function learnNamesNameBtnClick(){showHide("learnNamesName","learnNamesNameBtn")}function learnNamesRemoveBtnClick(){learnNameRecs[learnNamesSection].splice(learnNameRecs[learnNamesSection].indx,1),learnNameRecs[learnNamesSection].indx>=learnNameRecs[learnNamesSection].length?learnNamesNextBtnClick():learnNamesShowUser()}const CREATE_SECTION_BUTTON_TEXT="Create New Section",NO_ASSIGNED_ROOM="No assigned room";async function createNewSection(){$("#addOrEditSectionTitle").innerText="Create New Section",$("#editSectionSubmitBtn").innerText=CREATE_SECTION_BUTTON_TEXT,hide("editSectionDeleteBtn"),$("#editSectionIdInput").removeAttribute("disabled"),$("#editSectionSemesterSelect").removeAttribute("disabled"),await showEditSectionScreen(),$("#editSectionInstructorEmailsInput").value=auth.currentUser.email,$("#editSectionInstructorNamesInput").value="Prof. "+userDoc[fLAST_NAME],$("#editSectionIdInput").value="",$("#editSectionTitleInput").value="",$("#editSectionPatternInput").value="",$("#editSectionRoom").innerText=NO_ASSIGNED_ROOM,$("#editSectionCrosslistInput").value="",$("#editSectionGradeInput").value=DEFAULT_GRADING_EQUATION,$("#editSectionLateInput").value=25,$("#editSectionLocationYes").checked=!0,$("#editSectionSeatYes").checked=!0,$("#editSectionPhotoYes").checked=!0,$("#editSectionAllowSelfEnroll").checked=!1}async function editSection(e,t){$("#addOrEditSectionTitle").innerText=`Edit Section ${e}`,$("#editSectionSubmitBtn").innerText="Save Section",show("editSectionDeleteBtn"),$("#editSectionIdInput").setAttribute("disabled",!0),$("#editSectionCrosslistInput").setAttribute("disabled",!0),$("#editSectionSemesterSelect").setAttribute("disabled",!0),await showEditSectionScreen(),$("#editSectionIdInput").value=e,$("#editSectionTitleInput").value=t[fSECTION_TITLE]||"",$("#editSectionPatternInput").value=t[fSECTION_PATTERN]||"",$("#editSectionRoom").innerText=t[fROOM_ID]||NO_ASSIGNED_ROOM,$("#editSectionCrosslistInput").value=t[fSECTION_CROSS_LISTED]?.join("\n")||"",$("#editSectionInstructorEmailsInput").value=t[fINSTRUCTOR_EMAILS]?.join("\n")||"",$("#editSectionInstructorNamesInput").value=t[fINSTRUCTOR_NAMES]||"",$("#editSectionAllowSelfEnroll").checked=t[fVISIBLE],$("#editSectionGradeInput").value=t[fSECTION_GRADING]||DEFAULT_GRADING_EQUATION,$("#editSectionLateInput").value=t[fSECTION_LATE]||25,-1===t[fSEAT]?$("#editSectionSeatNo").checked=!0:1===t[fSEAT]?$("#editSectionSeatWarn").checked=!0:2===t[fSEAT]?$("#editSectionSeatRequire").checked=!0:$("#editSectionSeatYes").checked=!0,-1===t[fPHOTO]?$("#editSectionPhotoNo").checked=!0:1===t[fPHOTO]?$("#editSectionPhotoWarn").checked=!0:2===t[fPHOTO]?$("#editSectionPhotoRequire").checked=!0:$("#editSectionPhotoYes").checked=!0,-1===t[fLOCATION]?$("#editSectionLocationNo").checked=!0:1===t[fLOCATION]?$("#editSectionLocationWarn").checked=!0:2===t[fLOCATION]?$("#editSectionLocationRequire").checked=!0:$("#editSectionLocationYes").checked=!0}async function showEditSectionScreen(){let e;showInMain("addOrEditSection");let t=$("#editSectionSemesterSelect");if(1==t.children.length){let n=await getSemesters();for(let a of n)e=t.appendChild(document.createElement("option")),e.id=e.value=e.innerText=a}for(let e of t.children)e.innerText==localStorage.semesterSelected?(e.setAttribute("selected",!0),t.value=e.value):e.removeAttribute("selected")}function editSectionResetRoom(){$("#editSectionRoom").innerText=NO_ASSIGNED_ROOM}function testGradingEquation(e){const t=e.target;t.value=niceEquation(t.value.trim());let n=illegalEquation(spacedEquation(t.value));if(n.length)return void toastError(`Illegal character(s) found in the equation: ${n}\n\n${EQUATION_INSTRUCTIONS}`);let a=[];var o="<table><tr><td>OnTime</td><td>Late</td><td>Absent</td><td>Excused</td><th>Grade</th></tr>";for(let e of EQUATION_TEST_CASES){let n=executeEquation(t.value,e);a.push(n),o+=`<tr><td>${e.P}</td><td>${e.L}</td><td>${e.A}</td><td>${e.E}</td><th>${n}</th></tr>`}o+="</table>",a.some((e=>!isNum(e)))?toastError("Invalid grading equation.\n\n"+o):a[0]>=a[1]&&a[1]>=a[2]&&a[2]>=a[3]&&a[3]>=a[4]?toast(o,"Testing your grading equation:"):toastWarn("There may be something wrong with your grading equation:\n\n"+o)}async function editSectionSaveSection(){validateInputForFieldName($("#editSectionIdInput"));let e=$("#editSectionSubmitBtn").innerText===CREATE_SECTION_BUTTON_TEXT,t=$("#editSectionSemesterSelect").value,n=$("#editSectionIdInput").value,a={[fINSTRUCTOR_EMAILS]:$("#editSectionInstructorEmailsInput").value?.split("\n")?.map((e=>e.trim()))?.filter((e=>e)),[fINSTRUCTOR_NAMES]:$("#editSectionInstructorNamesInput").value.trim(),[fSECTION_TITLE]:$("#editSectionTitleInput").value.trim(),[fSECTION_PATTERN]:$("#editSectionPatternInput").value.trim(),[fSECTION_GRADING]:$("#editSectionGradeInput").value.trim(),[fSECTION_LATE]:$("#editSectionLateInput").value,[fSECTION_CROSS_LISTED]:$("#editSectionCrosslistInput").value?.split("\n")?.map((e=>e.trim()))?.filter((e=>e)),[fSEAT]:$("#editSectionSeatWarn").checked+2*$("#editSectionSeatRequire").checked-$("#editSectionSeatNo").checked,[fPHOTO]:$("#editSectionPhotoWarn").checked+2*$("#editSectionPhotoRequire").checked-$("#editSectionPhotoNo").checked,[fLOCATION]:$("#editSectionLocationWarn").checked+2*$("#editSectionLocationRequire").checked-$("#editSectionLocationNo").checked,[fVISIBLE]:$("#editSectionAllowSelfEnroll").checked};if($("#editSectionRoom").innerText!==NO_ASSIGNED_ROOM&&(a[fROOM_ID]=$("#editSectionRoom").innerText),!t)return void toast("Please select semester.","Missing information:",-1);if(!n)return void toast("Please enter section id.","Missing information:",-1);if(e&&n.includes(SEMESTER_SECTION_SEPARATOR))return void toast('Specified section id includes an invalid character "'+SEMESTER_SECTION_SEPARATOR+'".',"Invalid section id:",-1);if(!a[fINSTRUCTOR_EMAILS])return void toast("Please enter section instructor email(s).","Missing information:",-1);if(!a[fINSTRUCTOR_NAMES])return void toast("Please enter section instructor name(s).","Missing information:",-1);if(a[fSECTION_CROSS_LISTED]?.includes(n))return void toast("Please do not enter current section id under cross-listed section ids.","Invalid cross-listed information:",-1);if(!a[fROOM_ID]){if(a[fSEAT]>-1)return void toast('You have not assigned a room to this section.\nEither assign a room to this section or select the "No" option under "Collect seat information".',"Missing information:",-1);if(!await promptF("You have not assigned a room to this section.\nAre you sure you would like to continue without a room assignment?"))return}if(EQUATION_TEST_CASES.some((e=>!isNum(executeEquation(a[fSECTION_GRADING],e)))))return void toast("Click the help icon next to the Grade Equation field to view the correct format.","Invalid equation format for grading:",-1);let o=await getSections(t);for(let t in o)if(t===n){if(e)return void toast(`Section ${n} already exists.`,"Duplicate section id:",-1)}else{let i=o[t];if(e&&i[fSECTION_CROSS_LISTED]?.includes(n))return void toast(`Section ${n} already exists.\nIt is cross-listed with section ${t}.`,"Duplicate section id:",-1);if(a[fSECTION_CROSS_LISTED]?.includes(t))return void toast(`Cannot list ${t} as a cross-listed section because a record for ${t} already exists.`,"Duplicate section id:",-1);let r=a[fSECTION_CROSS_LISTED]?.filter((e=>i[fSECTION_CROSS_LISTED]?.includes(e)));if(r.length)return void toast(`Cannot list ${r} as cross-listed section(s).\n${t} already includes cross-listed section(s):\n ${r}`,"Duplicate section id:",-1)}if(!e){let e=o[n][fSECTION_CROSS_LISTED].filter((e=>!a[fSECTION_CROSS_LISTED].includes(e)));if(e.length&&!await promptF(`Are you sure you would like to remove ${e} as cross-listed section(s) for this course?\nThis action may have undesired consequences.`))return}a[fSECTION_REQUIRED_ATTENDANCE_FIELDS]=makeRequiredAttendanceFieldsString(a),delete a[fLOCATION],delete a[fPHOTO],delete a[fSEAT],(await db.updateOne(cSECTIONS,t,{[n]:a})).error?toastError("Failed to add section.\n\nPlease try again."):(Object.assign(a,getAttendanceInfoRequirements(a[fSECTION_REQUIRED_ATTENDANCE_FIELDS])),o[n]=Object.assign(o[n]||{},a),t===localStorage.semesterSelected&&(e&&addSectionCard(n,a,$("#instructorSections")),showEnrolledAndTeachingSections(localStorage.semesterSelected)),n===getAttendanceSectionId.innerText&&($("#getAttendanceCrossListIds").innerHTML=a[fSECTION_CROSS_LISTED]?"<span>"+a[fSECTION_CROSS_LISTED].join("</span> <span>")+"</span>":"",$("#getAttendanceSectionInfo").innerText=sectionInfoText(a,!0),currentAttendanceRecords._sectionIds=[getAttendanceSectionId.innerText].concat(a[fSECTION_CROSS_LISTED])),navigateBack())}async function editSectionDeleteSection(){let e=await promptF('Are you sure you want to delete this section?<p>WARNING:<p>All data associated with this section will be lost, including all attendance records.<p>To confirm this action you must type the word "delete" in the the Confirm field below and click OK.',{Confirm:""});if(e){if("delete"!==e.Confirm)return void toastWarn('The section was NOT deleted.\n\nYou clicked OK but did not enter the word "delete" at the Confirm prompt.\nIf you want to delete this section, please try again, and make sure to type the word "delete" at the Confirm prompt.');let t=$("#editSectionSemesterSelect").value,n=$("#editSectionIdInput").value,a=await db.updateOne(cSECTIONS,t,{[n]:db.deleteField()});a.error?toastError("Failed to delete section.\n",a.error):(delete allSections[t][n],a=await db.deleteOne(cATTENDANCE,semesterSectionId(t,n)),a?.error&&toastError("Deleted section, but failed to delete attendance data.\n",a.error),showEnrolledAndTeachingSections(localStorage.semesterSelected),navigateBack(),navigateBack())}}function editSectionAssignRoom(){showRooms((e=>$("#editSectionRoom").innerText=e))}const editRoomLayoutDiv=$("#editRoomLayout");let editRoomPaintingSeats,editRoomLayoutHistory,campusBuildings={};async function updateCampusesAndBuilding(){let e=await getRooms(),t=[...new Set(Object.values(e).map((e=>e[fCAMPUS])))];t.sort(),$("#editRoomCampusDataList").innerHTML="",$("#roomsCampusSelect").innerHTML='<option value="">All campuses</option>';for(let n of t)if(n){campusBuildings[n]=[...new Set(Object.values(e).filter((e=>e[fCAMPUS]===n)).map((e=>e[fBUILDING])))],campusBuildings[n].sort(),$("#editRoomCampusDataList").appendChild(document.createElement("option")).value=n;let t=$("#roomsCampusSelect").appendChild(document.createElement("option"));t.innerText=t.value=n}1===$("#editRoomCampusDataList").childElementCount?($("#roomsCampusSelect").value=$("#roomsCampusSelect").lastChild.value,$("#roomsCampusSelect").setAttribute("disabled",!0)):localStorage.campusSelected&&($("#roomsCampusSelect").value=localStorage.campusSelected,$("#roomsCampusSelect").removeAttribute("disabled")),$("#editRoomBuildingDataList").innerHTML="";for(let t of new Set(Object.values(e).map((e=>e[fBUILDING]))))t&&($("#editRoomBuildingDataList").appendChild(document.createElement("option")).value=t);roomsCampusSelected(),roomsBuildingSelected()}function roomsCampusSelected(){if(localStorage.campusSelected=$("#roomsCampusSelect").value,$("#roomsBuildingSelect").innerHTML='<option value="">All buildings</option>',localStorage.campusSelected){for(let e of campusBuildings[localStorage.campusSelected])if(e){let t=$("#roomsBuildingSelect").appendChild(document.createElement("option"));t.innerText=t.value=e}localStorage.buildingSelected&&($("#roomsBuildingSelect").value=localStorage.buildingSelected)}else localStorage.buildingSelected="";roomsBuildingSelected()}async function roomsBuildingSelected(){localStorage.buildingSelected=$("#roomsBuildingSelect").value;let e=await getRooms(),t=Object.keys(allRooms).sort(((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1));for(;$("#roomList").childElementCount>1;)$("#roomList").removeChild($("#roomList").lastChild);for(let n of t)!e[n][fROOM_NAME]||localStorage.campusSelected&&localStorage.campusSelected!==e[n][fCAMPUS]||localStorage.buildingSelected&&localStorage.buildingSelected!==e[n][fBUILDING]||addRoomCard(n,e[n])}async function showRooms(e){selectingRoomF=e,showInMain("rooms"),$("#roomList").childElementCount<2&&updateCampusesAndBuilding()}var selectingRoomF,selectingUserF,addUsersF;function addRoomCard(e,t){let n=t[fROOM_LAYOUT].split("\n").map((e=>e.split("\t"))).flat().filter((e=>e.trim())).length,a=$("#roomList").appendChild(document.createElement("div"));a.innerHTML=`${e}\n${n} seats\n${t[fBUILDING]}\n${t[fROOM_NAME]}\n${t[fCAMPUS]}`,a._editRoomF=function(){$("#editRoomId").setAttribute("disabled",!0),$("#editRoomId").value=e,$("#editRoomCampus").value=t[fCAMPUS],$("#editRoomBuilding").value=t[fBUILDING],$("#editRoomName").value=t[fROOM_NAME],editRoomLayoutHistory=[tsv2arr(t[fROOM_LAYOUT].toUpperCase())],editRoomLayoutHistory.indx=0,createLayoutFromRoom();let n=[];for(let t in allSections)for(let a in allSections[t])allSections[t][a][fROOM_ID]===e&&(n.push(a),allSections[t][a][fSECTION_CROSS_LISTED]?.length&&n.push(...allSections[t][a][fSECTION_CROSS_LISTED]));n.length?($("#editRoomUsedIn").innerText=`Room used for sections:\n  ${n.join(", ")}`,showHide("editRoomUsedIn","editRoomDeleteBtn")):showHide("editRoomDeleteBtn","editRoomUsedIn"),showInMain("editRoom")},a.onclick=function(){selectingRoomF?(selectingRoomF(e),navigateBack()):a._editRoomF()}}function createNewRoom(){$("#editRoomId").removeAttribute("disabled"),$("#editRoomId").value="",$("#editRoomCampus").value="",$("#editRoomBuilding").value="",$("#editRoomName").value="",hide("editRoomDeleteBtn"),hide("editRoomUsedIn"),editRoomLayoutHistory=[],editRoomLayoutHistory.indx=-1,editRoom123Click(Array(6).fill().map((()=>Array(4).fill(" ")))),showInMain("editRoom")}function pushRoomLayoutToHistory(e){e||(e=[...editRoomLayoutDiv.children].map((e=>[...e.children].map((e=>e.innerText))))),JSON.stringify(e)!=JSON.stringify(editRoomLayoutHistory[editRoomLayoutHistory.indx])&&(editRoomLayoutHistory.indx++,editRoomLayoutHistory.length=editRoomLayoutHistory.indx,editRoomLayoutHistory.push(e))}function createLayoutFromRoom(e){e?pushRoomLayoutToHistory(e):e=editRoomLayoutHistory[editRoomLayoutHistory.indx],editRoomLayoutDiv.innerHTML="";for(let t=0;t<e.length;t++){let n=e[t],a=editRoomLayoutDiv.appendChild(document.createElement("div"));for(let o=0;o<n.length;o++){let i=a.appendChild(document.createElement("div"));i.setAttribute("contenteditable",!0),e[t][o]&&(i.classList.add("seat"),i.innerText=e[t][o]),i.onmouseover=e=>{editRoomPaintingSeats&&e.buttons&&(e.preventDefault(),1===editRoomPaintingSeats?(i.classList.add("seat"),i.innerText="_"):-1===editRoomPaintingSeats&&(i.classList.remove("seat"),i.innerText=""))},i.onmouseout=e=>{if(!editRoomPaintingSeats&&e.buttons){function t(e){e.buttons||(editRoomPaintingSeats=0,pushRoomLayoutToHistory(),window.removeEventListener("mousemove",t))}e.preventDefault(),editRoomPaintingSeats=i.classList.contains("seat")?-1:1,1===editRoomPaintingSeats?(i.classList.add("seat"),i.innerText="_"):-1===editRoomPaintingSeats&&(i.classList.remove("seat"),i.innerText=""),window.addEventListener("mousemove",t)}},i.oninput=e=>{i.innerText.includes("\n")&&i.blur(),i.innerText?i.classList.add("seat"):i.classList.remove("seat")},i.onblur=e=>{i.innerText=formatSeatCode(i.innerText),pushRoomLayoutToHistory()},i.ondblclick=e=>{e.preventDefault(),i.innerText?(i.classList.remove("seat"),i.innerText=""):(i.classList.add("seat"),i.innerText="_",selectText(i))},i.addEventListener("contextmenu",(async r=>{r.preventDefault();let s=await showContextMenu(r.clientX,r.clientY,["Insert left","Insert right","Delete","","Insert row above","Insert row below","Delete row","","Insert col left","Insert col right","Delete col"]);if("Delete"===s)i.remove(),pushRoomLayoutToHistory();else if("Insert left"===s){let n=JSON.parse(JSON.stringify(e));n[t].splice(o,0,""),createLayoutFromRoom(n)}else if("Insert right"===s){let n=JSON.parse(JSON.stringify(e));n[t].splice(o+1,0,""),createLayoutFromRoom(n)}else if("Delete row"===s)a.remove(),pushRoomLayoutToHistory();else if("Insert row above"===s){let a=JSON.parse(JSON.stringify(e));a.splice(t,0,Array(n.length).fill("")),createLayoutFromRoom(a)}else if("Insert row below"===s){let a=JSON.parse(JSON.stringify(e));a.splice(t+1,0,Array(n.length).fill("")),createLayoutFromRoom(a)}else if("Delete col"===s){let t=JSON.parse(JSON.stringify(e));t.forEach((e=>e.splice(o,1))),createLayoutFromRoom(t)}else if("Insert col left"===s){let t=JSON.parse(JSON.stringify(e));t.forEach((e=>e.splice(o,0,""))),createLayoutFromRoom(t)}else if("Insert col right"===s){let t=JSON.parse(JSON.stringify(e));t.forEach((e=>e.splice(o+1,0,""))),createLayoutFromRoom(t)}}))}}}async function editRoomGridClick(){let e=await promptF("Select grid size",{Rows:editRoomLayoutHistory[editRoomLayoutHistory.indx].length,Cols:Math.max(...editRoomLayoutHistory[editRoomLayoutHistory.indx].map((e=>e.length)))});e&&editRoom123Click(Array(e.Rows).fill().map((()=>Array(e.Cols).fill(" "))))}function editRoom123Click(e){e||(e=JSON.parse(JSON.stringify(editRoomLayoutHistory[editRoomLayoutHistory.indx])));let t,n=0;for(let a=e.length-1;a>-1;a--){let o=e[a];t=0;for(let i=0;i<o.length;i++)e[a][i]&&e[a][i]&&(e[a][i]="ABCDEFGHIJKLMNOPQRSTUVWXYZ"[n]+ ++t);t&&n++}createLayoutFromRoom(e)}function editRoomAbcClick(){let e,t=JSON.parse(JSON.stringify(editRoomLayoutHistory[editRoomLayoutHistory.indx])),n=1;for(let a=t.length-1;a>-1;a--){let o=t[a];e=0;for(let i=0;i<o.length;i++)t[a][i]&&t[a][i]&&(t[a][i]="ABCDEFGHIJKLMNOPQRSTUVWXYZ"[e++]+n);e&&n++}createLayoutFromRoom(t)}function editRoomResetClick(){editRoomLayoutHistory.indx>0&&(editRoomLayoutHistory.indx=0,createLayoutFromRoom())}function editRoomUndoClick(){editRoomLayoutHistory.indx>0?(editRoomLayoutHistory.indx--,createLayoutFromRoom()):toast("Nothing to undo.")}function editRoomRedoClick(){editRoomLayoutHistory.indx<editRoomLayoutHistory.length-1?(editRoomLayoutHistory.indx++,createLayoutFromRoom()):toast("Nothing to redo.")}function editRoomSaveClick(){if(null===$("#editRoomId").getAttribute("disabled")){if($("#editRoomId").value=$("#editRoomId").value.trim(),validateInputForFieldName($("#editRoomId")),!$("#editRoomId").value)return void toastError("Missing field: Room Id");if($("#editRoomId").value in allRooms)return void toastError(`Room ${$("#editRoomId").value} already exists.`)}if($("#editRoomBuilding").value=$("#editRoomBuilding").value.trim(),$("#editRoomName").value=$("#editRoomName").value.trim(),$("#editRoomCampus").value=$("#editRoomCampus").value.trim(),!$("#editRoomBuilding").value)return void toastError("Missing field: Building");if(!$("#editRoomName").value)return void toastError("Missing field: Room name or number");if(!$("#editRoomCampus").value)return void toastError("Missing field: Campus");let e=[...editRoomLayoutDiv.children].map((e=>[...e.children].map((e=>e.innerText)))),t=e.flat();for(let e=0;e<t.length;e++)if(t[e]){if(t.indexOf(t[e])!==e)return void toastError("Duplicate seat code: "+t[e]);if(!t[e].match(/^[a-z0-9]+$/i))return void toastError(`Invalid seat code: ${t[e]}.\nSeat codes must be combinations of letters and numbers.`)}let n={[fROOM_NAME]:$("#editRoomName").value,[fBUILDING]:$("#editRoomBuilding").value,[fCAMPUS]:$("#editRoomCampus").value,[fROOM_LAYOUT]:e.map((e=>e.join("\t"))).join("\n")},a=db.insertOne(cROOMS,$("#editRoomId").value,n);a.error?toastError("Could not save changes to room.\n"+a.error):(allRooms[$("#editRoomId").value]=n,n[fCAMPUS]!==localStorage.campusSelected?localStorage.campusSelected="":n[fBUILDING]!==localStorage.buildingSelected&&(localStorage.buildingSelected=""),navigateBack(),updateCampusesAndBuilding(),selectingRoomF&&(navigateBack(),selectingRoomF($("#editRoomId").value)))}async function editRoomDeleteClick(){if(await promptF("Are you sure you would like to delete this room record?",{},["Delete","Cancel"])){let e=db.deleteOne(cROOMS,$("#editRoomId").value);e.error?toastError("Could not delete room record.\n"+e.error):(delete allRooms[$("#editRoomId").value],navigateBack(),updateCampusesAndBuilding())}}function printLabelsClick(){let e=[...editRoomLayoutDiv.children].reverse().map((e=>[...e.children].map((e=>e.innerText)))).flat().filter((e=>e));window.open("printLabels.html?"+e,"lectureSeatsLabels")}function showManageUsers(e,t=""){(selectingUserF=e)?hide("manageUsersAddUserButtons"):show("manageUsersAddUserButtons"),$("#manageUsersTitle").innerHTML=t,showInMain("manageUsers");const n=$("#manageUsersPages");if(!n.childElementCount){for(let e of ALPHABET){let t=n.appendChild(document.createElement("span"));t.innerText=e,t.onclick=()=>{$("#manageUsersEmailInput").value="",$("#manageUsersNameInput").value="",$("#manageUsersLastNameInput").value="",$(".manageUsersSelectedFilter").value=$(".manageUsersSelectedFilter")==$("#manageUsersEmailInput")?e:e.toUpperCase(),findUsers()}}let e=n.appendChild(document.createElement("span"));e.innerText="—",e.onclick=()=>{$("#manageUsersEmailInput").value="",$("#manageUsersNameInput").value="",$("#manageUsersLastNameInput").value="",findUsers()}}}function manageUsersSelectFilter(e){$(".manageUsersSelectedFilter").classList.remove("manageUsersSelectedFilter"),e.classList.add("manageUsersSelectedFilter")}async function findUsers(){let e=$("#manageUsersEmailInput").value,t=$("#manageUsersNameInput").value,n=$("#manageUsersLastNameInput").value,a=$("#manageUsersSelectRoleStudent").checked,o=$("#manageUsersSelectRoleInstructor").checked,i=$("#manageUsersSelectRoleAdmin").checked;if(!(e||t||n||o||i))return void(manageUsersList.innerHTML='When "Any role" or "Students Only" role is selected, you must also supply additional filters for email and/or last name and/or preferred name.');let r={};if(e?r=await searchUsers(e):n?r=await searchUsers(n,fLAST_NAME):t?r=await searchUsers(t,fNAME):o?r=await searchUsers([1,3],fROLE):i&&(r=await searchUsers([2,3],fROLE)),r?.error)toastError("Could not perform search.\n"+r.error);else{const e=$("#manageUsersList");e.innerHTML="",t=t.toLowerCase(),n=n.toLowerCase();for(let e in r){let s=r[e];n&&!(s[fLAST_NAME].toLowerCase()||"").startsWith(n)||(t&&!(s[fNAME].toLowerCase()||"").startsWith(t)||a&&s[fROLE]||(!o||s[fROLE]&INSTRUCTOR)&&(!i||s[fROLE]&ADMIN)&&manageUsersAddUserRow(e,s))}e.innerHTML?e.insertBefore(document.createElement("row"),e.firstElementChild).innerHTML="<div>Admin</div><div>Instructor</div><div>Email</div><div>Last Name</div><div>Preferred Name</div>":e.innerHTML="No users found matching the specified filters."}}function manageUsersAddUserRow(e,t){let n=$("#manageUsersList").appendChild(document.createElement("row"));n.innerHTML=`<div>${t[fROLE]&ADMIN?"✔️":""}</div><div>${t[fROLE]&INSTRUCTOR?"✔️":""}</div><div>${e}</div><div>${t[fLAST_NAME]||""}</div><div>${t[fNAME]||""}</div>`,n.onclick=async function(){if(selectingUserF)return void selectingUserF(e);let a=`${e}\n${fullName(t,"\n")}\n`,o=await getOneLinkFromStoragePath(userIdFromEmail(e));o&&(a+=`<img src="${o}" height=${PHOTO_SIZE}>\n`);for(let e in t[fENROLLED_SECTIONS]){let n=Object.keys(t[fENROLLED_SECTIONS][e]);n.length&&(a+=`<small>${e}: ${n}</small>\n`)}let i=await promptF(a,{Instructor:Boolean(t[fROLE]&INSTRUCTOR),Admin:Boolean(t[fROLE]&ADMIN)},["Save","Cancel"]);if(i){let a=i.Instructor*INSTRUCTOR+i.Admin*ADMIN,o=`Are you sure you would like to change the role for ${e}?`;if(a&INSTRUCTOR&&!(t[fROLE]&INSTRUCTOR)&&(o+="\n<li>Adding instructor privileges</li>"),!(a&INSTRUCTOR)&&t[fROLE]&INSTRUCTOR&&(o+="\n<li>Taking away instructor privileges</li>"),a&ADMIN&&!(t[fROLE]&ADMIN)&&(o+="\n<li>Adding admin privileges</li>"),!(a&ADMIN)&&t[fROLE]&ADMIN&&(o+="\n<li>Taking away admin privileges</li>"),a!==t[fROLE]&&await promptF(o)){let o=await db.updateOne(cUSERS,e,{[fROLE]:a});o.error?toastError(`Could not update user profile for ${e}.\n`+o.error):(t[fROLE]=a,n.innerHTML=`<div>${a&ADMIN?"✔️":""}</div><div>${a&INSTRUCTOR?"✔️":""}</div><div>${e}</div><div>${t[fLAST_NAME]||""}</div><div>${t[fNAME]||""}</div>`)}}}}async function addUser(){let e=await promptF("",{Email:{placeholder:"username"+DOMAIN,required:!0,onchange:"this.value=this.value.trim().toLowerCase();if(!this.value.endsWith(DOMAIN))this.value+=DOMAIN"},"First name":"","Last name":"",Instructor:!1,Admin:!1},["Add User","Cancel"]);if(e){let t=e.Email.split("@");if(2!==t.length||!isValidEmailLocal(t[0])||!e.Email.endsWith(DOMAIN))return void toastError(`Invalid email address ${e.Email}.`);let n=await db.getDoc(cUSERS,e.Email);if(n?.error)return void toastError("Could not access the database.\n"+n.error);if(n)return void toastError(`Cannot add user.\nUser with the email ${e.Email} already exists.`);let a={};if(e["First name"]&&(a[fNAME]=e["First name"]),e["Last name"]&&(a[fLAST_NAME]=e["Last name"]),(e.Instructor||e.Admin)&&(a[fROLE]=e.Instructor*INSTRUCTOR+e.Admin*ADMIN),n=await db.insertOne(cUSERS,e.Email,a),n.error)return void toastError("Could not add user to database.\n"+n.error);allUsers[e.Email]=a,$("#manageUsersList").childElementCount||($("#manageUsersList").innerHTML="",$("#manageUsersList").appendChild(document.createElement("row")).innerHTML="<div>Admin</div><div>Instructor</div><div>Email</div><div>Last Name</div><div>Preferred Name</div>"),manageUsersAddUserRow(e.Email,a)}}function showAddUsers(e,t="Add users"){(addUsersF=e)?hide("addUsersRoleOptions"):show("addUsersRoleOptions"),$("#addUsersBtn").innerText=t,$("#addUsersEmails").innerText="",$("#addUsersNames").innerText="",showInMain("addUsers")}function addUsersTextChanged(){const e=$("#addUsersList");$("#addUsersEmails").value!==$("#addUsersEmails").value.trimStart()&&($("#addUsersEmails").value=$("#addUsersEmails").value.trimStart());let t=$("#addUsersEmails").value.split("\n").filter((e=>e)),n=$("#addUsersNames").value?$("#addUsersNames").value.trimEnd().split("\n"):[];if(e.innerHTML="",$("#addUsersBtn").setAttribute("disabled",!0),t.length){const a=$("#addUsersLastNameFirst").checked;let o,i,r,s,l,d,c,u=[],S=new Set,m=new Set;e.appendChild(document.createElement("row")).innerHTML="<div>Email</div><div>Last Name</div><div>First Name</div>";for(let c=0;c<t.length;c++){l=t[c].toLowerCase(),l.endsWith(DOMAIN)||(l+=DOMAIN),o=e.appendChild(document.createElement("row")),i=o.appendChild(document.createElement("div")),r=o.appendChild(document.createElement("div")),s=o.appendChild(document.createElement("div")),i.innerText=l,n[c]&&(d=n[c].split(/\s?,\s?|\s{2,}|\t/),(a?r:s).innerText=validName(d[0]),d[1]&&((a?s:r).innerText=validName(d[1])));let E=l.split("@");2==E.length&&isValidEmailLocal(E[0])||(u.push(l),i.classList.add("bad-text")),m.has(l)?(S.add(l),i.innerHTML+=" (duplicate)",i.classList.add("bad-text")):m.add(l)}u.length?c="Invalid emails:\n"+u.join("; ")+"\n":S.size?c="Duplicate emails:\n"+[...S].join("; ")+"\n":n.length>t.length?c=`You specified ${n.length} names, but only ${t.length} matching emails/usernames.`:(c=`Ready to add ${t.length} user(s).`,$("#addUsersBtn").removeAttribute("disabled")),$("#addUsersSummary").innerHTML=c+"\nCheck the table below to make sure all emails and names are correctly inferred."}else if(n.length)return void toastWarn("Please enter emails or usernames to proceed.")}function addUsers(){let e=[...$("#addUsersList").children].map((e=>[...e.children].map((e=>e.innerText)))).slice(1);if(addUsersF)addUsersF(e);else for(let t=0;t<e.length;t++);}function sectionInfoText(e,t){return t?[e[fSECTION_TITLE]||"Title: None",e[fSECTION_PATTERN]||"Pattern: None",e[fROOM_ID]||NO_ASSIGNED_ROOM,e[fINSTRUCTOR_NAMES]||e[fINSTRUCTOR_EMAILS]?.join("\n")].join("\n"):[e[fSECTION_TITLE],e[fSECTION_PATTERN],e[fROOM_ID]||"",e[fINSTRUCTOR_NAMES]||e[fINSTRUCTOR_EMAILS]?.join("\n")].filter((e=>e)).join("\n")}function makeSectionCard(e,t,n,a){var o=document.createElement("div");o._sectionDoc=t,o.id=e,o.className="sectionCard";var i=o.appendChild(document.createElement("div"));return i.class="cardTitle",i.innerText=e,a&&t[fSECTION_CROSS_LISTED]&&(i.innerText+="\n"+t[fSECTION_CROSS_LISTED].join("\n")),(i=o.appendChild(document.createElement("div"))).innerText=sectionInfoText(t),o.addEventListener("click",n),o}async function getAttendanceCardClick(e){showGetAttendance(e.currentTarget.id,e.currentTarget._sectionDoc)}function markAttendanceCardClick(e){showMarkAttendance(e.currentTarget.id,e.currentTarget._sectionDoc)}async function addSectionToStudentClick(e){let t=e.currentTarget.id,n=e.currentTarget._sectionDoc;(await db.updateOne(cUSERS,auth.currentUser.email,{[fENROLLED_SECTIONS+"."+localStorage.semesterSelected+"."+t]:{}})).error?toastError("Failed to add section.\n\nPlease try again."):(userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]||(userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]={}),userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected][t]={},addSectionCard(t,n,$("#studentSections"),markAttendanceCardClick),navigateBack())}function addSectionCard(e,t,n,a,o){var i=makeSectionCard(e,t,a,o);n.insertBefore(i,n.lastElementChild)}async function showAvailableStudentSections(){showInMain("selectStudentSection");var e=await getSections(localStorage.semesterSelected),t=$("#availableStudentSections");t.innerHTML="<span></span>";let n=Object.keys(e).sort(),a=new Set(userDoc[fENROLLED_SECTIONS]&&userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]?Object.keys(userDoc[fENROLLED_SECTIONS][localStorage.semesterSelected]):[]);for(let o of n){let n=e[o];if(n[fVISIBLE]&&!a.has(o)&&!n[fSECTION_CROSS_LISTED]?.filter((e=>a.has(e))).length&&(addSectionCard(o,n,t,addSectionToStudentClick),n[fSECTION_CROSS_LISTED]?.length))for(let e of n[fSECTION_CROSS_LISTED])addSectionCard(e,n,t,addSectionToStudentClick)}t.innerText||(t.appendChild(document.createElement("div")).innerText="No sections available.")}async function showEnrolledAndTeachingSections(e){const t=$("#studentSections"),n=$("#instructorSections");if(!e)return hide(t),void hide(n);$("#semesterSelect").value=e,show(t),userDoc[fROLE]&INSTRUCTOR&&show(n);var a=await getSections(e);for(let e=t.childElementCount-2;e>0;e--)t.children[e].remove();for(let e=n.childElementCount-1;e--;)n.children[e].remove();for(let o of Object.keys(a).sort()){let i=a[o];if(userDoc[fENROLLED_SECTIONS]&&userDoc[fENROLLED_SECTIONS][e]&&o in userDoc[fENROLLED_SECTIONS][e])addSectionCard(o,i,t,markAttendanceCardClick);else if(i[fSECTION_CROSS_LISTED]?.length)for(let n of i[fSECTION_CROSS_LISTED])userDoc[fENROLLED_SECTIONS]&&userDoc[fENROLLED_SECTIONS][e]&&n in userDoc[fENROLLED_SECTIONS][e]&&addSectionCard(n,i,t,markAttendanceCardClick);!n.classList.contains("hidden")&&i[fINSTRUCTOR_EMAILS]?.includes(auth.currentUser.email)&&addSectionCard(o,i,n,getAttendanceCardClick,!0)}}async function refreshAllSectionsList(){if(localStorage.semesterSelected){const e=$("#allSectionsList");e.innerHTML="";let t=await getSections(localStorage.semesterSelected);for(let n in t){let a=t[n];e.appendChild(makeSectionCard(n,a,(e=>editSection(e.currentTarget.id,e.currentTarget._sectionDoc)),!0))}}}async function showAllSections(){showInMain("allSections");const e=$("#allSectionsSemesterSelect");if(1==e.children.length){let t,n=await getSemesters();for(let a of n)t=e.appendChild(document.createElement("option")),t.id=t.value=t.innerText=a;localStorage.semesterSelected&&(e.value=localStorage.semesterSelected)}refreshAllSectionsList()}const nameInput=$("#nameInput"),lastNameInput=$("#lastNameInput"),saveNameBtn=$("#saveNameBtn");function nameChanged(){let e=validName(nameInput.value),t=validName(lastNameInput.value);!e||!t||nameInput.lastValue===e&&lastNameInput.lastValue===t?hide(saveNameBtn):show(saveNameBtn)}async function saveName(){saveNameBtn.setAttribute("disabled","true"),nameInput.value=validName(nameInput.value),lastNameInput.value=validName(lastNameInput.value);let e=await db.updateOne(cUSERS,auth.currentUser.email,{[fNAME]:nameInput.value,[fLAST_NAME]:lastNameInput.value});e.error?toastError("Unable to update name.\n"+e.error):(hide(saveNameBtn),userDoc[fNAME]=nameInput.lastValue=nameInput.value,userDoc[fLAST_NAME]=lastNameInput.lastValue=lastNameInput.value,toast("Name updated.","",1)),saveNameBtn.removeAttribute("disabled"),allowNav()}function showContextMenu(e,t,n){return new Promise((function(a,o){const i=$("#contextMenu");window.dispatchEvent(new Event("click")),e<window.innerWidth/2?(i.style.left=e,i.style.removeProperty("right")):(i.style.right=window.innerWidth-e,i.style.removeProperty("left")),t<window.innerHeight/2?(i.style.top=t,i.style.removeProperty("bottom")):(i.style.bottom=window.innerHeight-t,i.style.removeProperty("top")),i.innerHTML="";for(let e of n){let t=i.appendChild(document.createElement("div"));""===e?t.classList.add("separator"):e.startsWith("_")?t.innerText=e.slice(1):(t.innerText=e,t.onclick=()=>a(e),t.classList.add("contextMenuOption"))}show(i),window.addEventListener("click",(()=>{a(!1),hide(i)}),{once:!0}),window.addEventListener("popstate",(()=>{a(!1),hide(i)}),{once:!0})}))}function promptF(e,t={},n){if(navAllowed)return new Promise((function(a,o){disallowNav(),show("prompt");const i=$("#promptForm");let r={};$("#promptFormTitle").innerHTML=e;for(let e in t){let n=i.appendChild(document.createElement("label"));if(n.innerText=e,n.setAttribute("for",e),isNum(t[e]))r[e]=i.appendChild(document.createElement("input")),r[e].setAttribute("type","number"),r[e].value=t[e],r[e].id=e;else if(isBool(t[e])){let a=i.appendChild(document.createElement("div"));r[e]=a.appendChild(document.createElement("input")),a.appendChild(n),r[e].setAttribute("type","checkbox"),r[e].checked=t[e],r[e].id=e}else if(isArr(t[e])){r[e]=i.appendChild(document.createElement("select"));for(let n of t[e]){let t=r[e].appendChild(document.createElement("option"));if(isObj(n))for(let e in n)"value"===e?t.innerText=n[e]:t.setAttribute(e,n[e]);else t.innerText=n}r[e].id=e}else if(isStr(t[e]))t[e].includes("\n")?r[e]=i.appendChild(document.createElement("textarea")):r[e]=i.appendChild(document.createElement("input")),r[e].value=t[e],r[e].id=e;else if(isObj(t[e])){if(r[e]=i.appendChild(document.createElement("input")),Object.entries(t[e]).forEach((t=>r[e].setAttribute(t[0],t[1]))),r[e].required&&n.classList.add("required"),"checkbox"===r[e].type||"radio"===r[e].type){let t=i.appendChild(document.createElement("div"));t.appendChild(r[e]),t.appendChild(n)}r[e].id=e}else{i.appendChild(document.createElement("div")).appendChild(n)}}for(let e of n||["OK","Cancel"]){let t=$("#promptButtons").appendChild(document.createElement("button"));t.innerText=e,t.onclick="cancel"===e.toLowerCase()?()=>{a(!1),hidePrompt()}:()=>{if(!i.reportValidity())return;let t=Object.fromEntries(Object.entries(r).map((([e,t])=>[e,"checkbox"===t.type||"radio"===t.type?t.checked:"number"===t.type?parseFloat(t.value):t.value])));t.clicked=e,a(t),hidePrompt()}}}))}function hidePrompt(){$("#promptForm").innerHTML="",$("#promptButtons").innerHTML="",hide("prompt"),allowNav()}const toastDiv=$("#toast"),toastMsg=$("#toastMessage");function toast(e,t,n){if(n?toastDiv.style.setProperty("--toast-accent",n>0?"#4f6":n<-.5?"#f64":"#fe4"):toastDiv.style.setProperty("--toast-accent","gray"),toastMsg.innerHTML=t?t+"\n\n":"",isObj(e))for(let t in e)e[t]&&(toastMsg.innerHTML+=t+" : "+e[t]+"\n");else toastMsg.innerHTML+=e;setTimeout((()=>{window.addEventListener("mousedown",closeToast),window.addEventListener("keydown",closeToast),window.addEventListener("popstate",closeToast),mainDiv.addEventListener("scroll",closeToast),show(toastDiv),toastDiv.classList.add("slide-up")}),200)}function toastWarn(e){toast(e,"Warning",-.1)}function toastError(e){toast(e,"Error",-1)}function closeToast(){window.removeEventListener("mousedown",closeToast),window.removeEventListener("keydown",closeToast),window.removeEventListener("popstate",closeToast),mainDiv.removeEventListener("scroll",closeToast),hide(toastDiv),toastDiv.classList.remove("slide-up")}const themeToggle=$("#theme-switch");function toggleDarkMode(){setTheme(themeToggle.innerText.startsWith("dark"))}function setTheme(e){e?(localStorage.theme="dark",document.documentElement.setAttribute("theme","dark"),themeToggle.innerText="light_mode"):(delete localStorage.theme,document.documentElement.removeAttribute("theme"),themeToggle.innerText="dark_mode")}function changeFontSize(e){let t=parseInt(getComputedStyle(document.documentElement).getPropertyValue("--main-font-size"))+e+"pt";localStorage.fontSize=t,document.documentElement.style.setProperty("--main-font-size",t)}setTheme(localStorage.theme),localStorage.fontSize&&document.documentElement.style.setProperty("--main-font-size",localStorage.fontSize);const addClickEvent=(e,t)=>{e.constructor===NodeList||isArr(e)||(e=[e]);for(let n of e)n.addEventListener("click",t),n.setAttribute("onclick","")};function addHelp(e,t,n){let a=e.appendChild(document.createElement("span"));a.classList.add("helpIcon"),addClickEvent(a,(()=>toast(`<span class="material-symbols-outlined">info</span> <b>${t}</b>\n\n${n}`)))}addClickEvent($$(".back"),navigateBack),addClickEvent($$(".spinner"),(e=>spinOnce(e.currentTarget))),addClickEvent($$(".spinnerBtn"),(e=>spinOnce(e.currentTarget.firstElementChild))),addClickEvent($$(".logoutBtn"),signOut),addClickEvent($("#user"),(()=>{showInMain("profile")})),addClickEvent($("#signInBtn"),signInButtonClick),addClickEvent($("#registerBtn"),registerButtonClick),addClickEvent($("#resetPwdBtn"),resetPassword),addClickEvent($("#showNoPwdBtn"),showPasswordlessSignin),addClickEvent($("#signInSendBtn"),signInSendButtonClick),addClickEvent($$(".signInWithEmailPasswordBtn"),(()=>{showInSignin("signInWithEmailPassword")})),addClickEvent($("#signInCompleteBtn"),signInCompleteButtonClick),addClickEvent($("#signIngSendEmailBtn"),(()=>{showInSignin("signinSendEmail")})),addClickEvent($("#hideSigninLinkSentBtn"),hideSigninLinkSent),addClickEvent($("#addInstructorSectionBtn"),createNewSection),addClickEvent($("#sectionsQRreaderBtn"),openQRreader),addClickEvent($("#addStudentSectionBtn"),showAvailableStudentSections),addClickEvent($("#verifyEmailBtn"),verifyEmail),addClickEvent($("#sectionsBtn"),(()=>{showInMain("sections")})),addClickEvent($("#allSectionsBtn"),showAllSections),addClickEvent($("#roomsBtn"),(()=>showRooms())),addClickEvent($("#manageUsersBtn"),(()=>showManageUsers())),addClickEvent($("#markAttendanceScanPasscodeBtn"),(()=>{openQRreader("markAttendanceClassCodeInput")})),addClickEvent($("#markAttendanceScanSeatCodeBtn"),(()=>{openQRreader("markAttendanceSeatCodeInput")})),addClickEvent($("#defaultSelfieImg"),enableSelfieCamera),addClickEvent($("#selfieCanvas"),enableSelfieCamera),addClickEvent($("#selfieVideo"),snapPhoto),addClickEvent($("#addPhotoBtn"),enableSelfieCamera),addClickEvent($("#snapPhotoBtn"),snapPhoto),addClickEvent($("#switchPhotoBtn"),switchCamera),addClickEvent($$(".refreshLocation"),markAttendanceGetLocation),addClickEvent($("#markAttendanceButton"),checkInfoAndMarkAttendance),addClickEvent($("#markAttendanceRemoveButton"),removeSectionFromStudent),addClickEvent($("#switchQrCameraBtn"),switchQRCamera),addClickEvent($("#editSectionRoom"),editSectionAssignRoom),addClickEvent($("#editSectionRoomBtn"),editSectionAssignRoom),addClickEvent($("#editSectionResetRoomBtn"),editSectionResetRoom),addClickEvent($("#editSectionSubmitBtn"),editSectionSaveSection),addClickEvent($("#editSectionDeleteBtn"),editSectionDeleteSection),addClickEvent($("#createNewRoomBtn"),createNewRoom),addClickEvent($("#editRoomResetBtn"),editRoomResetClick),addClickEvent($("#editRoomUndoBtn"),editRoomUndoClick),addClickEvent($("#editRoomRedoBtn"),editRoomRedoClick),addClickEvent($("#editRoomGridBtn"),editRoomGridClick),addClickEvent($("#editRoom123Btn"),(()=>editRoom123Click())),addClickEvent($("#editRoomAbcBtn"),editRoomAbcClick),addClickEvent($("#editRoomSaveBtn"),editRoomSaveClick),addClickEvent($("#editRoomLabelsBtn"),printLabelsClick),addClickEvent($("#editRoomDeleteBtn"),editRoomDeleteClick),addClickEvent($("#addUserBtn"),addUser),addClickEvent($("#showAddUsersBtn"),(()=>showAddUsers())),addClickEvent($("#addUsersBtn"),addUsers),addClickEvent($("#createSectionURLBtn"),createSectionURLClick),addClickEvent($("#randomAttendanceClassCodeBtn"),randomAttendanceClassCode),addClickEvent($("#createQRCodeBtn"),(()=>createQRClick())),addClickEvent($("#createURLBtn"),createURLClick),addClickEvent($("#collectAttendanceBtn"),collectAttendanceBtnClick),addClickEvent($("#refreshAttendanceBtn"),(()=>{showCurrentAttendanceStatus(!0)})),addClickEvent($("#studentsAddBtn"),addStudentsBtnClick),addClickEvent($("#getAttendanceShowAttendanceTableBtn"),showAttendanceTable),addClickEvent($("#getAttendanceShowRoomBtn"),(()=>showRoom())),addClickEvent($("#learnNamesBtn"),showLearnNames),addClickEvent($("#hideQRBtn"),(()=>{hide("QRcodeContainer")})),addClickEvent($("#showQRPopupBtn"),showQRPopup),addClickEvent($("#gotoRoomBtn"),(()=>{navigateBack(),setTimeout(showRoom,100)})),addClickEvent($("#refreshAttendTableBtn"),(()=>{createAttendanceTable(!0)})),addClickEvent($("#saveGradingOptionsBtn"),saveGradingOptions),addClickEvent($("#attendanceTableSelectColsBtn"),attendanceTableSelectCols),addClickEvent($("#attendanceTableFitBtn"),attendanceTableFitToWidth),addClickEvent($("#attendanceTableColFirstBtn"),attendanceColFirst),addClickEvent($("#attendanceTableColLeftBtn"),attendanceColLeft),addClickEvent($("#attendanceTableColsAllBtn"),attendanceTableShowAllCols),addClickEvent($("#attendanceTableColRightBtn"),attendanceColRight),addClickEvent($("#attendanceTableColsLastBtn"),attendanceColLast),addClickEvent($("#attendanceTableOptionsBtn"),(()=>{showToggle("attendanceTableOptions")})),addClickEvent($("#attendanceTableOptionsHideBtn"),(()=>{hide("attendanceTableOptions")})),addClickEvent($("#downloadAttendanceBtn"),downloadAttendanceRecord),addClickEvent($("#attendanceTableAddColBtn"),addAttendanceColBtnClick),addClickEvent($("#attendanceTableAddStudentBtn"),addStudentBtnClick),addClickEvent($("#attendanceTableAddStudentsBtn"),addStudentsBtnClick),addClickEvent($("#attendanceTableClassLocBtn"),classLocPrompt),addClickEvent($("#showAttendanceTableBtn"),(()=>{navigateBack(),setTimeout(showAttendanceTable,100)})),addClickEvent($("#refreshRoomBtn"),(()=>{showRoom(!0)})),addClickEvent($("#attendanceRoomViewLeftBtn"),attendanceRoomViewLeft),addClickEvent($("#attendanceRoomViewRightBtn"),attendanceRoomViewRight),addClickEvent($("#attendanceRoomViewLastBtn"),attendanceRoomViewLast),addClickEvent($("#attendanceRoomViewZoomOutBtn"),attendanceRoomViewZoomOut),addClickEvent($("#attendanceRoomViewZoomInBtn"),attendanceRoomViewZoomIn),addClickEvent($("#attendanceRoomViewNamesBtn"),roomNamesToggle),addClickEvent($("#learnNamesImg"),learnNamesImgClick),addClickEvent($("#learnNamesNameBtn"),learnNamesNameBtnClick),addClickEvent($("#learnNamesNextBtn"),learnNamesNextBtnClick),addClickEvent($("#learnNamesPrevBtn"),learnNamesPrevBtnClick),addClickEvent($("#learnNamesRemoveBtn"),learnNamesRemoveBtnClick),addClickEvent($("#attendanceCollectionStatus"),(()=>showGetAttendance())),addClickEvent($("#saveNameBtn"),saveName),addClickEvent($("#closeHelpBtn"),(()=>{hide("infoScreen")})),addClickEvent($("#showHelpBtn"),(()=>{show("infoScreen")})),addClickEvent($("#fontPlusBtn"),(()=>{changeFontSize(1)})),addClickEvent($("#fontMinusBtn"),(()=>{changeFontSize(-1)})),addClickEvent($("#theme-switch"),toggleDarkMode),$("#getAttendanceClassCodeInput").addEventListener("input",(()=>validateInputForFieldName(getAttendanceClassCodeInput,"Attendance passcode"))),$("#attendanceTableGradeEquationInput").addEventListener("input",gradingChanged),$("#minLateInput").addEventListener("input",gradingChanged),$("#markAttendanceClassCodeInput").addEventListener("input",checkMissingAttendanceInfo),$("#markAttendanceSeatCodeInput").addEventListener("input",checkMissingAttendanceInfo),$("#manageUsersEmailInput").addEventListener("input",findUsers),$("#manageUsersLastNameInput").addEventListener("input",findUsers),$("#manageUsersNameInput").addEventListener("input",findUsers),$("#addUsersEmails").addEventListener("input",addUsersTextChanged),$("#addUsersNames").addEventListener("input",addUsersTextChanged),$("#addUsersLastNameFirst").addEventListener("input",addUsersTextChanged),$("#nameInput").addEventListener("input",nameChanged),$("#lastNameInput").addEventListener("input",nameChanged),$("#editSectionIdInput").addEventListener("input",(()=>validateInputForFieldName($("#editSectionIdInput"),"Section Id"))),$("#editRoomId").addEventListener("input",(()=>validateInputForFieldName($("#editRoomId"),"Room Id"))),$("#attendanceTableGradeEquationInput").addEventListener("change",testGradingEquation),$("#editSectionGradeInput").addEventListener("change",testGradingEquation),$("#roomsCampusSelect").addEventListener("change",roomsCampusSelected),$("#roomsBuildingSelect").addEventListener("change",roomsBuildingSelected),$("#manageUsersSelectRoleAny").addEventListener("change",findUsers),$("#manageUsersSelectRoleStudent").addEventListener("change",findUsers),$("#manageUsersSelectRoleInstructor").addEventListener("change",findUsers),$("#manageUsersSelectRoleAdmin").addEventListener("change",findUsers),$("#semesterSelect").addEventListener("change",(e=>{localStorage.semesterSelected=e.target.value,showEnrolledAndTeachingSections(e.target.value)})),$("#allSectionsSemesterSelect").addEventListener("change",(e=>{localStorage.semesterSelected=e.target.value,refreshAllSectionsList()})),$("#manageUsersEmailInput").addEventListener("focus",(()=>{})),$("#manageUsersLastNameInput").addEventListener("focus",(()=>{})),$("#manageUsersNameInput").addEventListener("focus",(()=>{}));const CAMERA_PERMISSIONS_INSTRUCTIONS="<b>How to enable your camera:</b>\n<li>To the left of your address bar (near top-left of your browser screen) you should see one of the following icons:\n  <icon>page_info</icon> or <small>A</small>A or <icon>info</icon> or <icon>lock</icon>.\nClick this icon.</li>\n<li>Switch the Camera setting to Allow or toggle it to the On position <icon>toggle_on</icon>.</li>\n<li>Click <icon>close</icon> or Done to close settings.</li>\n",LOCATION_PERMISSIONS_INSTRUCTIONS="<b>How to enable location:</b>\n<li>To the left of your address bar (near top-left of your browser screen) you should see one of the following icons:\n  <icon>page_info</icon> or <small>A</small>A or <icon>info</icon> or <icon>lock</icon>.\nClick this icon.</li>\n<li>Switch the Location setting to Allow or toggle it to the On position <icon>toggle_on</icon>.</li>\n<li>Click <icon>close</icon> or Done to close settings.</li>\n",EQUATION_INSTRUCTIONS="Grading equation example:\n    ( 100 * P + 50 * L ) / N\nsignifies that the grade is calculated as the average of all unexcused attendances (N), where student gets 100pts for being present (P) and 50pts for being late (L).\n\nGrading equation instructions:\n<li>Use the letters P, L, A, E to signify the numbers of times student was present, late, absent, and excused, respectively.</li>\n<li>Use the letter N to signify the total number of unexcused attendances; N = P + L + A.</li>\n<li>Use operators +, -, *, /, %, ^ to signify addition, subtraction, multiplication, division, modulo (i.e., remainder), and exponentiation, respectively.</li>\n<li>Use _ before an expression to truncate that expression (i.e., get the integer part of a decimal point number). Tip: for positive numbers _(X+0.5) will round X and _(X+0.9999) will give you ceiling of X.</li>\n<li>Use X?Y:Z to signify the expression: if X is true, then Y, otherwise Z.</li>\n<li>Use operators = != > &lt; >= &lt;= to signify equality, inequality, greater than, less than, greater than or equal to, and less than or equal to comparisons, respectively.</li>\n<li>Use operators & and | to signify logical AND and OR operations, respectively; use ! before an expression to signify logical negation.</li>\n";addHelp($('label[for="nameInput"]'),"Preferred Name","What would you like to be called?"),addClickEvent($$(".locationEnableHelp"),(()=>toast(LOCATION_PERMISSIONS_INSTRUCTIONS,"Enabling location permissions"))),addHelp($('label[for="attendanceTableGradeEquationInput"]'),"Attendance grade equation",EQUATION_INSTRUCTIONS),addHelp($('label[for="editSectionGradeInput"]'),"Attendance grade equation",EQUATION_INSTRUCTIONS),addHelp($("#editSectionSeatLabel"),"Seat information collection",'If this section has a room selected, the room will have a Seat Code assigned to each seat location.\nCollecting Seat Code information will enable viewing student names/photos within a mapped room layout.\n<li>Selecting "No" will not collect Seat Code information when attendance is marked.</li>\n<li>Selecting "Yes" will present a text input for a student to enter their Seat Code.</li>\n<li>Selecting "Request" will warn a student that Seat Code is requested by instructor, but will allow student to ignore the warning and mark attendance without supplying a Seat Code.</li>\n<li>Selecting "Require" will require a student to enter their Seat Code.</li>\n'),addHelp($("#editSectionPhotoLabel"),"Student photo collection",'Collecting student photos may be helpful for verifying attendance and for learning student names.\n<li>Selecting "No" will not collect student photos when attendance is marked.</li>\n<li>Selecting "Yes" will present an option for taking a selfie to each student.</li>\n<li>Selecting "Request" will warn a student that a selfie is requested by instructor, but will allow student to ignore the warning and mark attendance without supplying a selfie.</li>\n<li>Selecting "Require" will require a student to take a selfie for marking attendance.</li>\n'),addHelp($("#editSectionLocationLabel"),"Geo-Location collection",'Collecting geolocation may be very helpful for verifying attendance.\nHowever, many devices have location-sharing turned off, and some of the students may be uncomfortable turning on location-sharing due to privacy concerns or for some technical reasons.\n<li>Selecting "No" will not collect student geolocation when attendance is marked.</li>\n<li>Selecting "Yes" will collect student location when location-sharing is enabled.</li>\n<li>Selecting "Request" will warn a student that location-sharing is requested by instructor, but will allow student to ignore the warning and mark attendance even if location-sharing is off.</li>\n<li>Selecting "Require" will require a student to turn on location-sharing for marking attendance.</li>\n'),addHelp($('label[for="editSectionAllowSelfEnroll"]'),"Allow students to self-enroll","<li>When this option is checked, any student will be able to add this section to their My Sections screen.</li>\n<li>When this option is unchecked, this section will only appear in a student's My Sections screen if the instructor had enrolled the student in this section, or after a student used an attendance QR code to mark their attendance for this section.</li>\n"),addHelp($('label[for="addUsersEmails"]'),"Enter emails or usernames",`Enter each user's email or username on its own line.\n\nWARNING: Blank lines will be ignored.\n\nIf entering emails, each email must be in the format <i>username<span class="domainName"></span></i>.\nIf entering usernames, <i>${DOMAIN}</i> will be automatically added at the end of each username to get user's email addresses.`),addHelp($('label[for="addUsersNames"]'),"Enter user's names",'Enter each user\'s name on their own line.\n\nIf the "Last name first" checkbox is checked, enter names in one of the following formats:\n<li>Last Name</li>\n<li>Last Name, First Name</li>\n<li>Last Name &nbsp; First Name</li>\n\nIf the "Last name first" checkbox is unchecked, enter names in one of the following formats:\n<li>First Name</li>\n<li>First Name, Last Name</li>\n<li>First Name &nbsp; Last Name</li>\n'),hide("error")})()}catch(e){showError(e)}