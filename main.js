"use strict";const SEMESTER_SECTION_SEPARATOR="|",INSTRUCTOR=1,ADMIN=2,REQUIRED_LOC=1,REQUIRED_SEAT=2,REQUIRED_PHOTO=4,PHOTO_TIMEOUT=6e4,DEFAULT_USER_IMG="user-icon.png",EXCUSED="excused",fATTENDANCES="a",fATTENDANCE_CODE="c",fATTENDANCE_EXPIRATION="e",fDATETIME="dt",fDATE="d",fTIME="t",fNAME="n",fPHOTO="p",fSEAT="s",fLOCATION="l",fNOTES="nt",fROLE="rl",fROOM_ID="r",fROOM_NAME="rn",fROOM_MAP="rm",fBUILDING="bl",fCAMPUS="cm",fSECTION_CROSS_LISTED="x",fSECTION_PATTERN="pt",fSECTION_REQUIRED_FIELDS="rq",fINSTRUCTOR_EMAILS="i",fINSTRUCTOR_NAMES="in",RESERVED_ATTEND_FIELDS=["i","c","e"],$=document.querySelector.bind(document);function makeFirstElementChild(e,t){e.firstElementChild!==t&&e.insertBefore(t,e.firstElementChild)}function hide(e){("string"==typeof e?document.getElementById(e):e).classList.add("hidden")}function show(e){("string"==typeof e?document.getElementById(e):e).classList.remove("hidden")}function pad0(e,t=2){return e.toString().padStart(t,"0")}function capitalize(e){return e.split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase())).join(" ")}function usernameFromEmail(e){try{return e.split("@")[0].replaceAll(".","_")}catch(e){}}function getDateTime(e){let t=new Date(e||1e3*db.now());return[t.getFullYear()+"-"+pad0(t.getMonth()+1)+"-"+pad0(t.getDate()),pad0(t.getHours())+":"+pad0(t.getMinutes())]}async function getLocation(){try{return(await new Promise((function(e,t){navigator.geolocation.getCurrentPosition(e,t,{maximumAge:3e5,timeout:5e3,enableHighAccuracy:!0})}))).coords}catch(e){return{error:e.message}}}function download(e,t){var n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download",e),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function spinOnce(e){e.style.animation="",e.offsetWidth,e.style.animation="spin 0.5s"}function isMatch(e,t){if(!t)return!0;for(let n in t)if(e[n]!==t[n])return!1;return!0}var userDoc;async function checkSignIn(e){if(e||auth.currentUser){if(hide("signin"),show(mainDiv),show("user"),(userDoc=await db.findOne("users",e.email))?.error)return void toastError("Failed to search database.\n\n"+userDoc.error);if(null===userDoc){userDoc={};let t=await db.insertOne("users",userDoc,e.email);if(t.error)return void toastError("Could not add user to database.\n\n"+t.error.code)}let t;userDoc.n||forceInMain("profile","Please enter your name and save."),$("#userDisplayName").innerText=e.email,nameInput.value=nameInput.lastValue=userDoc.n||"",(1&userDoc.rl||2&userDoc.rl)&&(show("roomsBtn"),show("allSectionsBtn"));let n=$("#semesterSelect");if(1==n.children.length){let e=await getSemesters();for(let a of e)t=n.appendChild(document.createElement("option")),t.id=t.value=t.innerText=a,t.id==localStorage.semesterSelected&&(t.setAttribute("selected",!0),showEnrolledAndTeachingSections(a))}localStorage.minutesToCollectAttendance&&(minutesToCollectAttendance.innerText=localStorage.minutesToCollectAttendance),localStorage.takingAttendance&&parseInt(localStorage.attendanceEndtime)>db.now()&&(showGetAttendance(),takingAttendance())}else show("signin"),hide(mainDiv),hide("user")}function authErrorHandling(e,t){switch(e.code){case"auth/email-already-in-use":toastError(`Email address ${$("#signInEmailInput").value}@caldwell.edu already in use.`);break;case"auth/invalid-email":toastError(`Email address ${$("#signInEmailInput").value}@caldwell.edu is invalid.`);break;case"auth/operation-not-allowed":toastError("Error during sign up.");break;case"auth/user-not-found":toastError(`User ${$("#signInEmailInput").value}@caldwell.edu not found.`+(t?"":"\nDid you mean to click the Register button?"));break;case"auth/missing-password":toastError("No password provided.");break;case"auth/weak-password":toastError("Password is not strong enough. Add additional characters including special characters and numbers.");break;default:toastError(e.message);break}}function signInButtonClick(){signIn($("#signInEmailInput").value,$("#signInPasswordInput").value).catch(authErrorHandling)}function registerButtonClick(){signUp($("#signInEmailInput").value,$("#signInPasswordInput").value).then((e=>{})).catch(authErrorHandling)}function signOut(){auth.signOut()}function resetPassword(){$("#signInEmailInput").value?confirm(`Would you like to send an email with a password-reset link to ${$("#signInEmailInput").value}@caldwell.edu?`)&&passwordReset($("#signInEmailInput").value).then((()=>{toast("Password reset email sent.","",1)})).catch((e=>authErrorHandling(e,!0))):toast("You must enter your email address to reset your password.")}window.addEventListener("load",(async function(){await trySigningInWithLink(),window.history.pushState(null,"LectureSeats",location.origin+this.location.pathname),onAuth(checkSignIn,(e=>toastError("Authentication error.\n\n"+e)))}));const mainDiv=$("#main");var navDisallowMessage,navAllowed=!0;function allowNav(){navAllowed=!0,navDisallowMessage=null}function disallowNav(e){navAllowed=!1,navDisallowMessage=e}function showInMain(e){navAllowed?window.location.hash=e:navDisallowMessage&&toast(navDisallowMessage)}function forceInMain(e,t){makeFirstElementChild(mainDiv,$("#"+e)),disallowNav(t)}function navigateBack(){navAllowed&&history.back()}function loadingScreen(e){e?(show("loading"),disallowNav()):(hide("loading"),allowNav())}window.onhashchange=function(e){navAllowed?makeFirstElementChild(mainDiv,$(location.hash||"#sections")):"#_"!==location.hash&&(location.hash="#_")},window.addEventListener("keydown",(e=>{"Escape"===e.key&&navigateBack()})),window.addEventListener("popstate",(e=>{"#getAttendance"!==location.hash&&"#QRcode"!==location.hash&&"#room"!==location.hash&&localStorage.takingAttendance&&parseInt(localStorage.attendanceEndtime)>db.now()&&(showGetAttendance(),takingAttendance())}));var allSections={},allRooms=[],allSemesters=["2023Fall","2024Winter","2024Spring"],allAttendances={},allUsers=null;async function getSemesters(){return["2023Fall","2024Winter","2024Spring"]}async function getSections(e){if(e&&!allSections[e])if(allSections[e]=await db.findOne("sections",e),null===allSections[e])allSections[e]={};else if(allSections[e].error)return void toastError("Something went wrong.\n\nTry to reload.");return allSections[e]}async function getSection(e,t){let n=await getSections(e);if(n)return n[t]}async function getRooms(){return allRooms?.length||(allRooms=await db.find("rooms")),allRooms}async function getRoom(e){return(await getRooms()).filter((t=>t.id===e))[0]}async function getRoomMap(e){return(await getRoom(e)).rm.toLowerCase().split("\n").map((e=>e.split("\t")))}async function getAttendance(e,t,n,a){t.constructor!==Array&&(t=[t]);var o=[];for(var r of t){let t=e+"|"+r;if(n||!allAttendances[t])if(allAttendances[t]=await db.findOne("attend",t),null===allAttendances[t])allAttendances[t]={};else{if(allAttendances[t].error)return void toastError("Something went wrong.\n\nPlease try again.");for(let e of RESERVED_ATTEND_FIELDS)delete allAttendances[t][e];for(let e in allAttendances[t])allAttendances[t][e].userId=e,allAttendances[t][e].sectionId=r,allAttendances[t][e].n=capitalize(allAttendances[t][e].n)||e,allAttendances[t][e].attendArray=Object.entries(allAttendances[t][e].a).map((([e,t])=>Object.assign({code:e},t))).filter((e=>isMatch(e,a))).sort(((e,t)=>e.d+e.t>t.d+t.t?1:-1))}for(let e in allAttendances[t])o.push(allAttendances[t][e])}return o}async function getUsers(){return allUsers||(allUsers=await db.find("users")),allUsers}const markAttendanceSectionId=$("#markAttendanceSectionId"),markAttendanceClassCodeInput=$("#markAttendanceClassCodeInput"),markAttendanceLocation=$("#markAttendanceLocation");async function showMarkAttendance(e,t){showInMain("markAttendance"),markAttendanceSectionId.innerText=e,$("#markAttendanceRemoveButtonSectionId").innerText=e,markAttendanceSectionId._sectionDoc=t,markAttendanceClassCodeInput.value="",$("#markAttendanceSeatCodeInput").value="",show("defaultSelfieImg"),show("addPhotoBtn"),hide(selfieCanvas),hide(selfieVideo),hide("snapPhotoBtn"),hide("switchPhotoBtn"),showMarkedAttendances(localStorage.semesterSelected,e),checkMissingAttendanceInfo()}async function validateSeat(e,t){if(e=e?.toLowerCase()?.trim(),e)return(await getRoomMap(t)).flat().indexOf(e)>=0}async function checkMissingAttendanceInfo(){const e=$("#markAttendanceRequirementsList");if(e.innerHTML="",markAttendanceClassCodeInput.value||(e.appendChild(document.createElement("li")).innerText="Attendance passcode"),1&markAttendanceSectionId._sectionDoc.rq?$('label[for="markAttendanceLocation"]').classList.add("required"):$('label[for="markAttendanceLocation"]').classList.remove("required"),!markAttendanceLocation.value){let t=await getLocation();t.error?(hide(markAttendanceLocation),1&markAttendanceSectionId._sectionDoc.rq?(show("markAttendanceLocationOffButRequired"),e.appendChild(document.createElement("li")).innerText="Location"):show("markAttendanceLocationOff")):(markAttendanceLocation.value=t,show(markAttendanceLocation),hide("markAttendanceLocationOff"))}2&markAttendanceSectionId._sectionDoc.rq?$('label[for="markAttendanceSeatCodeInput"]').classList.add("required"):$('label[for="markAttendanceSeatCodeInput"]').classList.remove("required"),2&markAttendanceSectionId._sectionDoc.rq&&!await validateSeat($("#markAttendanceSeatCodeInput").value,markAttendanceSectionId._sectionDoc.r)&&(e.appendChild(document.createElement("li")).innerText="Valid seat code"),4&markAttendanceSectionId._sectionDoc.rq?$('label[for="selfieCanvas"]').classList.add("required"):$('label[for="selfieCanvas"]').classList.remove("required");let t=selfieBlob?.size&&photoTakenTime&&(new Date).getTime()-photoTakenTime<6e4;4&markAttendanceSectionId._sectionDoc.rq&&!t&&(show("defaultSelfieImg"),hide(selfieCanvas),hide(selfieVideo),selfieBlob=photoTakenTime=null,e.appendChild(document.createElement("li")).innerText="New photo"),e.innerHTML?($("#markAttendanceButton").setAttribute("disabled",!0),show("markAttendanceRequirements")):($("#markAttendanceButton").removeAttribute("disabled"),hide("markAttendanceRequirements"))}function showMarkedAttendances(e,t){let n=$("#attendanceMarked");if(userDoc[e][t]?.length){n.innerHTML="Attendance marked:";for(let a of userDoc[e][t]){n.appendChild(document.createElement("div")).innerText=a.dt}mainDiv.scrollTop=0}else n.innerHTML=""}async function checkInfoAndMarkAttendance(){if(markAttendanceLocation.value=null,await checkMissingAttendanceInfo(),markAttendanceRequirementsList.innerHTML)toast("Missing some of the required fields.","",-1);else{let e=markAttendanceClassCodeInput.value,t=markAttendanceSectionId.innerText,n=localStorage.semesterSelected;if(userDoc[n][t].map((e=>e.c)).includes(e))return void toast("You have previously marked attendance with this same attendance passcode.","Your attendance was NOT marked.",-1);loadingScreen(!0);markAttendanceSectionId._sectionDoc;let a=$("#markAttendanceSeatCodeInput").value,o=markAttendanceLocation.value;o&&(o=[o.latitude,o.longitude,o.accuracy]);let r=getDateTime(),i=await markAttendance(n,t,e,a,selfieBlob,o,r[0],r[1]);i?.error?(showMarkedAttendances(n,t),toast(i.error,"Your attendance was NOT marked.",-1)):(showMarkedAttendances(n,t),toast("Your attendance was marked.","Success!",1)),loadingScreen(!1)}}function photoStoragePath(e,t,n,a){return[e,t,n,a+".jpg"].join("/")}async function markAttendance(e,t,n,a,o,r,i,d){let s=usernameFromEmail(auth.currentUser.email),c=`${s}.a.${n}`,l=`${s}.p`,u={d:i,t:d},m={[`${s}.n`]:userDoc.n,[c]:u};if(o?.size){photoId=photoStoragePath(s,e,t,n);let a=await uploadFile(photoId,o);if(a?.error)return{error:"Unable to save photo.\nPlease try again.\n\n"+a.error};u.p=!0,m[l]=photoId}a&&(u.s=a),r&&(u.l=r);let p=await db.updateOne("attend",e+"|"+t,m);return p?.error?{error:"Please make sure the instructor is taking attendance, and that your attendance passcode is correct."}:(p=await db.updateOne("users",auth.currentUser.email,{[e+"."+t]:db.arrayUnion({c:n,dt:i+" "+d})}),p?.error?{error:"Your attendance was marked (the instructor knows you attended), but failed to save in your personal attendance history."}:void userDoc[e][t].push({c:n,dt:i+" "+d}))}$("#markAttendanceRemoveButton").addEventListener("click",(async e=>{if(confirm("Are you sure you would like to remove this section from the list of sections you are enrolled in?")){let e=markAttendanceSectionId.innerText;(await db.updateOne("users",auth.currentUser.email,{[localStorage.semesterSelected+"."+e]:db.deleteField()})).error?toastError("Something went wrong. Please try again."):(delete userDoc[localStorage.semesterSelected][e],showEnrolledAndTeachingSections(localStorage.semesterSelected),navigateBack())}})),$("#markAttendanceButton").addEventListener("click",checkInfoAndMarkAttendance);const codeReader=new ZXing.BrowserMultiFormatReader;var currentQRstream,scanTarget;async function openQRreader(e){showInMain("QRreader"),currentQRstream=await getVideoStream(!1),scanTarget=e,startQRreader(),window.addEventListener("popstate",closeQRreader,{once:!0})}function closeQRreader(){codeReader.reset()}function onScanResult(e,t){e&&(document.getElementById(scanTarget).value=e.text,checkMissingAttendanceInfo(),navigateBack())}async function startQRreader(){codeReader.decodeFromStream(currentQRstream,"QRreaderVideo",onScanResult)}async function switchQRCamera(){currentQRstream=await switchCameraStream(currentQRstream),codeReader.reset(),startQRreader()}var selfieBlob=null,photoId=null,photoTakenTime=null;const selfieCanvas=$("#selfieCanvas"),selfieVideo=$("#selfieVideo");async function enableSelfieCamera(){try{await startCamera(selfieVideo,200),window.addEventListener("popstate",stopCamera,{once:!0}),hide("defaultSelfieImg"),hide(selfieCanvas),hide("addPhotoBtn"),show(selfieVideo),show("snapPhotoBtn"),show("switchPhotoBtn")}catch(e){selfiePhotoBtn.innerHTML='<span class="material-symbols-outlined">photo_camera</span> Retry taking selfie...',toastError("Unable to start camera.\nPlease make sure your camera permissions are enabled, reload, and try again.")}}async function snapPhoto(){hide(selfieVideo),hide("snapPhotoBtn"),hide("switchPhotoBtn"),show(selfieCanvas),show("addPhotoBtn"),takePhoto(selfieVideo,selfieCanvas,200),selfieBlob=await canvasToBlob(selfieCanvas),photoTakenTime=(new Date).getTime(),checkMissingAttendanceInfo()}const getAttendanceSectionId=$("#getAttendanceSectionId"),getAttendanceClassCodeInput=$("#getAttendanceClassCodeInput"),collectAttendanceBtn=$("#collectAttendanceBtn"),minutesToCollectAttendance=$("#minutesToCollectAttendance");async function showGetAttendance(e){showInMain("getAttendance"),e||(e=localStorage.takingAttendance);let t=await getSection(localStorage.semesterSelected,e);getAttendanceSectionId.innerText=e,$("#getAttendanceCrossListIds").innerHTML=t.x?"<span>"+t.x.join("</span> <span>")+"</span>":"",$("#getAttendanceSectionInfo").innerText=t.pt+"\n"+t.r+"\n"+(t.in||t.i.join("\n")),$("#getAttendanceEditBtn").onclick=t=>{editSection(e)},$("#addStudentForm").classList.add("hidden"),$("#addStudentExpand").classList.remove("hidden"),$("#addStudentUnexpand").classList.add("hidden"),$("#addStudentSectionSelect").innerHTML="";for(let n of[e].concat(t.x)){let e=$("#addStudentSectionSelect").appendChild(document.createElement("option"));e.value=e.innerText=n}localStorage.attendanceCode?getAttendanceClassCodeInput.value=localStorage.attendanceCode:randomAttendanceClassCodeClick(),attendanceHistory(!0)}function randomAttendanceClassCodeClick(){getAttendanceClassCodeInput.value=Math.random().toString().substring(2)}minutesToCollectAttendance.addEventListener("keydown",(e=>{if(e.target.getAttribute("contenteditable"))if("ArrowDown"===e.key){let t=(parseInt(e.target.innerText)||0)-1;t>=1&&(e.target.innerText=t+".0")}else"ArrowUp"===e.key&&(e.target.innerText=(parseInt(e.target.innerText)||0)+1+".0")}));const codeWriter=new ZXing.BrowserQRCodeSvgWriter;function createQRClick(){const e=$("#QRcode");$("#collectingAttendanceDiv");let t=getAttendanceClassCodeInput.value;t!==e.getAttribute("title")&&(e.innerHTML="",codeWriter.writeToDom("#QRcode",t,500,500),e.appendChild(document.createElement("div")).id="QRcodeTime"),showInMain("QRcode")}var attendanceTimer;async function collectAttendanceBtnClick(){if("Start"===collectAttendanceBtn.innerText){if(!parseFloat(minutesToCollectAttendance.innerText)||parseFloat(minutesToCollectAttendance.innerText)<1)return void toast("Please enter a numeric value greater than or equal to 1 for the minutes attendance is to be collected.");if(!getAttendanceClassCodeInput.value)return void toast("Please enter a passcode for taking attendance.");loadingScreen(!0);let e=getAttendanceSectionId.innerText,t=await getSection(localStorage.semesterSelected,e),n=db.now()+60*parseFloat(minutesToCollectAttendance.innerText),a={i:t.i,c:getAttendanceClassCodeInput.value,e:n},o=await db.upsertOne("attend",localStorage.semesterSelected+"|"+e,a);if(o.error)return toastError("Cannot start taking attendance.\nWe are having issues writing to the database.\n"+o.error),void loadingScreen(!1);if(t.x?.length)for(let e of t.x)if(o=await db.upsertOne("attend",localStorage.semesterSelected+"|"+e,a),o.error)return toastError("Cannot start taking attendance.\nWe are having issues writing to the database.\n"+o.error),void loadingScreen(!1);localStorage.minutesToCollectAttendance=minutesToCollectAttendance.innerText,localStorage.attendanceCode=getAttendanceClassCodeInput.value,localStorage.takingAttendance=e,localStorage.attendanceEndtime=n,takingAttendance()}else stopTakingAttendance();loadingScreen(!1)}function takingAttendance(){collectAttendanceBtn.innerText="Stop",getAttendanceClassCodeInput.setAttribute("disabled",!0),$("#getAttendance .back").setAttribute("disabled",!0),$("#collectingAttendance").innerText="Collecting",show("createQRCodeBtn"),hide("randomAttendanceClassCodeBtn"),minutesToCollectAttendance.removeAttribute("contenteditable"),clearInterval(attendanceTimer),attendanceTimer=setInterval(updateAttendanceTime,1e3)}function updateAttendanceTime(){let e=parseInt(localStorage.attendanceEndtime)-db.now();if(e<=0)stopTakingAttendance();else{let t=Math.floor(e/60),n=e-60*t;minutesToCollectAttendance.innerText=t+":"+pad0(n);let a=$("#QRcodeTime");a&&(a.innerText=minutesToCollectAttendance.innerText)}}async function stopTakingAttendance(){showInMain("getAttendance");let e=getAttendanceSectionId.innerText,t=await getSection(localStorage.semesterSelected,e);if(db.updateOne("attend",localStorage.semesterSelected+"|"+e,{c:db.deleteField(),e:db.deleteField()}),t.x?.length)for(let e of t.x)db.updateOne("attend",localStorage.semesterSelected+"|"+e,{c:db.deleteField(),e:db.deleteField()});clearInterval(attendanceTimer),collectAttendanceBtn.innerText="Start",getAttendanceClassCodeInput.removeAttribute("disabled"),$("#getAttendance .back").removeAttribute("disabled"),$("#collectingAttendance").innerText="Collect",hide("createQRCodeBtn"),show("randomAttendanceClassCodeBtn"),minutesToCollectAttendance.setAttribute("contenteditable","true"),minutesToCollectAttendance.innerText=localStorage.minutesToCollectAttendance||"75.0",delete localStorage.takingAttendance,delete localStorage.attendanceCode,delete localStorage.attendanceEndtime}function addStudentExpandClick(){$("#addStudentForm").classList.toggle("hidden"),$("#addStudentExpand").classList.toggle("hidden"),$("#addStudentUnexpand").classList.toggle("hidden"),$("#addStudentForm").classList.contains("hidden")||addStudentAvailableStudents()}async function addStudentAvailableStudents(){let e=new Set((await getAttendance(localStorage.semesterSelected,$("#addStudentSectionSelect").value)).map((e=>e.userId))),t=(await getUsers()).filter((t=>!e.has(usernameFromEmail(t.id))));$("#addStudentUserSelect").innerHTML="";for(let e of t){let t=$("#addStudentUserSelect").appendChild(document.createElement("option"));t.innerText=t.value=usernameFromEmail(e.id),e.n&&(t.innerText+=" ("+e.n+")")}}async function addStudent(){const e=localStorage.semesterSelected,t=$("#addStudentUserSelect").value,n=$("#addStudentSectionSelect").value;let a=[...$("#addStudentSectionSelect").children].filter((e=>!e.selected)).map((e=>e.value)),o=(await getAttendance(e,a)).filter((e=>e.userId===t));if(o.length){o=o[0];const a=o.sectionId;if(confirm(`Are you sure you would like to move ${t} from section ${a} to section ${n}?`)){let r=(await getUsers()).filter((e=>usernameFromEmail(e.id)===t))[0],i=await db.updateOne("users",r.id,{[e+"."+n]:r[e][a],[e+"."+a]:db.deleteField()});if(i.error)return void toastError("Student personal record could not be updated.\n"+i.error);r[e][n]=r[e][a],delete r[e][a];let d={n:r.n,a:o.a};if(o.p&&(d.p=o.p),i=await db.updateOne("attend",e+"|"+n,{[t]:d}),i.error)return void toastError("Attendance record for student could not be created.\n"+i.error);if(allAttendances[e+"|"+n][t]=o,o.sectionId=n,i=await db.updateOne("attend",e+"|"+a,{[t]:db.deleteField()}),i.error)return void toastError("New attendance record for student was created, but the old attendance record for student could not be deleted.\n"+i.error);delete allAttendances[e+"|"+a][t],toast(`Student ${t} was successfully moved from section ${a} to section ${n}.`,"",1)}}else if(confirm(`Are you sure you would like to add ${t} to section ${n}?`)){let o=(await getUsers()).filter((e=>usernameFromEmail(e.id)===t))[0],r={[e+"."+n]:[]};for(let t of a)t in o[e]&&(r[e+"."+t]=db.deleteField(),delete o[e][t]);let i=await db.updateOne("users",o.id,r);if(i.error)return void toastError("Student personal record could not be updated.\n"+i.error);if(o[e][n]=[],i=await db.updateOne("attend",e+"|"+n,{[t]:{n:o.n,a:{}}}),i.error)return void toastError("Attendance record for student could not be created.\n"+i.error);allAttendances[e+"|"+n][t]={n:o.n,a:{},attendArray:[],userId:t,sectionId:n},toast(`Student ${t} was successfully added to section ${n}.`,"",1)}addStudentExpandClick(),attendanceHistory(!0)}const attendancesDiv=$("#attendances");async function attendanceToday(e=!0){let t=attendanceTable?.attendanceTimes?.length?attendanceTable.attendanceTimes.map((e=>e.split(" ")[0])).pop():getDateTime()[0];await attendanceFiltered(!1,{d:t},e)}async function attendanceHistory(e=!0){await attendanceFiltered(!1,null,e)}var attendanceTable,currentAttendanceRecords;const ATTEND_CODE_SEPARATOR=" : ",ATTEND_TABLE_DATA_COL_OFFSET=7,summaryCol=e=>e>2&&e<7;async function attendanceFiltered(e=!1,t=attendanceTable?.filter,n=!0){let a=getAttendanceSectionId.innerText,o=await getSection(localStorage.semesterSelected,a),r=[a].concat(o.x||[]),i={};var d=parseInt($("#minLateInput").value);(!d||d<1)&&($("#minLateInput").value=d=20);var s=parseInt($("#pointsLateInput").value);let c,l;s||($("#pointsLateInput").value=s=20),(currentAttendanceRecords=await getAttendance(localStorage.semesterSelected,r,e,t)).map((e=>e.attendArray)).flat().forEach((e=>{let t=e.code,n=i[t],a=e.d+" "+e.t;(!n||n>a)&&(i[t]=a)})),i=Object.entries(i).sort(((e,t)=>e[1]>t[1]?1:-1));for(let e of currentAttendanceRecords){e.attendDocs=[],e.attendTimeOffsets=[],e.presentOnTime=0,e.absent=0,e.late=0;for(let[t,n]of i)c=e.a[t],e.attendDocs.push(c),c?c.t===EXCUSED?e.attendTimeOffsets.push(EXCUSED):(l=(new Date(c.d+" "+c.t)-new Date(n))/6e4,l>=d?e.late++:e.presentOnTime++,e.attendTimeOffsets.push(l)):(e.absent++,e.attendTimeOffsets.push(""));e.attendanceGrade=(100*e.presentOnTime+e.late*s)/(e.presentOnTime+e.late+e.absent)}(attendanceTable=[]).filter=t,attendanceTable.semester=localStorage.semesterSelected,attendanceTable.id=r.join("|"),t&&t.d&&(attendanceTable.id+="--"+t.d),attendanceTable.attendanceCodes=i.map((e=>e[0])),attendanceTable.attendanceTimes=i.map((e=>e[1])),attendanceTable.header=["Section","User","Name","Attendance-Grade","On-time","Late","Absent"].concat(attendanceTable.attendanceTimes);for(let e of currentAttendanceRecords){let t=[e.sectionId,e.userId,capitalize(e.n)||user,e.attendanceGrade,e.presentOnTime,e.late,e.absent].concat(e.attendTimeOffsets);t._fullRecord=e,t._section=e.sectionId,t._username=e.userId,t._name=e.n,t._photo=e.p,attendanceTable.push(t)}n&&(displayAttendanceTable(),show("attendancesContainer"),window.addEventListener("popstate",hideAttendanceRecord,{once:!0}))}function hideAttendanceRecord(){hide("attendancesContainer")}function displayAttendanceTable(){attendancesDiv.innerHTML="";var e=parseInt($("#minLateInput").value);e||($("#minLateInput").value=e=20);for(let a of[attendanceTable.header].concat(attendanceTable)){var t=attendancesDiv.appendChild(document.createElement("row"));for(let o=0;o<attendanceTable.header.length;o++)if(!attendanceTable.filter||!summaryCol(o)){var n=t.appendChild(document.createElement("div"));a===attendanceTable.header?(n.innerText=a[o],n.title=attendanceTable.attendanceCodes[o-7],n.addEventListener("click",(()=>sortAttendanceTable(o))),n.classList.add("table-header")):o>=7?(n.innerText=a[o]===EXCUSED?"➖":""===a[o]?"❌":a[o]<e?"✔️":"+"+a[o]+"min",a!==attendanceTable.header&&(n.style.overflowX="scroll"),n.onclick=async function(){let e=a._fullRecord,t=e.attendDocs[o-7],n=attendanceTable.attendanceCodes[o-7],r=attendanceTable.header[o].split(" "),i=r.join(" at "),d=`Record for ${e.n} (${e.userId}) for attendance taken on ${i}:\n\n`,s=["OK"];const c=localStorage.semesterSelected+"|"+e.sectionId;let l=e.userId+".a."+n+".";t?(t.t===EXCUSED?(d+="Attendance excused.",s.push("Mark absent","Mark present")):(d+=`Attendance marked ${a[o]?"after "+a[o]+"min":"right away"}.\n\nSeat: ${t.s}`,s.push("Edit attendance record","Delete attendance")),t.nt&&(d+="\n\nNotes:\n"+t.nt)):(d+="Absent.",s.push("Mark excused","Mark present"));let u=await openPrompt(d+"\n\n",{},s);if("Mark absent"===u.clicked||"Delete attendance"===u.clicked){(await openPrompt(`You are about to delete attendance data for ${e.n} (${e.userId}) for attendance taken on ${i}\n\nAre you sure you wish to delete this data?`,{},["Delete","Cancel"])).clicked}else if("Edit attendance record"===u.clicked){let n=await openPrompt(`Record for ${e.n} (${e.userId}) for attendance taken on ${i}:\n\n`,{"Minutes late":a[o],Seat:t.s,Notes:t.nt||""},["Save","Cancel"]);if("Save"===n.clicked){let e={},r=parseInt(n["Minutes late"])||0;if(r!==a[o]&&(e[l+"t"]=getDateTime(new Date(attendanceTable.header[o]).getTime()+6e4*r)[1]),n.Seat!==t.s&&(e[l+"s"]=n.Seat),n.Notes!==t.nt&&(e[l+"nt"]=n.Notes),Object.keys(e).length){let a=await db.updateOne("attend",c,e);a.error?toastError("Unable to update attendance record.\n"+a.error):(e[l+"t"]&&(t.t=e[l+"t"]),t.nt=n.Notes,t.s=n.Seat,toast("Record updated.","",1),attendanceHistory())}}}else if("Mark present"===u.clicked){let t=await openPrompt(`Record for ${e.n} (${e.userId}) for attendance taken on ${i}:\n\n`,{"Minutes late":0,Seat:"",Notes:`marked present by ${userDoc.n} on ${getDateTime()[0]}`},["Save","Cancel"]);if("Save"===t.clicked){let a=parseInt(t["Minutes late"])||0,i=getDateTime(new Date(attendanceTable.header[o]).getTime()+6e4*a)[1],d={[l+"d"]:r[0],[l+"t"]:i};t.Seat&&(d[l+"s"]=t.Seat),t.Notes&&(d[l+"nt"]=t.Notes);let s=await db.updateOne("attend",c,d);if(s.error)toastError("Unable to update attendance record.\n"+s.error);else{let t=await db.updateOne("users",e.userId+"@caldwell.edu",{[localStorage.semesterSelected+"."+e.sectionId]:db.arrayUnion({c:n,dt:r[0]+" "+i})});t.error?toastError("Updated attendance record for instructor, but unable to update student's personal attendance record.\n"+t.error):toast("Record updated.","",1),attendanceFiltered(!0)}}}else if("Mark excused"===u.clicked){let t=await db.updateOne("attend",c,{[l+"d"]:r[0],[l+"t"]:EXCUSED});if(t.error)toastError("Unable to update attendance record.\n"+t.error);else{let t=await db.updateOne("users",e.userId+"@caldwell.edu",{[localStorage.semesterSelected+"."+e.sectionId]:db.arrayUnion({c:n,dt:r[0]+" "+EXCUSED})});t.error?toastError("Updated attendance record for instructor, but unable to update student's personal attendance record.\n"+t.error):toast("Record updated.","",1),attendanceFiltered(!0)}}}):n.innerText=a[o]}}attendancesDiv.style.setProperty("--colNum",t.children.length)}var sortedFields=[];function sortAttendanceTable(e){sortedFields[e]=-1==sortedFields[e]?1:-1;let t=attendanceTable.map(((e,t)=>({item:e,index:t}))).sort(((t,n)=>{let a=t.item[e]===EXCUSED?9e8:""===t.item[e]?9e9:t.item[e],o=n.item[e]===EXCUSED?9e8:""===n.item[e]?9e9:n.item[e];return a<o?sortedFields[e]:o<a?-1*sortedFields[e]:t.index-n.index})).map((e=>e.item));t.id=attendanceTable.id,t.filter=attendanceTable.filter,t.semester=attendanceTable.semester,t.header=attendanceTable.header,t.attendanceCodes=attendanceTable.attendanceCodes,attendanceTable=t,displayAttendanceTable()}function attendanceCSV(){let e="";for(let t of[attendanceTable.header].concat(attendanceTable)){for(let n=0;n<attendanceTable.header.length;n++)e+=t[n]+",";e+="\n"}return e}function downloadAttendanceRecord(){download("attendance-"+attendanceTable.id+".csv",attendanceCSV())}const roomMap=$("#roomMap");async function showRoom(){await attendanceToday(!1);var e={};for(let t of attendanceTable){let n=t._fullRecord.attendDocs,a=n[n.length-1];a&&(e[a.s?.toLowerCase()?.trim()]=t)}roomMap.innerHTML="";let t=await getSection(localStorage.semesterSelected,getAttendanceSectionId.innerText),n=await getRoomMap(t.r);roomMap._rows=n.length,roomMap._cols=0;for(let t=0;t<n.length;t++){let a=n[t];roomMap._cols=Math.max(roomMap._cols,a.length);let o=roomMap.appendChild(document.createElement("div"));for(let r=0;r<a.length;r++){let a=n[t][r],i=o.appendChild(document.createElement("div"));if(a){i.classList.add("seat");let t=e[a];t?(i.classList.add("taken"),getLinkFromStoragePath(t._photo).then((e=>i.style.backgroundImage=`url("${e||"user-icon.png"}")`)),i.innerHTML=`<span>${t._name.split(" ")[0]}</span>`,i.onmouseover=()=>{i.innerHTML=`<span>${t._name.split(" ")[0]}\n${t._username}\n${t._section}</span>`},i.onmouseout=()=>{i.innerHTML=`<span>${t._name.split(" ")[0]}</span>`,i.classList.remove("enlarge")},i.onclick=()=>{i.classList.toggle("enlarge")}):i.innerText=a}}}let a=parseFloat(localStorage.roomMapZoom)||1;roomMap.style.setProperty("--seat-width",25*a),roomMap.style.setProperty("--seat-height",25*a),$("#roomMapZoom").value=a,showInMain("room")}function changeRoomMapSize(e){let t=parseFloat(e.value);e.title=(100*t).toFixed(0)+"%",roomMap.style.setProperty("--seat-width",25*t),roomMap.style.setProperty("--seat-height",25*t),localStorage.roomMapZoom=t}const CREATE_SECTION_BUTTON_TEXT="Create New Section";async function deleteSection(e,t){if(confirm("Are you sure you want to delete section "+t+" for "+e+"?\n\nWARNING: All attendance data for this section and any cross-listed sections will be deleted.")){(await db.updateOne("sections",e,null)).error?toastError("Cannot delete section."):(delete(await getSections(e))[t],showEnrolledAndTeachingSections(e),navigateBack())}}async function createNewSection(){let e;$("#sectionSubmitBtn").innerText="Create New Section",showInMain("addInstructorSection");let t=$("#sectionSemesterSelect");if(t.removeAttribute("disabled"),1==t.children.length){let n=await getSemesters();for(let a of n)e=t.appendChild(document.createElement("option")),e.id=e.value=e.innerText=a}for(let e of t.children)e.innerText==localStorage.semesterSelected?e.setAttribute("selected",!0):e.removeAttribute("selected");let n=$("#sectionRoomSelect");if(1==n.children.length){let t=await getRooms();for(let a of t)e=n.appendChild(document.createElement("option")),e.id=e.value=a.id,e.innerText=a.bl+" - "+a.rn}$("#sectionInstructorEmailsInput").value||($("#sectionInstructorEmailsInput").value=auth.currentUser.email),$("#sectionInstructorNamesInput").value||($("#sectionInstructorNamesInput").value=userDoc.n),$("#sectionIdInput").removeAttribute("disabled")}async function editSection(e){$("#sectionSubmitBtn").innerText="Save Section",showInMain("addInstructorSection");let t,n=await getSection(localStorage.semesterSelected,e),a=$("#sectionSemesterSelect");if(a.setAttribute("disabled",!0),1==a.children.length){let e=await getSemesters();for(let n of e)t=a.appendChild(document.createElement("option")),t.id=t.value=t.innerText=n}for(let e of a.children)e.innerText==localStorage.semesterSelected?(e.setAttribute("selected",!0),a.value=e.value):e.removeAttribute("selected");let o=$("#sectionRoomSelect");if(1==o.children.length){let e=await getRooms();for(let n of e)t=o.appendChild(document.createElement("option")),t.id=t.value=n.id,t.innerText=n.bl+" - "+n.rn}for(let e of o.children)e.value==n.r?(e.setAttribute("selected",!0),o.value=e.value):e.removeAttribute("selected");$("#sectionIdInput").setAttribute("disabled",!0),$("#sectionIdInput").value=e,$("#sectionPatternInput").value=n.pt,$("#sectionCrosslistInput").value=n.x?.join("\n")||"",$("#sectionInstructorEmailsInput").value=n.i?.join("\n")||"",$("#sectionInstructorNamesInput").value=n.in||"",$("#sectionLocRequiredCheckbox").checked=1&n.rq,$("#sectionSeatRequiredCheckbox").checked=2&n.rq,$("#sectionPhotoRequiredCheckbox").checked=4&n.rq}function makeSectionCard(e,t,n,a){var o=document.createElement("div");o._sectionDoc=t,o.id=e,o.className="sectionCard";var r=o.appendChild(document.createElement("div"));return r.class="cardTitle",r.innerText=e,a&&t.x&&(r.innerText+="\n"+t.x.join("\n")),(r=o.appendChild(document.createElement("div"))).innerText=t.pt,(r=o.appendChild(document.createElement("div"))).innerText=t.r,(r=o.appendChild(document.createElement("div"))).innerText=t.in||t.i,o.addEventListener("click",n),o}async function getAttendanceCardClick(e){showGetAttendance(e.currentTarget.id)}function markAttendanceCardClick(e){showMarkAttendance(e.currentTarget.id,e.currentTarget._sectionDoc)}async function addSectionToStudentClick(e){let t=e.currentTarget.id,n=e.currentTarget._sectionDoc;(await db.updateOne("users",auth.currentUser.email,{[localStorage.semesterSelected+"."+t]:[]})).error?toastError("Failed to add section.\n\nPlease try again."):(userDoc[localStorage.semesterSelected]||(userDoc[localStorage.semesterSelected]=[]),userDoc[localStorage.semesterSelected][t]=[],addSectionCard(t,n,$("#studentSections"),markAttendanceCardClick),navigateBack())}function addSectionCard(e,t,n,a,o){var r=makeSectionCard(e,t,a,o);n.insertBefore(r,n.lastElementChild)}async function showAvailableStudentSections(){showInMain("selectStudentSection");var e=await getSections(localStorage.semesterSelected),t=$("#availableStudentSections");t.innerHTML="<span></span>";let n=Object.keys(e).sort(),a=new Set(userDoc[localStorage.semesterSelected]?Object.keys(userDoc[localStorage.semesterSelected]):[]);for(let o of n){let n=e[o];if(!a.has(o)&&!n.x?.filter((e=>a.has(e))).length&&(addSectionCard(o,n,t,addSectionToStudentClick),n.x?.length))for(let e of n.x)addSectionCard(e,n,t,addSectionToStudentClick)}t.innerText||(t.appendChild(document.createElement("div")).innerText="No sections available.")}async function showEnrolledAndTeachingSections(e){var t=$("#studentSections"),n=$("#instructorSections");if(!e)return hide(t),void hide(n);show(t),1&userDoc.rl&&show(n);var a=await getSections(e);for(let e=t.childElementCount-1;e--;)t.children[e].remove();for(let e=n.childElementCount-1;e--;)n.children[e].remove();for(let o of Object.keys(a).sort()){let r=a[o];if(userDoc[e]&&Object.keys(userDoc[e])?.includes(o)&&addSectionCard(o,r,t,markAttendanceCardClick),r.x?.length)for(let n of r.x)userDoc[e]&&Object.keys(userDoc[e])?.includes(n)&&addSectionCard(n,r,t,markAttendanceCardClick);!n.classList.contains("hidden")&&r.i?.includes(auth.currentUser.email)&&addSectionCard(o,r,n,getAttendanceCardClick,!0)}}$("#sectionSubmitBtn").addEventListener("click",(async e=>{let t="Create New Section"===$("#sectionSubmitBtn").innerText,n=$("#sectionSemesterSelect").value,a=$("#sectionIdInput").value,o={r:$("#sectionRoomSelect").value,i:$("#sectionInstructorEmailsInput").value?.split("\n")?.map((e=>e.trim()))?.filter((e=>e)),in:$("#sectionInstructorNamesInput").value.trim(),pt:$("#sectionPatternInput").value,x:$("#sectionCrosslistInput").value?.split("\n")?.map((e=>e.trim()))?.filter((e=>e)),rq:1*$("#sectionLocRequiredCheckbox").checked|2*$("#sectionSeatRequiredCheckbox").checked|4*$("#sectionPhotoRequiredCheckbox").checked};if(!n)return void toast("Please select semester.","Missing information:",-1);if(!a)return void toast("Please enter section id.","Missing information:",-1);if(t&&a.includes("|"))return void toast('Specified section id includes an invalid character "|".',"Invalid section id:",-1);if(t&&await getSection(n,a))return void toast("Section "+a+" already exists.","Duplicate section id:",-1);if(!o.pt)return void toast("Please enter section day/time pattern.","Missing information:",-1);if(!o.r)return void toast("Please select a room.","Missing information:",-1);if(!o.i)return void toast("Please enter section instructor email(s).","Missing information:",-1);if(!o.in)return void toast("Please enter section instructor name(s).","Missing information:",-1);let r=await getSections(n);for(let e in r)if(e!==a){let t=r[e];if(t.pt===o.pt&&t.r===o.r)return void toast(t.r+" is booked at this time by section "+e+".\n\nIf these sections are cross-listed, please edit information for "+e+" to indicate this, rather than creating a new section.","",-1)}(await db.updateOne("sections",n,{[a]:o})).error?toastError("Failed to add section.\n\nPlease try again."):(r[a]=o,n===localStorage.semesterSelected&&(t&&addSectionCard(a,o,$("#instructorSections")),showEnrolledAndTeachingSections(localStorage.semesterSelected)),a===getAttendanceSectionId.innerText&&($("#getAttendanceCrossListIds").innerHTML=o.x?"<span>"+o.x.join("</span> <span>")+"</span>":"",$("#getAttendanceSectionInfo").innerText=o.pt+"\n"+o.r+"\n"+(o.in||o.i.join("\n"))),navigateBack())})),$("#semesterSelect").addEventListener("change",(e=>{localStorage.semesterSelected=e.target.value,showEnrolledAndTeachingSections(e.target.value)}));const nameInput=$("#nameInput"),saveNameBtn=$("#saveNameBtn");function openPrompt(e,t={},n){return new Promise((function(a,o){disallowNav(),$("#promptFormTitle").innerHTML=e;let r={};for(let e in t)$("#promptForm").appendChild(document.createElement("span")).innerText=e,r[e]=$("#promptForm").appendChild(document.createElement("input")),r[e].id=e,"number"==typeof t[e]&&r[e].setAttribute("type","number"),r[e].value=t[e];for(let e of n||["OK","Cancel"]){let t=$("#promptButtons").appendChild(document.createElement("button"));t.innerText=e,t.onclick=()=>{let t=Object.fromEntries(Object.entries(r).map((([e,t])=>[e,t.value])));t.clicked=e,a(t),hidePrompt()}}$("#prompt").classList.remove("hidden")}))}function hidePrompt(){$("#promptForm").innerHTML="",$("#promptButtons").innerHTML="",$("#prompt").classList.add("hidden"),allowNav()}nameInput.addEventListener("input",(e=>{let t=nameInput.value.trim();t&&nameInput.lastValue!==t?show(saveNameBtn):hide(saveNameBtn)})),saveNameBtn.addEventListener("click",(async e=>{saveNameBtn.setAttribute("disabled","true");let t=await db.updateOne("users",auth.currentUser.email,{n:nameInput.value.trim()});t.error?toastError("Unable to update name.\n"+t.error):(hide(saveNameBtn),userDoc.n=nameInput.lastValue=nameInput.value,toast("Name updated.","",1)),saveNameBtn.removeAttribute("disabled"),allowNav()}));const toastDiv=$("#toast"),toastMsg=$("#toastMessage");function toast(e,t,n){if(n&&toastDiv.style.setProperty("--toast-accent",n>0?"#4f6":"#f64"),toastMsg.innerHTML=t?t+"\n\n":"","object"==typeof e)for(let t in e)e[t]&&(toastMsg.innerHTML+=t+" : "+e[t]+"\n");else toastMsg.innerHTML+=e;setTimeout((()=>{window.addEventListener("mousedown",closeToast),window.addEventListener("keydown",closeToast),window.addEventListener("popstate",closeToast),mainDiv.addEventListener("scroll",closeToast),show(toastDiv),toastDiv.classList.add("slide-up")}),200)}function toastError(e){toast(e,"Error",-1)}function closeToast(){window.removeEventListener("mousedown",closeToast),window.removeEventListener("keydown",closeToast),window.removeEventListener("popstate",closeToast),mainDiv.removeEventListener("scroll",closeToast),hide(toastDiv),toastDiv.classList.remove("slide-up")}const themeToggle=$("#theme-switch");function toggleDarkMode(){setTheme(themeToggle.innerText.startsWith("dark"))}function setTheme(e){e?(localStorage.theme="dark",document.documentElement.setAttribute("theme","dark"),themeToggle.innerText="light_mode"):(delete localStorage.theme,document.documentElement.removeAttribute("theme"),themeToggle.innerText="dark_mode")}function changeFontSize(e){let t=parseInt(getComputedStyle(document.documentElement).getPropertyValue("--main-font-size"))+e+"pt";localStorage.fontSize=t,document.documentElement.style.setProperty("--main-font-size",t)}setTheme(localStorage.theme),localStorage.fontSize&&document.documentElement.style.setProperty("--main-font-size",localStorage.fontSize);